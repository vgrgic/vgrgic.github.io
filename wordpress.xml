<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2018-11-07 14:18"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>LeanArch.eu</title>
<link>http://leanarch.eu</link>
<description>Real world Agile, Scrum, Lean and IT architecture</description>
<pubDate>Wed, 07 Nov 2018 14:18:25 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://leanarch.eu</wp:base_blog_url>
<wp:author>
  <wp:author_login>vgrgic</wp:author_login>
  <wp:author_email>viktor@leanarch.eu</wp:author_email>
  <wp:author_display_name><![CDATA[Viktor Grgic]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>11287</wp:term_id>
  <wp:category_nicename>agile</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[agile]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>5354162</wp:term_id>
  <wp:category_nicename>agile-architecture</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[agile architecture]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2290</wp:term_id>
  <wp:category_nicename>architecture</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[architecture]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>13926</wp:term_id>
  <wp:category_nicename>coaching</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[coaching]]></wp:cat_name>
  <wp:category_description><![CDATA[coaching]]></wp:category_description>
</wp:category>
<wp:category>
  <wp:term_id>258714</wp:term_id>
  <wp:category_nicename>effectiveness</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[effectiveness]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>47945</wp:term_id>
  <wp:category_nicename>efficiency</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[efficiency]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>334438805</wp:term_id>
  <wp:category_nicename>less-framework-2</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[LeSS framework]]></wp:cat_name>
  <wp:category_description><![CDATA[LeSS framework]]></wp:category_description>
</wp:category>
<wp:category>
  <wp:term_id>25010</wp:term_id>
  <wp:category_nicename>metaphor</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[metaphor]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>214207413</wp:term_id>
  <wp:category_nicename>polyu-questions-agile</wp:category_nicename>
  <wp:category_parent>agile</wp:category_parent>
  <wp:cat_name><![CDATA[PolyU Questions]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4909</wp:term_id>
  <wp:category_nicename>psychology</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[psychology]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>46805</wp:term_id>
  <wp:category_nicename>scrum</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[scrum]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2205525</wp:term_id>
  <wp:category_nicename>self-organising-teams</wp:category_nicename>
  <wp:category_parent>agile</wp:category_parent>
  <wp:cat_name><![CDATA[self-organising teams]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11412</wp:term_id>
  <wp:category_nicename>software-architecture</wp:category_nicename>
  <wp:category_parent>architecture</wp:category_parent>
  <wp:cat_name><![CDATA[software architecture]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>11287</wp:term_id>
  <wp:tag_slug>agile</wp:tag_slug>
  <wp:tag_name><![CDATA[agile]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>113553</wp:term_id>
  <wp:tag_slug>agile-software-development</wp:tag_slug>
  <wp:tag_name><![CDATA[Agile Software Development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>23258</wp:term_id>
  <wp:tag_slug>archi</wp:tag_slug>
  <wp:tag_name><![CDATA[archi]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18304753</wp:term_id>
  <wp:tag_slug>architecting</wp:tag_slug>
  <wp:tag_name><![CDATA[architecting]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2290</wp:term_id>
  <wp:tag_slug>architecture</wp:tag_slug>
  <wp:tag_name><![CDATA[architecture]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>26741</wp:term_id>
  <wp:tag_slug>enterprise-architecture</wp:tag_slug>
  <wp:tag_name><![CDATA[enterprise architecture]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>214207472</wp:term_id>
  <wp:tag_slug>frederique-winslow-taylor</wp:tag_slug>
  <wp:tag_name><![CDATA[Frederique Winslow Taylor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7497</wp:term_id>
  <wp:tag_slug>hong-kong</wp:tag_slug>
  <wp:tag_name><![CDATA[hong kong]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7885</wp:term_id>
  <wp:tag_slug>leadership</wp:tag_slug>
  <wp:tag_name><![CDATA[Leadership]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1146994</wp:term_id>
  <wp:tag_slug>leadership-qualities</wp:tag_slug>
  <wp:tag_name><![CDATA[leadership qualities]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>32315070</wp:term_id>
  <wp:tag_slug>less-framework</wp:tag_slug>
  <wp:tag_name><![CDATA[less framework]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38451</wp:term_id>
  <wp:tag_slug>methodologies</wp:tag_slug>
  <wp:tag_name><![CDATA[methodologies]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9552</wp:term_id>
  <wp:tag_slug>platforms</wp:tag_slug>
  <wp:tag_name><![CDATA[platforms]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>214206412</wp:term_id>
  <wp:tag_slug>polyu-questions</wp:tag_slug>
  <wp:tag_name><![CDATA[PolyU questions]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>36382</wp:term_id>
  <wp:tag_slug>roles</wp:tag_slug>
  <wp:tag_name><![CDATA[roles]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>46805</wp:term_id>
  <wp:tag_slug>scrum</wp:tag_slug>
  <wp:tag_name><![CDATA[scrum]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11412</wp:term_id>
  <wp:tag_slug>software-architecture</wp:tag_slug>
  <wp:tag_name><![CDATA[software architecture]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2301</wp:term_id>
  <wp:tag_slug>software-development</wp:tag_slug>
  <wp:tag_name><![CDATA[software development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>26658</wp:term_id>
  <wp:tag_slug>solutions</wp:tag_slug>
  <wp:tag_name><![CDATA[solutions]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>39599480</wp:term_id>
  <wp:tag_slug>the-hong-kong-polytechnic-university</wp:tag_slug>
  <wp:tag_name><![CDATA[TheÂ Hong Kong Polytechnic University]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12147161</wp:term_id>
  <wp:tag_slug>vedors</wp:tag_slug>
  <wp:tag_name><![CDATA[vedors]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>93308</wp:term_id>
  <wp:tag_slug>vendors</wp:tag_slug>
  <wp:tag_name><![CDATA[vendors]]></wp:tag_name>
</wp:tag>
<wp:term>
  <wp:term_id>5058</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>menu-1</wp:term_slug>
  <wp:term_name><![CDATA[Menu 1]]></wp:term_name>
</wp:term>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://secure.gravatar.com/blavatar/76d53b8fbf2415cd520ade13f9f2c4fe?s=96&#038;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>LeanArch.eu</title>
		<link>http://leanarch.eu</link>
	</image>
	<item>
  <title>Contact</title>
  <link>http://leanarch.eu/contact/</link>
  <pubDate>Thu, 01 Jan 2009 11:53:14 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[LeanArch is a company registered in Hong Kong and The Netherlands.

LeanArch Limited
11A, Tower 3, The Long Beach
8 Hoi Fai Road
Tai Kok Tsui, Hong Kong

LeanArch B.V.
Handelsplein 22
3071 PR Rotterdam
The Netherlands

<a href="http://vgrgic.files.wordpress.com/2009/01/vgrgic002.jpg"><img class="alignleft  wp-image-104" src="http://vgrgic.files.wordpress.com/2009/01/vgrgic002.jpg?w=199" alt="Viktor Grgic" width="83" height="126" /></a>
Tel. +852 56622273
Skype: vgrgic
Twitter: <a title="Twitter viktor" href="http://twitter.com/vgrgic" target="_blank">vgrgic</a>
<a title="LinkedIn" href="http://hk.linkedin.com/in/vgrgic/" target="_blank">LinkedIn</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2009-01-01 11:53:14</wp:post_date>
  <wp:post_date_gmt>2009-01-01 11:53:14</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>contact</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[87]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Agile Coaching</title>
  <link>http://leanarch.eu/agile-coaching/</link>
  <pubDate>Mon, 25 Nov 2013 03:53:17 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?page_id=5</guid>
  <description/>
  <content:encoded><![CDATA[Scrum has become the most used framework for delivering software products today. Agile Coach helps you introduce Agile mindset and Scrum in your organisation. We believe that customised approach is the most effective way of achieving great results.

We coach management and teams on-the-fly, which minimises impact on time and energy your teams spend in delivering a solution. The results are visible after first sprint (about one month).

Agile and Scrum will help your teams become more effective by delivering more value in short cycles.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2013-11-25 03:53:17</wp:post_date>
  <wp:post_date_gmt>2013-11-25 03:53:17</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile-coaching</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[84]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/11/25/8/</link>
  <pubDate>Mon, 25 Nov 2013 03:55:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=8</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2013-11-25 03:55:00</wp:post_date>
  <wp:post_date_gmt>2013-11-25 03:55:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>8</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>7</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/11/25/agile-coaching-consultancy/</link>
  <pubDate>Mon, 25 Nov 2013 03:55:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=9</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2013-11-25 03:55:00</wp:post_date>
  <wp:post_date_gmt>2013-11-25 03:55:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile-coaching-consultancy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[5]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Architecture</title>
  <link>http://leanarch.eu/lean-architecture/</link>
  <pubDate>Mon, 25 Nov 2013 04:02:03 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?page_id=10</guid>
  <description/>
  <content:encoded><![CDATA[Requirements and strategy is changing constantly. Agile embraces, and even enables faster change. Architecture must keep up with this change. By applying lean principles in enterprise and solution architecture, you will still maintain cohesive IT landscape, and sustainable speed.

LeanArch provides custom training: <strong>Lean / Agile Architecture</strong> and coaching for architects, analysts and developers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2013-11-25 04:02:03</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:02:03</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lean-architecture</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[144]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Track record</title>
  <link>http://leanarch.eu/references/</link>
  <pubDate>Mon, 25 Nov 2013 04:02:32 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?page_id=12</guid>
  <description/>
  <content:encoded><![CDATA[LeanArch Limited provides services for more than 15 years. We have a long track record of successful deliveries and Agile / Scrum implementations. A few statements from the customers, also found on <a href="http://hk.linkedin.com/in/vgrgic/">LinkedIn</a>:

<em>"Viktor is a great Agile coach. He coached a hybrid (onsite and nearshore) team into their first real Agile/Scrum project"</em> - CEO at Enigmatry
<em>"Viktor, is a lean achitect in the most true sense."</em> - Programme Manager ICT - Port of Rotterdam N.V.
<em>"Viktor is one of the very few Software Architects I have worked with who really delivers Value for Money."</em> - Project Manager HaMIS at Port of Rotterdam N.V.
<em>"Viktor has a keen sense to quickly grasp the specific (cultural) issues/diferences in an organisation."</em> - Manager IT Applications at SETAR N.V.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2013-11-25 04:02:32</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:02:32</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>references</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[272]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Trainings</title>
  <link>http://leanarch.eu/training/</link>
  <pubDate>Mon, 25 Nov 2013 04:03:04 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?page_id=15</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Agile and Scrum introduction - 2 day</h2>
Your organisation and teams will understand what Agile and Scrum is and have enough knowledge to start applying it in their work.
<h2>Product Vision and Backlog - 1 day</h2>
After this training, participants will be able to define a clear and shared product vision. The vision is the driving force behind the product backlog. Both enable teams, product owner and customer to understand each other and focus on what is most important. Product owner is also able to communicate value for business, and continuously manage milestones and planning.
<h2>User Stories writing &amp; splitting - 1 day</h2>
This training enables your teams and product owners to create and maintain a high quality product backlog for the first following sprints.
<h2>Agile Architecture - 2 day</h2>
In this training, participants will learn how to deal with architecture and design in Agile environment without conflicting with Agile principles. This training is useful for professionals dealing with both, enterprise and software / application level challenges.
<h2>Agile Testing - 1 day</h2>
In this hands-on course, developers will learn to apply TDD (Test-Driven Development) and BDD (Behavior-Driven Development) as part of software development cycle.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2013-11-25 04:03:04</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:03:04</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>training</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[85]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/11/25/17/</link>
  <pubDate>Mon, 25 Nov 2013 04:03:58 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=17</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2013-11-25 04:03:58</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:03:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>17</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>4</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[15]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/11/25/18/</link>
  <pubDate>Mon, 25 Nov 2013 04:03:58 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=18</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>2013-11-25 04:03:58</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:03:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>18</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>6</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[12]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/11/25/19/</link>
  <pubDate>Mon, 25 Nov 2013 04:03:59 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=19</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2013-11-25 04:03:59</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:03:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>19</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>3</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[10]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Refactoring Enterprise Architecture</title>
  <link>http://leanarch.eu/2012/06/24/refactoring-enterprise-architecture/</link>
  <pubDate>Sun, 24 Jun 2012 21:23:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/06/24/refactoring-enterprise-architecture/</guid>
  <description/>
  <content:encoded><![CDATA[<div class="separator" style="clear:both;text-align:center;"></div><div class="separator" style="clear:both;text-align:center;"><a href="http://vgrgic.files.wordpress.com/2012/06/487df-old_architecture_sibiu_by_dccanim_photo.jpeg" style="clear:right;float:right;margin-bottom:1em;margin-left:1em;"><img border="0" height="240" src="http://vgrgic.files.wordpress.com/2012/06/487df-old_architecture_sibiu_by_dccanim_photo.jpeg?w=300" width="320" /></a></div>For the past 10+ years, I have struggled with concept called Enterprise Architecture. I began as a programmer delivering not really great systems, but they were usable and delivered pretty fast. After I finished my computer science education, for many years&nbsp;fulfilled&nbsp;software architect positions and last 7+ years I was often called enterprise architect, although I don't like the term at all.<br /><br />Well, I learned so much B.S. about enterprise architecture, that I eventually started searching for a completely new ways of dealing with the question like "Why do we need enterprise architecture?". I didn't find the answer in&nbsp;explanations&nbsp;from others. Maybe only bits of it. Scattered all over the internet and books.<br /><br />Many years ago I have embraced Agile Manifesto as a really great improvement in our profession. The only problem is, the are still no real answers how to deal with IT architecture and related questions.<br /><br />Scott W. Ambler is probably the most known figure in the combination of Agile and Enterprise Architecture, but his <a href="http://www.agiledata.org/essays/enterpriseArchitecture.html">article</a> about Enterprise Architecture starts like this:<br /><blockquote class="tr_bq">When project teams work under the assumption that they can do anything that they want, that they can use any technology that they want, chaos typically results. &nbsp;Functionality and information will be duplicated and reuse will occur sporadically if at all. &nbsp;Systems will not integrate well...</blockquote>I don't know about you, but I find this nonsense. Even disrespectful towards guys and girls who actually build the systems.<br />So, based on Agile values I've started for number of years defining and applying my own way of dealing with IT architecture on project, programme and enterprise level.<br /><br />This can be compiled into following principles. The correct formulation is still work in progress, so I welcome any feedback:<br /><ol><li>Teams committed to deliver parts of the enterprise landscape should also be responsible for the overall enterprise level architectural needs.</li><li>Any architectural framework, methodology or best practice is a potential waste unless proven otherwise by directly contributing in delivery of business value.</li><li><span style="background-color:white;">Enterprise architecture is defined just-in-time and emerges in the landscape driven by current business needs. At the same time directed by long term vision.</span></li><li><span style="background-color:white;">Simplification of an enterprise architecture should be about the removal of unnecesary IT components instead of making nice looking drawings which usually oversimplify the real life complexity.</span></li><li><span style="background-color:white;">The best enterprise architecture is also most refactored one.</span></li></ol>So, this is my first blog about dealing with enterprise architecture questions the agile way.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2012-06-24 21:23:00</wp:post_date>
  <wp:post_date_gmt>2012-06-24 21:23:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>refactoring-enterprise-architecture</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[4871115636859376150]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[AndrÃ© Kampert]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07243436006669155006</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-06-25 19:19:11</wp:comment_date>
    <wp:comment_date_gmt>2012-06-25 19:19:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice post Viktor! I think your principles formulate a very healthy approach to enterprise architecture. Start off small, trust your co-workers and keep an open culture. Be ambitious for results, instead of job titles and allow for implicit structures to emerge...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-06-25 19:19:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Winfried Scheulderman]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/11379197437957098445</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-06-26 06:43:45</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 06:43:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Viktor,How do these principles relate to the emerging concept of agile architecture?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-06-26 06:43:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-06-26 20:14:09</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 20:14:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Short answer would be: It&#039;s the same thing, only different scale.Longer answer: This implies that we do not need the notion of enterprise architecture as something special. For most enterprise architects this sounds ridiculous. One of the main reasons why I started this blog is to give answers on typical questions enterprise architects and others have on this subject, instead of simply stating: There is just architecting as a discipline and no such thing as agile enterprise architecture.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-06-26 20:14:09</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>5</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-06-26 20:15:13</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 20:15:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-06-26 20:15:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Technical debt: should product owner or team prioritize it?</title>
  <link>http://leanarch.eu/2012/06/26/technical-debt-should-product-owner-or-team-prioritize-it/</link>
  <pubDate>Tue, 26 Jun 2012 21:56:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/06/26/technical-debt-should-product-owner-or-team-prioritize-it/</guid>
  <description/>
  <content:encoded><![CDATA[<p>Today we had a short discussion about who prioritizes technical debt in our Scrum project. Everybody agreed that team should be concerned about technical debt and be aware of "negative value" caused by technical debt.</p><p>The always difficult challenge is when to spend money to get rid of it. We know the pain of technical debt in Scrum, but letting users wait because team needs to focus on technical debt is often unacceptable. There are many more considerations, which make such decision not easy to take. <a href="http://martinfowler.com/bliki/TechnicalDebtQuadrant.html" target="_blank">Technical Debt Quadrant</a> from Martin Fowler is helpful in this area. The question is, should team be empowered to make such decision or does product owner make these decisions based on suggestions from the team.</p><p>My opinion is that people who know what they are talking about and understand the consequences should also make decisions. Also, it is part of the professionalism and one of the lean principles that developer should always strive for high quality. If he/she has no complete freedom to decide to do so, then there is a chance that developer does not feel&nbsp;accountable&nbsp;enough for technical debt. After making suggestion towards the product owner, a wise product owner should always follow up and decide in favor of team's wish. Any other decision implies that developers are incapable of understanding business priorities or simply inconsiderate of these priorities. Both problems should be solved separately and therefore should not be used as a reason.</p><p>So, the team should decide when to get rid of the debt and explain to product owner that in a following sprint they will deliver less features because of debt. The team also explains the negative business value of having technical debt.</p><p>Fortunately, developers in our case can get along really well with product owners. Everyone has the same goal and understand each other. This makes the problem much less present.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2012-06-26 21:56:00</wp:post_date>
  <wp:post_date_gmt>2012-06-26 21:56:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>technical-debt-should-product-owner-or-team-prioritize-it</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[8390927288718178375]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dealing with quality requirements in Agile / Scrum</title>
  <link>http://leanarch.eu/2012/06/30/dealing-with-quality-requirements-in-agile-scrum/</link>
  <pubDate>Sat, 30 Jun 2012 15:59:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/06/30/dealing-with-quality-requirements-in-agile-scrum/</guid>
  <description/>
  <content:encoded><![CDATA[You have probably heard of non-functional requirements. One of the most used phrases by architects. Rather ridiculous if you consider it means 'broken' in English. The term is already being transformed into "quality requirements" by many.<br /><br />Example of a quality requirement: response time of a specific request in our system. Or more ambiguous: suitability or maturity. The last two are part of <a href="http://en.wikipedia.org/wiki/ISO/IEC_9126" target="_blank">ISO/IEC 9126 standard</a> full of other nice sounding academic words. ISO/IEC 9126 with all the ilities was for me never really useful in practice because it replaces common sense, which proved to be much better without the standard. The common sense of defining our ilities should always be driven by explicitly stated requirements from users and stakeholders. <br /><br />Question: <i>"In how much time does user wants to complete his registration?"  </i><br />Answer: <i>"About one minute... In that case, number of clicks should be very low and response times very fast." </i><br /><br />My point is: I don't need some standard to figure this out. What I do always need is a way to identify them based on real needs from users and business, sometimes quantify them, but mainly a way to measure them.&nbsp;The answer came partially from Planguage created by Tom Gilb. Although I must admit I use it in a rather simplified manner.  A quality requirement which I wish to precisely identify and follow is placed in the following table: <br /><div class="p1"><br /></div><table cellpadding="0" cellspacing="0" class="t1"><tbody><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Tag</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>A unique identifier of the quality requirement</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Description &nbsp; &nbsp; &nbsp; &nbsp;</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>Identifier a bit more explained</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Scale</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>The scale of measure used to quantify the statement</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Meter</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>The process or device used to establish location on a Scale</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Must</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>The minimum level required to avoid failure</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Plan</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>Realistic level considering we have limited budget and time</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1">Wish</span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i>User and business would say âWauw!â if we achieved this level</i></span></div></td></tr><tr><td class="td1" valign="top"><div class="p2"><span class="s1"><b>Current</b></span></div></td><td class="td2" valign="top"><div class="p2"><span class="s1"><i><b>Currently measured level after each sprint</b></i></span></div></td></tr></tbody></table><br />Nice thing about Scrum is that when you deliver software after each sprint, users and business can tell you how satisfied they are and if quality in identified areas has improved. Even better is the fact that for most of the quality requirements you don't need to define them before sprint starts, but simply make a best guess, measure qualities afterwards and improve them in the next sprints. <br /><br />For me the most important part of quality requirements management is the "current" value part. Is it high or low enough? No? Let's improve it!<br /><br />Question: <i>"How easy to use should this page be?"</i><br />Answer: <i>"We have no idea, because we don't know how often user will use it and it is too much hassle to find that out. User sometimes think she will use it often, but eventually she doesn't. It is costly to make it very user friendly. Let's choose the basic / cheaper version and hear from first users what they think about it. If they are not happy, we'll adjust it accordingly in the following sprint".</i><br /><i><br /></i>Another nice thing about Scrum is disappeared need for heavy requirements management because of so many feedback loops. For most of them, we simply don't need to think about quality requirements much. As soon as you deliver software after each sprint, requirement (e.g. system stability) is going to hit you back (e.g. system down time) and team must improve it. On other hand, this should not prevent a team from making sure that obvious requirements are in place before end of a sprint as part of <i>Definition of Done</i>. E.g. "after this sprint we'll have aprox. 1000 users and 100.000 requests per day. Can our system handle this load?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>22</wp:post_id>
  <wp:post_date>2012-06-30 15:59:00</wp:post_date>
  <wp:post_date_gmt>2012-06-30 15:59:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dealing-with-quality-requirements-in-agile-scrum</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[7900234695437698882]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-02 07:00:45</wp:comment_date>
    <wp:comment_date_gmt>2012-07-02 07:00:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I really like your approach on measuring quality requirements. Your table is a nice starting point to try and apply this myself.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-02 07:00:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>7</wp:comment_id>
    <wp:comment_author><![CDATA[Eric Lopes Cardozo]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blog.ivarjacobson.com/more-accurate-requirements-when-process-is-lost/#more-402</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-02 18:23:56</wp:comment_date>
    <wp:comment_date_gmt>2012-07-02 18:23:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I fully agree with the approach, Victor. I have no clue who coined the term non-functionals. To me these ill formed names can have negative impact on projects and process. There must be a reason why quality requirements are often ignored until late in a project. From a linguistic perspective these so-called non-functionals can be recognized as nouns where in reality they are verbs; verbs meaning &#039;hidden&#039; processes if you will. Applying meters and scales is good a way to &#039;denominalize&#039; these hidden processes and to reactive them. Once active we are able to build and test them.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-02 18:23:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>10</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-03 22:00:58</wp:comment_date>
    <wp:comment_date_gmt>2012-07-03 22:00:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks and I would be glad to hear back what your experience is.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-03 22:00:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>11</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-03 22:09:57</wp:comment_date>
    <wp:comment_date_gmt>2012-07-03 22:09:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good to hear that from You! :-) Thanks for the link.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-03 22:09:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Design for Change as an Agile Architecture principle</title>
  <link>http://leanarch.eu/2012/07/02/design-for-change-as-an-agile-architecture-principle/</link>
  <pubDate>Mon, 02 Jul 2012 07:12:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/02/design-for-change-as-an-agile-architecture-principle/</guid>
  <description/>
  <content:encoded><![CDATA[The best definition of a legacy system: The system that works in production. Unfortunately, I can't remember from whom I heard this definition.<br /><br />Your customer or employer runs his company with legacy systems. The technology in use might be very old, but it does deliver business value. That can't be said for a system that you might be designing right now. The chances are that, if you are lucky as an architect, your system will shortly after hits the production be marked as legacy or ready for replacement soon. If you are even more lucky, the system will be extended and somewhat adjusted for few years to come.<br /><br /> Eventually, the inevitable will happen. IT management decides that operational costs are too high, time-to-market for changes is too long, technology is not supported any more and so on. It seems that nowdays with all the technology changes this problem is only worsened.<br /><br />But, is it really inevitable that so many large systems are replaced completely?<br /><br />One of the main causes is <b>tendency to prevent this problem in first place</b>. The main words used by architects are flexibility and generic solutions. <i>If our system is flexible and generic enough, then we can handle our future requirements. </i>The result is usually wishful thinking and just more complex solutions. Complex IT systems are always sooner outdated than simple ones. It is nowdays more and more difficult to predict the future, considering the pace in which business people change their mind.<br /><br />It is much safer and cheaper to build system which will NOT last very long as it is designed. More precise: <b>defined architecture will not last for long</b>. If you build a system that is <b>designed to be changed</b>, than you are NOT building generic components, but only making sure that specific solution is cheap in case of partial replacement. This goes hand in hand with Scrum where you are always making sure that you are able to embrace the change, no matter how extreme this change might be.<br /><br />Principles in achieving this:<br /><ol><li>The simplest possible solution is cheapest one to replace.</li><li>When introducing new system part or technology, you should find out how much it will cost to replace it.</li><li>Prevent depending on underlaying technology as much as possible.</li><li>Make sure services / interfaces are based on well defined loosely coupled functions your user and business understands. Do not make generic SOAP interface or some other technical standard interface. Replacing one technical standard with another is much cheaper than changing functionally highly coupled systems.</li></ol><div>My belief and experience is that when equiped with these principles, your system will have a bigger chance of evolving instead of being replaced completely.</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>23</wp:post_id>
  <wp:post_date>2012-07-02 07:12:00</wp:post_date>
  <wp:post_date_gmt>2012-07-02 07:12:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>design-for-change-as-an-agile-architecture-principle</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[8299926700907508032]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>8</wp:comment_id>
    <wp:comment_author><![CDATA[edwinschouten]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://edwinschouten.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-02 18:41:31</wp:comment_date>
    <wp:comment_date_gmt>2012-07-02 18:41:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Interesting statement, to which I at least partly agree. I&#039;m looking forward to some examples that elaborate all of the statements. I can also imagine the statements are valid for the presentation and business logic layers in an application, but you do need tight architectural controll on the data layer and interfacing between different applications.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-02 18:41:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>9</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-03 21:59:43</wp:comment_date>
    <wp:comment_date_gmt>2012-07-03 21:59:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[In the following postings, I&#039;ll give concrete examples instead of just nice sounding statements. :-) Even data layer can be just as changeable as any other layer. Interfaces are different story and will be my next posting.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-03 21:59:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>33</wp:comment_id>
    <wp:comment_author><![CDATA[Nila Akther]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-10-17 16:02:21</wp:comment_date>
    <wp:comment_date_gmt>2013-10-17 16:02:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great blog you have here.. Itâs hard to find excellent writing like yours nowadays. I honestly appreciate people like you! Take care!<a href="http://www.paynephotographic.com" rel="nofollow">photography</a>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-17 16:02:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Your IT project and it's goal is never rational</title>
  <link>http://leanarch.eu/2012/07/14/your-it-project-and-its-goal-is-never-rational/</link>
  <pubDate>Sat, 14 Jul 2012 12:49:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/14/your-it-project-and-its-goal-is-never-rational/</guid>
  <description/>
  <content:encoded><![CDATA[<h3>  5 Whys</h3>One of the important practices in finding out what the real need behind a stated requirement is asking "why" five times. But, the chances are that other side will get annoyed or that real reason is simply weird. E.g. "because I simply want this!". In other cases, the customer can even state imaginary, untrue reasons just to get you of his back.<br /><br /><h3>  We want something for emotional reasons</h3>When I used to work for Xebia, I requested Macbook Pro instead of in my opinion lousy Dell laptop. I was actually the first one to make such a request. Nowadays, almost all of the Xebia guys use Macbooks.<br /><a href="http://vgrgic.files.wordpress.com/2012/07/2ce6d-emotion.jpg" style="clear:right;float:right;margin-bottom:1em;margin-left:1em;"><img border="0" src="http://vgrgic.files.wordpress.com/2012/07/2ce6d-emotion.jpg" /></a>First manager asked me if I could elaborate my reasons and give arguments why Macbook is better for my work and not only more expensive. I tried of course, but it wasn't very convincing. Before I almost got a "no" I tried my luck with another manager, by giving another load of arguments. Many of them not really true, but more just opinions. Before I could even finish my argumentation he just said:<br /><br />"You mean, because it's cool!?"<br />After I said yes, he made sure that I get fully loaded Macbook Pro.<br /><br />As an IT guy or girl you can judge people for wanting something without rational reasons, but the truth is that the real reason behind everything you do is not rational, but emotional.<br /><br /><h3>  Money is never the real reason</h3>Even this one:<br /><br />"Why do you want this system?"<br />"Because I can make a lot of money with it."<br />"Why do you want to make money? You obviously not making it, but getting it from others."<br />"Because it makes me feel successful!" or maybe something profound like "Well, maybe not to make money, but to improve someone's life and that makes me feel good."<br /><br />Most shared reason why people want or do something is to have a meaningful life, to achieve or become somebody in the eyes of others.<br /><br />In contrary to common belief that money or profit is the ultimate requirement for anything in business world, I believe that money is actually never the real reason. People who say this don't know much about themselves or are simply addicted to one of the most common addictions in the world in an unhealthy manner.<br /><br /><h3>  Asking why&nbsp;<span style="background-color:white;">still important</span></h3><div>The reason why an architect or anybody else should ask "why" is not to change someone's mind, but to fully understand the needs and the world surrounding the needs. At first these are rational, but if you go far enough you get to hear emotional ones. A few things to bear in mind when hearing the answer:</div><div><ul><li>"...because our company needs this" is most often an ego wearing a mask and pretending to care for the company.</li><li>go back and forth when asking -why-: "I want this iPhone app, so I can help others." "What makes you think this app will be helpful?".</li></ul></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>24</wp:post_id>
  <wp:post_date>2012-07-14 12:49:00</wp:post_date>
  <wp:post_date_gmt>2012-07-14 12:49:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>your-it-project-and-its-goal-is-never-rational</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[2572431096113383985]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Do Agile teams need PSA documents? Well, no!</title>
  <link>http://leanarch.eu/2012/07/15/do-agile-teams-need-psa-documents-well-no/</link>
  <pubDate>Sun, 15 Jul 2012 13:40:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/15/do-agile-teams-need-psa-documents-well-no/</guid>
  <description/>
  <content:encoded><![CDATA[<h3>      It's an impediment</h3>PSA stands for Project Start Architecture and is part of DYAÂ®. PSA documents are one of the most written documents by architects in Netherlands. The purpose of a PSA document is to connect "architectural thinking" with organizational changes. In less vague words: It makes sure that a project gets fences by stating principles, solution direction, guidelines and some decisions before the project starts. At the same time, it's not "solution architecture".<br />Still confusing? Well, it gets even worse. It describes also any or all of the following:<br /><ul><li>It makes sure that complete life cycle is taking care of by stating operational and flexibility requirements</li><li>It makes sure you talk less to people in other teams, because most things are already written down.</li><li>It makes sure you don't discuss standards, guidelines and standard solutions, because that's already done before the project starts.</li><li>Even the means to achieve the project goal are taking care of.</li><li>Actually, most of the choice are already made and written down in PSA.</li></ul><div>You can read it here:&nbsp;<a href="http://dsa.sogeti.nl/wp-content/uploads/2009/07/White_Paper_Project_Start_Architectuur_1-0_nov_2007_tcm13-42134.pdf" target="_blank">White Paper: Project Start Architectuur</a> (dutch). There is even an <a href="http://www.dya.info/sites/dya.info/files/attachments/Point%20of%20View%20Agile_Architectuur%202012_0.pdf" target="_blank">"Agile Architectuur"</a> white paper written by the same company stating stuff like "PSA Scrum team" which is ridiculous considering they deliver a document which cripples the team and its creative freedom.<br /><span style="background-color:white;">Everything in this way of thinking is based on mindset that an Agile team should be kept on leash because otherwise chaos will emerge and an Agile team strives some other goal different from enterprise goals. I'll elaborate more on this in the following posts.</span></div><div><br /></div><div>PSA documents are one of the common impediments solved by putting them away and pushing team members to talk to others and think for themselves, instead of pointing at some document. Until they realize that everything document describes is better understood by talking to people or more often not even in line with changing reality.&nbsp;<span style="background-color:white;">Let's not forget that any document is just a mean to communicate with each other. It has no direct value.</span></div><div><br /></div><div>The worst thing of all is that whole purpose of this document is to prevent teams to think outside the boundaries of their assignment.</div><div><br /></div><div>Anyone who uses PSA documents does not use them as defined or does not understand Agile and Scrum.</div><div><br /></div><h3>      But, what do I replace PSA with?</h3><div><table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float:right;margin-left:1em;text-align:right;"><tbody><tr><td style="text-align:center;"><a href="http://vgrgic.files.wordpress.com/2012/07/9626e-cockburncommunication.gif" style="clear:right;margin-bottom:1em;margin-left:auto;margin-right:auto;"><img border="0" height="276" src="http://vgrgic.files.wordpress.com/2012/07/9626e-cockburncommunication.gif?w=300" width="400" /></a></td></tr><tr><td class="tr-caption" style="text-align:center;">Source: Alistair Cockburn</td></tr></tbody></table>When a Scrum team gets assignment, it will usually start iteration zero. In this iteration, the team talks to stakeholders, architects, domain experts, users and other teams, mostly by means of workshops (e.g. Product Vision Box). First and foremost, to understand functional and technical domain well enough in order to:</div><div><ul><li>make only the necessary, costly to change architectural decisions, needed to start with first stories. E.g. programming language, user interface technology, dependencies on other systems.</li><li>know there are guidelines, dependencies, strategic goals and so on. The team will feel the responsibility to bring those back later on once they are affected by the user stories.</li><li>encourage discussion about correctness and validity of corporate standards, guidelines and choices.</li></ul><div>An Agile team will usually put some of this stuff on Wiki or improve corporate architecture Wiki, but most should be in heads of each team member. If it is too much to remember, than you probably have discussed too much stuff too soon.</div></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2012-07-15 13:40:00</wp:post_date>
  <wp:post_date_gmt>2012-07-15 13:40:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>do-agile-teams-need-psa-documents-well-no</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[4884841855242633627]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>12</wp:comment_id>
    <wp:comment_author><![CDATA[Machiel]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://machielgroeneveld.nl</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-16 07:19:55</wp:comment_date>
    <wp:comment_date_gmt>2012-07-16 07:19:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So the PSA is useful, but the problems this document is intended to solve should not all be solved before starting the project but during the project when you have more knowledge and the means to experiment?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-16 07:19:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>13</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-16 19:03:20</wp:comment_date>
    <wp:comment_date_gmt>2012-07-16 19:03:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Machiel,True, but you also just diminished &quot;PSA is useful&quot; part of your sentence. :-)Thanks for your comment.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-16 19:03:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>14</wp:comment_id>
    <wp:comment_author><![CDATA[Flang]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/16427821288053535109</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-17 09:34:06</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 09:34:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So a PSA has the wrong format (a document) and the wrong scope (irrelevant information). I agree. But i still would argue in favour of architecture on an organizational level. The thing is that investments on an organization level should often be reused by business projects. To deliver this information to projects in an effective and usable form is what i would like to call Agile (enterprise) architecture. Of course this can be done by the projectteam itself ... that depends on the context. But i would prefer that the projectteam can start with a focus on the projectscope and still is able to integrate into existing infrastructure.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-17 09:34:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>15</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-18 10:06:58</wp:comment_date>
    <wp:comment_date_gmt>2012-07-18 10:06:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You are right. &quot;Architecting&quot; on organizational level is still very much important. Delivering this information to teams is of course crucial. Different teams and people interacting is even more important in order to make sure you don&#039;t get infrastructure mess.We do lack or even crave for information flow / feedback from teams who actually deal with real architecture. PSA documents are obstructing this.What we really must change is the way &quot;enterprise architecture&quot; stuff is being done by starting that there is no such thing as (Agile or not) enterprise architecture; defined and guarded by enterprise architects. As far as we can talk about architecture on enterprise level, it is the actual real life complex landscape of IT systems connecting with each other and delivering business value. Any other stuff is just different kind of domain knowledge and long term vision. It has nothing to do with architecture. IT systems landscape is too organic to control it by predefined architecture. Anyone trying that is just obstructing delivery of business value. Also, any enterprise architecture definition is oversimplification of the reality. I&#039;ll explain this better in the coming posts.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-18 10:06:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>23</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-10-17 09:09:37</wp:comment_date>
    <wp:comment_date_gmt>2012-10-17 09:09:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A quote of mine is: &quot;Creativity flourishes on a solid base of routine.&quot; To get routine, we need structure and repeating processes. Isn&#039;t EA providing this structure? And yes, this structure is changing and yes ... it is just a small part of the (life)story of a teammember, but we need structure. I see it as a battle between the network structure of information and the lineair structure of information of individual people. The first is a mean, the latter is the end.Johan Theunissen]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-17 09:09:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>24</wp:comment_id>
    <wp:comment_author><![CDATA[saina bondana]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/13747535617553462863</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-10-19 10:22:00</wp:comment_date>
    <wp:comment_date_gmt>2012-10-19 10:22:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This comment has been removed by a blog administrator.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-19 10:22:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>27</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-05-02 08:43:37</wp:comment_date>
    <wp:comment_date_gmt>2013-05-02 08:43:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What complete nonsense. Stating that an agile project does not need any restrictions at all is very strange. That amounts to advocating for an enterprise to execute completely autonomous projects. That is exactly what has led to the fragmented, overly complex and non-agile IT landscapes must organisations suffer from. The agile PSA provides as much autonomy to the project as possible and only limits this where this could hurt higher level interests. This is discussed with stakeholders of the project and stakeholders of the overall IT landscape and the results are agreements on the boundaries. Can be done in a single workshop. The enterprise architect is expert on the potential risks for the overall IT landscape and facilitates discussion among stakeholders, the resulting agreements for the PSA. If there are no risks at all then the PSA is empty. In practise this is never the case. It seems very hard to disagree with as the only alternative is to always have completely autonomous projects which is clearly utter nonsens.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-02 08:43:37</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>28</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-05-02 13:02:00</wp:comment_date>
    <wp:comment_date_gmt>2013-05-02 13:02:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, anonymous, I don&#039;t think I&#039;m saying that agile does not need restrictions and certainly not that they operate autonomously . Actually Agile projects have much more restrictions in order to maintain or improve overall quality. These are (re)defined continuously by the teams and teams use the input from experts (which is a much better word than &#039;enterprise architect&#039; and forces a person to actually be an expert) and collaborate a lot all the time with many stakeholders and not via some very limited and inflexible document.What you call &quot;higher interests&quot; and I guess lower interests is incorrect. Each team has the highest possible interest. The usual reason why a team would have limited interests is because of a document like PSA.I would love to elaborate more on this if you could provide your name.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-02 13:02:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2188</wp:comment_id>
    <wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
    <wp:comment_author_email>info@anonymous.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>85.159.97.4</wp:comment_author_IP>
    <wp:comment_date>2016-04-12 20:33:41</wp:comment_date>
    <wp:comment_date_gmt>2016-04-12 12:33:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jeeeezzzz Viktor, very very short sighted, amateurish and blind. If you really think agile/scrum is the ultimate holy paradigm you are beyond saving. Just like any hype it has its good points, but is not a cure-all. It is OK to make a living by following hypes, but please don't put yourself on a self-build pedestal, that is very irritating!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1460464422</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1460464422.095921993255615234375;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1460464422</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2189</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>112.120.103.97</wp:comment_author_IP>
    <wp:comment_date>2016-04-12 20:58:32</wp:comment_date>
    <wp:comment_date_gmt>2016-04-12 12:58:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Anonymous, any concrete example of what I said that supports your judgement? I don't recognize any of it.
Providing your name would be also nice.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1460465913</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1460465914.1163198947906494140625;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1460465914</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2120</wp:comment_id>
    <wp:comment_author><![CDATA[Prof David]]></wp:comment_author>
    <wp:comment_author_email>taylor.david969@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://powerofscrum.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>122.167.195.189</wp:comment_author_IP>
    <wp:comment_date>2016-01-27 19:57:34</wp:comment_date>
    <wp:comment_date_gmt>2016-01-27 11:57:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You have a wonderful post. Actually, Agile projects have much more restrictions in order to maintain or improve overall quality. I observe the efficiency of agile project management with scrum but without power, they have a very limited capability to make sure the execute is done on efforts and with the necessary quality.Here are some good for my mind casts about scrum: http://bit.ly/1TmSUlo]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>99355155</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1453895856</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1453895856.7002589702606201171875;s:5:"event";s:9:"check-ham";s:4:"user";s:15:"powerofresearch";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1453895857</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2255</wp:comment_id>
    <wp:comment_author><![CDATA[Eelco Rommes]]></wp:comment_author>
    <wp:comment_author_email>eelco.rommes@XS4ALL.NL</wp:comment_author_email>
    <wp:comment_author_url>http://eelcorommes.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>37.0.93.18</wp:comment_author_IP>
    <wp:comment_date>2016-09-28 17:49:39</wp:comment_date>
    <wp:comment_date_gmt>2016-09-28 09:49:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A PSA, or any imposed architecture, should be as small as possible. Such architecture documents limit the creative freedom of others and this should only be done for very, very good reasons.

A PSA is usually created by a few people at the worst possible time: before a project starts. This is a moment where we have not had the chance to learn anything because we have not done anything yet. Architects should recognize that and be humble about it and not make tons of decisions beforehand, especially without consulting the team that will realise the product.

The tone of voice in many PSA's is interesting. Often, they are full of 'demands' and 'rules' and 'laws'. "Thou shalt this and that!" It comes across as rather arrogant and not very helpful at all. Architecture is about solving problems and making trade-offs, it's not about creating more problems that can only be solved in an Esscher drawing.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>30790988</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1475056179</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1475056179.9906919002532958984375;s:5:"event";s:9:"check-ham";s:4:"user";s:11:"eelcorommes";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1475056180</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2258</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>223.197.252.78</wp:comment_author_IP>
    <wp:comment_date>2016-10-05 14:48:43</wp:comment_date>
    <wp:comment_date_gmt>2016-10-05 06:48:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Eelco, yes, I recognise that too.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1475650124</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1475650124.876059055328369140625;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>27523000316</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1475650125</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>2ce6d-emotion</title>
  <link>http://leanarch.eu/2012/07/14/your-it-project-and-its-goal-is-never-rational/2ce6d-emotion/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:29 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/07/2ce6d-emotion.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2013-11-25 04:07:29</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2ce6d-emotion</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>24</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/07/2ce6d-emotion.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://4.bp.blogspot.com/-Yly2Wz2MBVY/UAFu52CMe9I/AAAAAAAAFYs/3EhzZs4LdJw/s1600/emotion.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>9626e-cockburncommunication</title>
  <link>http://leanarch.eu/2012/07/15/do-agile-teams-need-psa-documents-well-no/9626e-cockburncommunication/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:29 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/07/9626e-cockburncommunication.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>36</wp:post_id>
  <wp:post_date>2013-11-25 04:07:29</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>9626e-cockburncommunication</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>25</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/07/9626e-cockburncommunication.gif</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://3.bp.blogspot.com/-UILx6fkr_N8/UALFkRbelSI/AAAAAAAAFY4/WH5PbJlv58o/s1600/CockburnCommunication.gif]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>33edd-incredible-lego-art-by-nathan-sawaya-yellow</title>
  <link>http://leanarch.eu/2012/07/28/complex-vs-complicated/33edd-incredible-lego-art-by-nathan-sawaya-yellow/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:29 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/07/33edd-incredible-lego-art-by-nathan-sawaya-yellow.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>38</wp:post_id>
  <wp:post_date>2013-11-25 04:07:29</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>33edd-incredible-lego-art-by-nathan-sawaya-yellow</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>29</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/07/33edd-incredible-lego-art-by-nathan-sawaya-yellow.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://3.bp.blogspot.com/-1RIAup-bbiE/UBQejt_YWzI/AAAAAAAAFbg/qdMvrPXiYJI/s1600/Incredible-LEGO-Art-by-Nathan-Sawaya-Yellow.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>7dabb-k9wit</title>
  <link>http://leanarch.eu/2012/07/30/bonsai-agile-architecting-metaphor/7dabb-k9wit/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:30 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/07/7dabb-k9wit.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>40</wp:post_id>
  <wp:post_date>2013-11-25 04:07:30</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>7dabb-k9wit</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>30</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/07/7dabb-k9wit.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://4.bp.blogspot.com/-JGJIujywM8o/UBawkaUyxsI/AAAAAAAAFb0/W6DeCAJJNcw/s1600/k9WiT.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2542a-231834610</title>
  <link>http://leanarch.eu/2012/07/25/functionally-well-defined-interfaces-crucial-for-design-for-change/2542a-231834610/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:30 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/07/2542a-231834610.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>41</wp:post_id>
  <wp:post_date>2013-11-25 04:07:30</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2542a-231834610</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/07/2542a-231834610.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://4.bp.blogspot.com/-V6VvJ0fnquo/UA__wIA6nmI/AAAAAAAAFbQ/ofK5bJHJY0k/s1600/231834610.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>487df-old_architecture_sibiu_by_dccanim_photo</title>
  <link>http://leanarch.eu/2012/06/24/refactoring-enterprise-architecture/487df-old_architecture_sibiu_by_dccanim_photo/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:30 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/06/487df-old_architecture_sibiu_by_dccanim_photo.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>43</wp:post_id>
  <wp:post_date>2013-11-25 04:07:30</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>487df-old_architecture_sibiu_by_dccanim_photo</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>20</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/06/487df-old_architecture_sibiu_by_dccanim_photo.jpeg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://4.bp.blogspot.com/-8ntAelHnahc/T-eE7Ad6ITI/AAAAAAAAFXQ/qzvD2QC7x1Q/s1600/Old_architecture_Sibiu_by_dccanim_photo.jpeg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>c41be-upvc-lever-wedge-47-p</title>
  <link>http://leanarch.eu/2012/07/25/functionally-well-defined-interfaces-crucial-for-design-for-change/c41be-upvc-lever-wedge-47-p/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:30 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2012/07/c41be-upvc-lever-wedge-47-p.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>45</wp:post_id>
  <wp:post_date>2013-11-25 04:07:30</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>c41be-upvc-lever-wedge-47-p</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>27</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2012/07/c41be-upvc-lever-wedge-47-p.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://1.bp.blogspot.com/-fePrvQLi2qw/UA_6wI41nQI/AAAAAAAAFbE/wrqIQ__rc9U/s1600/upvc-lever-wedge-47-p.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>40f0d-4568372067_cdab6de16b</title>
  <link>http://leanarch.eu/2013/01/31/scrum-is-a-very-inefficient-framework/40f0d-4568372067_cdab6de16b/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:30 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/01/40f0d-4568372067_cdab6de16b.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>46</wp:post_id>
  <wp:post_date>2013-11-25 04:07:30</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>40f0d-4568372067_cdab6de16b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>35</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/01/40f0d-4568372067_cdab6de16b.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://3.bp.blogspot.com/-pY1PHgpWxdg/UQmkEUadZrI/AAAAAAAAIqE/hdg-j6oL8Ls/s1600/4568372067_cdab6de16b.jpg]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Scaling Agile Architecting is NOT rocket science</title>
  <link>http://leanarch.eu/2013/01/05/scaling-agile-architecting-is-not-rocket-science/scaling-agile-architecting-is-not-rocket-science-2/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:31 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/01/kids.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>49</wp:post_id>
  <wp:post_date>2013-11-25 04:07:31</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scaling-agile-architecting-is-not-rocket-science-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>33</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/01/kids.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>blogger_attachment</wp:meta_key>
    <wp:meta_value><![CDATA[http://2.bp.blogspot.com/-76JL1Qstcdw/UOiYpSlD3TI/AAAAAAAAIjI/MeOW6LjBpHw/kids.png]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>1e741-kids</title>
  <link>http://leanarch.eu/2013/01/05/scaling-agile-architecting-is-not-rocket-science/1e741-kids/</link>
  <pubDate>Mon, 25 Nov 2013 04:07:38 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/01/1e741-kids.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>51</wp:post_id>
  <wp:post_date>2013-11-25 04:07:38</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:07:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>1e741-kids</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>33</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/01/1e741-kids.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>auto_import</wp:meta_key>
    <wp:meta_value><![CDATA[http://2.bp.blogspot.com/-76JL1Qstcdw/UOiYpSlD3TI/AAAAAAAAIjI/MeOW6LjBpHw/s1600/kids.png]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>LeanArch</title>
  <link>http://leanarch.eu/home/</link>
  <pubDate>Mon, 25 Nov 2013 04:14:06 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?page_id=53</guid>
  <description/>
  <content:encoded><![CDATA[LeanArch is short for Lean Architecture. We help our customers <strong>reduce complexity</strong> and improve overall quality of IT solutions. By applying <a title="Agile Manifesto" href="http://agilemanifesto.org" target="_blank">Agile principles</a> and <a href="http://scrum.jeffsutherland.com" target="_blank">Scrum</a> as a framework, <strong>speed of delivery</strong> is greatly improved. The combination of technical craftsmanship with Scrum enables you to deliver business value iteratively and incrementally, while still maintaining high quality.
<h2>Results are all that matter</h2>
LeanArch has a long track record of successful assignments and satisfied customers. The list of kind statements from customers can be found on <a title="LinkedIn" href="http://hk.linkedin.com/in/vgrgic" target="_blank">LinkedIn</a>.
LeanArch provides Agile / Scrum and IT Architecture trainings, coaching and consultancy services.
<h2>Why Agile?</h2>
The reality of corporate IT departments and IT projects today is that most discussed topics are IT budgets, missed deadlines, dissatisfied business, and how expensive IT is. Instead, it should be about value creation and continuous improvement of delivery speed and quality of service. This problem is particularly visible when dealing with vendors or outsourcing partnerships. Agile and Scrum helps bring these subjects back on table and improve relationship with your customer or IT service provider.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>53</wp:post_id>
  <wp:post_date>2013-11-25 04:14:06</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:14:06</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>home</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[86]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/11/25/56/</link>
  <pubDate>Mon, 25 Nov 2013 04:15:28 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=56</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>56</wp:post_id>
  <wp:post_date>2013-11-25 04:15:28</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:15:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>56</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[53]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Blog</title>
  <link>http://leanarch.eu/blog/</link>
  <pubDate>Mon, 25 Nov 2013 04:26:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?page_id=59</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>59</wp:post_id>
  <wp:post_date>2013-11-25 12:26:00</wp:post_date>
  <wp:post_date_gmt>2013-11-25 04:26:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blog</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[86]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>portofrotterdam</title>
  <link>http://leanarch.eu/home/mobile-144x144/</link>
  <pubDate>Mon, 25 Nov 2013 08:13:05 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/mobile-144x144.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>76</wp:post_id>
  <wp:post_date>2013-11-25 16:13:05</wp:post_date>
  <wp:post_date_gmt>2013-11-25 08:13:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mobile-144x144</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>53</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/mobile-144x144.png</wp:attachment_url>
</item>
<item>
  <title>logo</title>
  <link>http://leanarch.eu/home/logo/</link>
  <pubDate>Mon, 25 Nov 2013 08:16:35 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/logo.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>78</wp:post_id>
  <wp:post_date>2013-11-25 16:16:35</wp:post_date>
  <wp:post_date_gmt>2013-11-25 08:16:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>logo</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>53</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/logo.gif</wp:attachment_url>
</item>
<item>
  <title>Port of Rotterdam session</title>
  <link>http://leanarch.eu/agile-coaching/img_7089-version-2/</link>
  <pubDate>Mon, 25 Nov 2013 09:28:38 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/img_7089-version-2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>84</wp:post_id>
  <wp:post_date>2013-11-25 17:28:38</wp:post_date>
  <wp:post_date_gmt>2013-11-25 09:28:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_7089-version-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>5</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/img_7089-version-2.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_0739</title>
  <link>http://leanarch.eu/training/img_0739/</link>
  <pubDate>Mon, 02 Dec 2013 13:17:14 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/img_0739.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>85</wp:post_id>
  <wp:post_date>2013-12-02 21:17:14</wp:post_date>
  <wp:post_date_gmt>2013-12-02 13:17:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0739</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>15</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/img_0739.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_1397 - Version 2</title>
  <link>http://leanarch.eu/home/img_1397-version-2/</link>
  <pubDate>Mon, 02 Dec 2013 13:20:16 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/img_1397-version-2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>86</wp:post_id>
  <wp:post_date>2013-12-02 21:20:16</wp:post_date>
  <wp:post_date_gmt>2013-12-02 13:20:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1397-version-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>53</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/img_1397-version-2.jpg</wp:attachment_url>
</item>
<item>
  <title>having fun</title>
  <link>http://leanarch.eu/blog/having-fun/</link>
  <pubDate>Mon, 02 Dec 2013 13:24:16 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/having-fun.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>87</wp:post_id>
  <wp:post_date>2013-12-02 21:24:16</wp:post_date>
  <wp:post_date_gmt>2013-12-02 13:24:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>having-fun</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>59</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/having-fun.png</wp:attachment_url>
</item>
<item>
  <title>Viktor Grgic</title>
  <link>http://leanarch.eu/contact/viktor-grgic/</link>
  <pubDate>Tue, 03 Dec 2013 05:27:27 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2009/01/vgrgic002.jpg</guid>
  <description/>
  <content:encoded><![CDATA[Nederland, Hilversum, 06-11-2009
Viktor Grgic, Xebia]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>104</wp:post_id>
  <wp:post_date>2013-12-03 13:27:27</wp:post_date>
  <wp:post_date_gmt>2013-12-03 05:27:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>viktor-grgic</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2009/01/vgrgic002.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_0769</title>
  <link>http://leanarch.eu/lean-architecture/img_0769/</link>
  <pubDate>Tue, 03 Dec 2013 11:49:55 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/img_0769.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>144</wp:post_id>
  <wp:post_date>2013-12-03 19:49:55</wp:post_date>
  <wp:post_date_gmt>2013-12-03 11:49:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0769</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>10</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/img_0769.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_0974</title>
  <link>http://leanarch.eu/img_0974/</link>
  <pubDate>Wed, 04 Dec 2013 02:50:15 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/12/img_0974.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>239</wp:post_id>
  <wp:post_date>2013-12-04 10:50:15</wp:post_date>
  <wp:post_date_gmt>2013-12-04 02:50:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0974</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/12/img_0974.jpg</wp:attachment_url>
</item>
<item>
  <title>Speaking</title>
  <link>http://leanarch.eu/speaking/</link>
  <pubDate>Sat, 07 Dec 2013 05:32:18 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?page_id=265</guid>
  <description/>
  <content:encoded><![CDATA[[caption id="attachment_266" align="aligncenter" width="584"]<a href="http://vgrgic.files.wordpress.com/2013/12/img_1082.jpg"><img src="http://vgrgic.files.wordpress.com/2013/12/img_1082.jpg" alt="GOTO Amsterdam 2013 - International Conference" width="584" height="438" class="size-full wp-image-266" /></a> GOTO Amsterdam 2013 - International Conference[/caption]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>265</wp:post_id>
  <wp:post_date>2013-12-07 13:32:18</wp:post_date>
  <wp:post_date_gmt>2013-12-07 05:32:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>speaking</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[sidebar-page.php]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IMG_1082</title>
  <link>http://leanarch.eu/speaking/img_1082/</link>
  <pubDate>Sat, 07 Dec 2013 05:29:18 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/12/img_1082.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[GOTO Amsterdam 2013 - International Conference]]></excerpt:encoded>
  <wp:post_id>266</wp:post_id>
  <wp:post_date>2013-12-07 13:29:18</wp:post_date>
  <wp:post_date_gmt>2013-12-07 05:29:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1082</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>265</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/12/img_1082.jpg</wp:attachment_url>
</item>
<item>
  <title/>
  <link>http://leanarch.eu/2013/12/07/268/</link>
  <pubDate>Sat, 07 Dec 2013 05:33:41 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=268</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>268</wp:post_id>
  <wp:post_date>2013-12-07 13:33:41</wp:post_date>
  <wp:post_date_gmt>2013-12-07 05:33:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>268</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>5</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menu 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[265]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>It is all about Speed of Delivery</title>
  <link>http://leanarch.eu/?p=269</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=269</guid>
  <description/>
  <content:encoded><![CDATA[As Jan Bosch presented very nicely in his keynote during LAC (Dutch congress for IT architects) a few years ago, all that matters today is Speed of Delivery. Besides speed of delivery, we already live in a world where following has become the mainstream:
<ul>
	<li><strong>Consumerization</strong> - businesses do not like to see their own IT department being slower comparing to solutions consumers get at lower price and higher quality.</li>
	<li><strong>BYOD</strong> (Bring Your Own Device) might bring a death-blow to Microsoft predominated workplace. It is too expensive and business is spoiled by devies which cost a few hundred bucks and work better. So many customers I came across are complaining about their workstations standardized by their IT department.</li>
	<li><strong>DevOps</strong> - difference between developers and operations is disappearing. Having your Agile team(s) taking care of most of operations is working like a charm. It is also much cheaper.</li>
	<li><strong>Business solutions instead of generic solutions</strong> - driven by speed of delivery, we are starting to see that so-called generic solutions mostly that will solve many or all of their problems (read e.g. SOA, BPM, rules engines).</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>269</wp:post_id>
  <wp:post_date>2013-12-08 23:39:22</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>sdu training foto</title>
  <link>http://leanarch.eu/references/sdu-training-foto/</link>
  <pubDate>Mon, 16 Dec 2013 06:14:17 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/sdu-training-foto.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>272</wp:post_id>
  <wp:post_date>2013-12-16 14:14:17</wp:post_date>
  <wp:post_date_gmt>2013-12-16 06:14:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sdu-training-foto</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>12</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/sdu-training-foto.png</wp:attachment_url>
</item>
<item>
  <title>enterprise vs software</title>
  <link>http://leanarch.eu/enterprise-vs-software/</link>
  <pubDate>Wed, 18 Dec 2013 08:19:30 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/12/enterprise-vs-software.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>381</wp:post_id>
  <wp:post_date>2013-12-18 16:19:30</wp:post_date>
  <wp:post_date_gmt>2013-12-18 08:19:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>enterprise-vs-software</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/12/enterprise-vs-software.png</wp:attachment_url>
</item>
<item>
  <title>Architectural requirements in Scrum</title>
  <link>http://leanarch.eu/?p=385</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=385</guid>
  <description/>
  <content:encoded><![CDATA[<p>One of the mantras stated when criticising Agile and Scrum is that quality attributes (scalability, security, availability, and so on) or non-functionals are neglected. There suppose to be no or too few practices in order to make sure these are covered. A good point that needs some explanation.</p><p>First, quality of a solution is for Scrum teams very much important. Attention for these attributes are actually built in the process. But, before I explain in which they are taken care of, let me discuss them first:</p><p>Which of these quality attributes is actually system-wide? E.g. responsiveness? No, this one depends completely on specific function. An action performed very often should usually perform much faster, than one used only once in a while. Confidentiality? Which piece of information is sensitive? Probably not all. Again, it depends very much on one or limited number of functions. Availability? What information, or which part of system exactly needs to be more available and why? This question might be irrelevant in smaller systems, but very important in larger ones. The answer could steer us towards very different solutions. Should we have a relatively cheap backup system with very limited set of data? Should we be concerned with information received through messaging, or is longer down time there acceptable?Â Interoperability? I would even know how to solve this one system-wide. Without knowing information that will be exchanged, there is not much to be said system-wide. Any system built these days can exchange information with other systems. The question is more which information, and what is the most effective way to this.</p><p>As you probably guessed, most of these attributes are and should be part of business epics or user stories. Just to be very clear, these are no architectural epics or technical stories. All of them can and should be explained from business perspective. E.g. "As a VTS operator I need to know where mored ships are located with max 5 minutes unavailability in order to ...".</p><p>At the beginning of any Scrum project, basic understanding of the whole problem ahead is acquired. This usually means that product vision and first draft of epics is created together with everyone involved. This provides enough information to understand crucial architectural requirements. This drivesÂ </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>385</wp:post_id>
  <wp:post_date>2013-12-20 09:46:26</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Self-organising teams and Architecture</title>
  <link>http://leanarch.eu/?p=599</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=599</guid>
  <description/>
  <content:encoded><![CDATA[<p>One of the large questions when talking about self-organising teams is ifÂ </p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>599</wp:post_id>
  <wp:post_date>2014-01-05 21:51:17</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>IMG_1337</title>
  <link>http://leanarch.eu/2014/01/12/imposed-rules-and-boundaries-are-a-sign-of-distrust/img_1337/</link>
  <pubDate>Sun, 12 Jan 2014 06:12:54 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/01/img_1337.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>644</wp:post_id>
  <wp:post_date>2014-01-12 14:12:54</wp:post_date>
  <wp:post_date_gmt>2014-01-12 06:12:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1337</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>605</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/01/img_1337.jpg</wp:attachment_url>
</item>
<item>
  <title>Agile / Scrum, the wrong way</title>
  <link>http://leanarch.eu/?p=791</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=791</guid>
  <description/>
  <content:encoded><![CDATA[When meeting people and talking about Agile and Scrum, I get to hear many different perspectives and opinions about it. The opinions are driven by the perspectives and experiences in the past. Quite often I get to talk to people who don't really like Scrum, don't like Agile, or both. One of the reasons is bad experience with Agile Coaches introducing Scrum for the sake of introducing Scrum.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>791</wp:post_id>
  <wp:post_date>2014-02-15 23:18:07</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>DSCF7012</title>
  <link>http://leanarch.eu/dscf7012/</link>
  <pubDate>Wed, 19 Feb 2014 06:32:55 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/02/dscf7012.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>862</wp:post_id>
  <wp:post_date>2014-02-19 14:32:55</wp:post_date>
  <wp:post_date_gmt>2014-02-19 06:32:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dscf7012</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/02/dscf7012.jpg</wp:attachment_url>
</item>
<item>
  <title>DSCF7019</title>
  <link>http://leanarch.eu/dscf7019/</link>
  <pubDate>Wed, 19 Feb 2014 06:35:11 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/02/dscf7019.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>866</wp:post_id>
  <wp:post_date>2014-02-19 14:35:11</wp:post_date>
  <wp:post_date_gmt>2014-02-19 06:35:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dscf7019</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/02/dscf7019.jpg</wp:attachment_url>
</item>
<item>
  <title>cropped-img_1397-version-2.jpg</title>
  <link>http://leanarch.eu/cropped-img_1397-version-2-jpg/</link>
  <pubDate>Wed, 19 Feb 2014 06:46:07 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/cropped-img_1397-version-2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://vgrgic.files.wordpress.com/2013/11/cropped-img_1397-version-2.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>869</wp:post_id>
  <wp:post_date>2014-02-19 14:46:07</wp:post_date>
  <wp:post_date_gmt>2014-02-19 06:46:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-img_1397-version-2-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/cropped-img_1397-version-2.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_custom_header_last_used_pub/twentyeleven</wp:meta_key>
    <wp:meta_value><![CDATA[1392792424]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/twentyeleven]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>cropped-cropped-img_1397-version-2.jpg</title>
  <link>http://leanarch.eu/cropped-cropped-img_1397-version-2-jpg/</link>
  <pubDate>Mon, 24 Feb 2014 10:53:34 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2013/11/cropped-cropped-img_1397-version-2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://vgrgic.files.wordpress.com/2013/11/cropped-cropped-img_1397-version-2.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>904</wp:post_id>
  <wp:post_date>2014-02-24 18:53:34</wp:post_date>
  <wp:post_date_gmt>2014-02-24 10:53:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-cropped-img_1397-version-2-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2013/11/cropped-cropped-img_1397-version-2.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_custom_header_last_used_pub/sorbet</wp:meta_key>
    <wp:meta_value><![CDATA[1393239214]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/sorbet]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>question1</title>
  <link>http://leanarch.eu/2014/02/25/democratic-or-autocratic-leadership-polyu-student-question/question1/</link>
  <pubDate>Tue, 25 Feb 2014 12:42:49 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/02/question1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>910</wp:post_id>
  <wp:post_date>2014-02-25 20:42:49</wp:post_date>
  <wp:post_date_gmt>2014-02-25 12:42:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>question1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>909</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/02/question1.png</wp:attachment_url>
</item>
<item>
  <title>question2</title>
  <link>http://leanarch.eu/2014/02/26/teammates-not-communicating-polyu-student-question/question2/</link>
  <pubDate>Wed, 26 Feb 2014 09:52:26 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/02/question2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>916</wp:post_id>
  <wp:post_date>2014-02-26 17:52:26</wp:post_date>
  <wp:post_date_gmt>2014-02-26 09:52:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>question2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>915</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/02/question2.png</wp:attachment_url>
</item>
<item>
  <title>question3</title>
  <link>http://leanarch.eu/2014/02/27/understanding-each-other-polyu-student-question/question3/</link>
  <pubDate>Thu, 27 Feb 2014 06:44:10 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/02/question3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>923</wp:post_id>
  <wp:post_date>2014-02-27 14:44:10</wp:post_date>
  <wp:post_date_gmt>2014-02-27 06:44:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>question3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>922</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/02/question3.png</wp:attachment_url>
</item>
<item>
  <title>question4</title>
  <link>http://leanarch.eu/2014/02/28/does-decision-making-by-whole-team-cost-more-time-polyu-question/question4/</link>
  <pubDate>Fri, 28 Feb 2014 09:07:18 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/02/question4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>930</wp:post_id>
  <wp:post_date>2014-02-28 17:07:18</wp:post_date>
  <wp:post_date_gmt>2014-02-28 09:07:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>question4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>929</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/02/question4.png</wp:attachment_url>
</item>
<item>
  <title>question5</title>
  <link>http://leanarch.eu/2014/03/03/do-self-organising-teams-work-well-in-all-cultures/question5/</link>
  <pubDate>Sat, 01 Mar 2014 07:28:18 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/03/question5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>935</wp:post_id>
  <wp:post_date>2014-03-01 15:28:18</wp:post_date>
  <wp:post_date_gmt>2014-03-01 07:28:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>question5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>934</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/03/question5.png</wp:attachment_url>
</item>
<item>
  <title>question6</title>
  <link>http://leanarch.eu/2014/03/04/what-if-some-prefer-privacy-above-cooperation-polyu-student-question/question6/</link>
  <pubDate>Tue, 04 Mar 2014 06:36:10 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/03/question6.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>948</wp:post_id>
  <wp:post_date>2014-03-04 14:36:10</wp:post_date>
  <wp:post_date_gmt>2014-03-04 06:36:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>question6</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>947</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/03/question6.png</wp:attachment_url>
</item>
<item>
  <title>architecture_process</title>
  <link>http://leanarch.eu/2014/03/05/think-big-act-small-what-does-it-mean-in-architecture/architecture_process/</link>
  <pubDate>Wed, 05 Mar 2014 09:06:12 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/03/architecture_process.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>955</wp:post_id>
  <wp:post_date>2014-03-05 17:06:12</wp:post_date>
  <wp:post_date_gmt>2014-03-05 09:06:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>architecture_process</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>954</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/03/architecture_process.png</wp:attachment_url>
</item>
<item>
  <title>architecture_book</title>
  <link>http://leanarch.eu/2014/03/07/book-review-software-architecture-for-developers-by-simon-brown/architecture_book/</link>
  <pubDate>Thu, 06 Mar 2014 08:48:02 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/03/architecture_book.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1006</wp:post_id>
  <wp:post_date>2014-03-06 16:48:02</wp:post_date>
  <wp:post_date_gmt>2014-03-06 08:48:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>architecture_book</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>959</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/03/architecture_book.png</wp:attachment_url>
</item>
<item>
  <title>Book review: Adaptive Leadership by Jim Highsmith</title>
  <link>http://leanarch.eu/?p=1011</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1011</guid>
  <description/>
  <content:encoded><![CDATA[It is a delight to read Jim Highsmith's book: Adaptive Leadership: Accelerating Enterprise Agility. Jim tells his experience of the past 10+ years of AgileÂ and the current status of the movement. The first part is full of carefully selected phrases from many different individuals, writers. Each of them hits the sweet spot in my brain, producing an "a-ha" moment. The same effect have his personal experiences in many companies.

At one point while reading, I realised that Jim's extensive explanation of issues, challenges and solutions with Agile at executive level is also an answer to many questions about "scaling" Agile. Fortunately, he does not call this scaling.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1011</wp:post_id>
  <wp:post_date>2014-03-10 11:45:16</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What has Tito to do with self-organising teams and companies?</title>
  <link>http://leanarch.eu/?p=1016</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1016</guid>
  <description/>
  <content:encoded><![CDATA[<p>Josip Broz Tito, or just Tito was a Yugoslav revolutionary. I haven't forget the moment I heard about his death in 1980. I was just 5 years old, born and raised in Bosnia. In those days, one of the Yugoslav republics. He was usually considered a dictator, but people loved him.</p><p>Today, I was having a conversation with friend of mine. We were chatting about Agile mindset, and about companies that brought this to a whole new levels. Companies that have no CEO, no or unusual managers, everyone chooses their own salary and so on.</p><p>Suddenly, all these things sounded familiar from our past in ex-Yugoslavia.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1016</wp:post_id>
  <wp:post_date>2014-03-19 22:24:10</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>DCI paradigm and why does it make sense to me</title>
  <link>http://leanarch.eu/?p=1044</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1044</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:right;"><em>If machines just couldÂ work similar to how human minds work, that would be great!</em></p>
I remember my first mental images of what object-oriented programming is. I would compare it to a car,Â in order to understand inheritance, encapsulation, classes, objects, and so on. I was impressed by similarities with real world, and how possibilities seemed so limitless.

Unfortunately, things didn't turn out to be as imagined. Object-orientation has definitely helped me write well-structured code. But, the similarity with normal peoples' mental model was not really there. The only recognisable parts would be those few entity classes representing the basic static structure. And even this 1% of the system is all about classes, and not really objects. In case you haven't noticed: in object-oriented programming we don't really codeÂ objects, but classes. Objects are these usually very short-lived things created when user clicks a button on a web page. The main perspective of normal people is an object or an instance of a class; a specific car is much more interesting than moulds for making car parts. So, if we exclude these super-humanÂ developers, nobody else has a sensible representation of how object-oriented software actuallyÂ works. Even developers rarelyÂ conceptualise objects in their head, but classes. This is recognisable when teaching object-orientation to junior developers in difficulty to understand difference between instance and class variables, and overuse of omnipresent god-like objects called singletons.

At the same time, normal humans' perception of computer systems is almost completely defined by its user interface. Instead of creating software which resemble human mental model, people have adapted themselves to primitive model of series of inputs and outputs.Â However complex and open computer software might look like, it is always a sequenceÂ of a human initiated action with this black box, and waiting for a certain response, completely oblivious to fact that this is an object-oriented software system. We can even conclude that despite the enormous computer power we have today, we have incredibly limited perception of possible interactions between humans and machines.

Procedural programming is therefore a more natural way of programming for this adapted and limited way of thinking about computers and software. A mortal human interacting with software usually has an image of sequential list of commands where input is validated, stored, result retrieved and placed back on the screen. This also explains the popularity of Visual Basic. It fitted this oversimplified model of how complex software systems work. Of course, it often ended up in a big mess.

Ironically, in order to solve the problem of fundamental disconnection between how people interact with object-oriented software and the originally intended human mental model inside this software, Model-View-Controller pattern is invented byÂ Trygve Reenskaug. We might even say that MVC is the actual interface between humans and our so called object-oriented software.

A better term for object-oriented software would be class-oriented software. The original idea behind real object-orientedÂ programming as pioneeredÂ by Alan Kay, started to take off with Smalltalk, but died out eventually. <a href="https://www.youtube.com/watch?v=r36NNGzNvjo" target="_blank">Dynabook</a> concept, created in 1968, was this amazing example what could have happened if his ideas of interaction with computer would takeÂ off. Although resemblance with iPad is incredible, it is something quite different.

Considering problems introduced with object-oriented programming, as mentioned above, we might be better off if we never tried to apply it in world of business software. After all, the Alan'sÂ intention was to create educational software for children, not business software. Nevertheless, object-orientation principles help us today create and manage complex software structures, which is good.

Today, effect of misalignment between human mental model about software systems and actual object-oriented software is a difficult to follow execution path. As James Coplien says,Â <strong>what system does</strong>, or its behaviour in specific context, when users clicks a button,Â is scattered all over many different classes. MVC did solve connection with the user, but recognising behaviour in code is still just as difficult. Any experienced OO developer knows how difficult it is to know what system does just by reading the code.

This is where DCI (Data, Context, Interaction) brings improvement. With DCI, an object-oriented software system consists of two parts. One describes what the system does, and other what the system is. This brings software design much closer to humans' mental model. Like in real world, we have a mug - what the system is. User may wish to use this mug to drink coffee - what the system does. In this specific context with introduction of hot coffee, mug playsÂ a specific role named coffee mug.Â The same or other user might useÂ mug to drink sodaÂ instead of coffee. It will therefore receive a different role at different moment. The method called "drink()" is probably part of mug (what the system is), because it is same in any context and it can be considered as stable local method tightly bound to mug. The method called "sipping()" is possibly part of the context coffee mug.

Data part in DCI is the part called "what the system is". IMO, equating "what the system is" with data is rather limiting perspective. A danger of this is creation of transaction script style software where design is oversimplified. The correct balans between "IS" and "DOES" part is important.

I won't explain how this exactly works in different languages, because there are many great articles about it already. If you want to know more]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1044</wp:post_id>
  <wp:post_date>2014-04-07 20:36:03</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="psychology"><![CDATA[psychology]]></category>
  <category domain="category" nicename="software-architecture"><![CDATA[software architecture]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Stakeholders exaggeration</title>
  <link>http://leanarch.eu/?p=1046</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1046</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1046</wp:post_id>
  <wp:post_date>2014-04-24 18:33:14</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>erp-failure-head-in-hands</title>
  <link>http://leanarch.eu/erp-failure-head-in-hands/</link>
  <pubDate>Fri, 25 Apr 2014 17:54:28 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/04/erp-failure-head-in-hands.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1154</wp:post_id>
  <wp:post_date>2014-04-26 01:54:28</wp:post_date>
  <wp:post_date_gmt>2014-04-25 17:54:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>erp-failure-head-in-hands</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/04/erp-failure-head-in-hands.jpg</wp:attachment_url>
</item>
<item>
  <title>Tree</title>
  <link>http://leanarch.eu/tree/</link>
  <pubDate>Tue, 29 Apr 2014 14:38:48 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/04/tree.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1417</wp:post_id>
  <wp:post_date>2014-04-29 22:38:48</wp:post_date>
  <wp:post_date_gmt>2014-04-29 14:38:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tree</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/04/tree.png</wp:attachment_url>
</item>
<item>
  <title>Software projects are dead! Long live permanent teams</title>
  <link>http://leanarch.eu/?p=1434</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1434</guid>
  <description/>
  <content:encoded><![CDATA[<p>Since the most popular blog posts have a title: ".... is dead! long live ....", I thought I should start one too.</p><p>Today, everybody is talking about Agile software development. It has become extremely popular.Â Many well-established roles are sacrificed in the process; which is good. Typical project management methodologies are replaced or marked as waste, which is even better. One thing we are not discussing much is the notion of a software project itself. Just like any project, software projects have a certain goal, a beginning, and the end. As we already learned in school, if a project does not have an end, it is not a project. So far, so good.</p><p>The question is, what do you call a Scrum team, which simply delivers one product sprint after sprint, and then suddenly switches to another product, and keeps delivering that one? Nobody knows the end-date, and nobody cares about the end-date. The budget is like a never empty bucket. As soon as it begins to dry out, a new to be gained value and money is found, team simply continues.</p><p>You can probably imagine this easily if your company is selling a software product and you have permanent teams. But, since Scrum came, more and more normal enterprises have this team. One or more stable teams, keep taking things from a product backlog, which is constantly refilled.</p><p>Software projects are usually separate and temporary entity in an organisation. They usually make a product, and give it to the IT department, which becomeÂ responsible forÂ operations. With a DevOps team, on other hand,Â the responsibility for operations moves sometimes completelyÂ from normal IT department towards the DevOps team. This creates sometimes weird situation where IT department is endlessly waiting for the "project" to transfer the responsibility, while business is very happy with the the current situation. The issue here is that organisation still treats this team as part of some project, while any aspect of a project is completely gone.</p><p>A similar situation might occur simply because IT department was not capable of delivering value to business. As a result, some business department decides to set up their own team, and deliver much faster. One negative effect here is that architecture becomes messy. This one department is more or less separated from the rest of the organisation.</p><p>What is actually happening is a slow death of software projects and programmes. The complex organisational structures for delivery of large systems are suddenly dissolving. Instead, there is just Scrum with Scrum teams and product owner is not even an IT person.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1434</wp:post_id>
  <wp:post_date>2014-05-16 11:41:32</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>wiz-khalifa-quotes-sayings-decision-making-feelings</title>
  <link>http://leanarch.eu/wiz-khalifa-quotes-sayings-decision-making-feelings/</link>
  <pubDate>Tue, 27 May 2014 12:10:10 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/05/wiz-khalifa-quotes-sayings-decision-making-feelings.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1600</wp:post_id>
  <wp:post_date>2014-05-27 20:10:10</wp:post_date>
  <wp:post_date_gmt>2014-05-27 12:10:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wiz-khalifa-quotes-sayings-decision-making-feelings</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/05/wiz-khalifa-quotes-sayings-decision-making-feelings.jpg</wp:attachment_url>
</item>
<item>
  <title>Software Architecture as Vision vs. Architecture as Structure</title>
  <link>http://leanarch.eu/?p=1622</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1622</guid>
  <description/>
  <content:encoded><![CDATA[<p>The two most prevalent definitions of software architecture do not conflict, but also talk about two completely separate things.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1622</wp:post_id>
  <wp:post_date>2014-06-02 23:08:32</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Australia_Dairy_Company_outlook</title>
  <link>http://leanarch.eu/2014/06/04/corporate-world-needs-high-quality-scrambled-eggs/australia_dairy_company_outlook/</link>
  <pubDate>Wed, 04 Jun 2014 05:35:40 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/australia_dairy_company_outlook.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1629</wp:post_id>
  <wp:post_date>2014-06-04 13:35:40</wp:post_date>
  <wp:post_date_gmt>2014-06-04 05:35:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>australia_dairy_company_outlook</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1628</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/australia_dairy_company_outlook.jpg</wp:attachment_url>
</item>
<item>
  <title>images</title>
  <link>http://leanarch.eu/2014/06/04/corporate-world-needs-high-quality-scrambled-eggs/images/</link>
  <pubDate>Wed, 04 Jun 2014 06:21:07 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/images.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1630</wp:post_id>
  <wp:post_date>2014-06-04 14:21:07</wp:post_date>
  <wp:post_date_gmt>2014-06-04 06:21:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>images</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1628</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/images.jpeg</wp:attachment_url>
</item>
<item>
  <title>DSCN9801</title>
  <link>http://leanarch.eu/2014/06/04/corporate-world-needs-high-quality-scrambled-eggs/dscn9801/</link>
  <pubDate>Wed, 04 Jun 2014 06:21:11 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/dscn9801.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1631</wp:post_id>
  <wp:post_date>2014-06-04 14:21:11</wp:post_date>
  <wp:post_date_gmt>2014-06-04 06:21:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dscn9801</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1628</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/dscn9801.jpg</wp:attachment_url>
</item>
<item>
  <title>00FOR3583F582E7B8D75C2l</title>
  <link>http://leanarch.eu/2014/06/04/corporate-world-needs-high-quality-scrambled-eggs/00for3583f582e7b8d75c2l/</link>
  <pubDate>Wed, 04 Jun 2014 06:21:12 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/00for3583f582e7b8d75c2l.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1632</wp:post_id>
  <wp:post_date>2014-06-04 14:21:12</wp:post_date>
  <wp:post_date_gmt>2014-06-04 06:21:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>00for3583f582e7b8d75c2l</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1628</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/00for3583f582e7b8d75c2l.jpg</wp:attachment_url>
</item>
<item>
  <title>images</title>
  <link>http://leanarch.eu/2014/06/04/corporate-world-needs-high-quality-scrambled-eggs/images-2/</link>
  <pubDate>Wed, 04 Jun 2014 06:25:10 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/images1.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1633</wp:post_id>
  <wp:post_date>2014-06-04 14:25:10</wp:post_date>
  <wp:post_date_gmt>2014-06-04 06:25:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>images-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1628</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/images1.jpeg</wp:attachment_url>
</item>
<item>
  <title>Make "Shadow IT" mai</title>
  <link>http://leanarch.eu/?p=1637</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1637</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1637</wp:post_id>
  <wp:post_date>2014-06-16 22:48:04</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>2014-06-26 09.23.30</title>
  <link>http://leanarch.eu/2014-06-26-09-23-30/</link>
  <pubDate>Thu, 26 Jun 2014 06:00:56 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/2014-06-26-09-23-30.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1651</wp:post_id>
  <wp:post_date>2014-06-26 14:00:56</wp:post_date>
  <wp:post_date_gmt>2014-06-26 06:00:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2014-06-26-09-23-30</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/2014-06-26-09-23-30.jpg</wp:attachment_url>
</item>
<item>
  <title>evolution1</title>
  <link>http://leanarch.eu/2014/06/28/continuous-architecting-devops/evolution1/</link>
  <pubDate>Sat, 28 Jun 2014 07:32:48 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/evolution1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1721</wp:post_id>
  <wp:post_date>2014-06-28 15:32:48</wp:post_date>
  <wp:post_date_gmt>2014-06-28 07:32:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>evolution1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1707</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/evolution1.png</wp:attachment_url>
</item>
<item>
  <title>evolution2</title>
  <link>http://leanarch.eu/2014/06/28/continuous-architecting-devops/evolution2/</link>
  <pubDate>Sat, 28 Jun 2014 08:00:57 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/evolution2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1723</wp:post_id>
  <wp:post_date>2014-06-28 16:00:57</wp:post_date>
  <wp:post_date_gmt>2014-06-28 08:00:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>evolution2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1707</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/evolution2.png</wp:attachment_url>
</item>
<item>
  <title>evolution3</title>
  <link>http://leanarch.eu/2014/06/28/continuous-architecting-devops/evolution3/</link>
  <pubDate>Sat, 28 Jun 2014 08:18:07 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/evolution3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1724</wp:post_id>
  <wp:post_date>2014-06-28 16:18:07</wp:post_date>
  <wp:post_date_gmt>2014-06-28 08:18:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>evolution3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1707</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/evolution3.png</wp:attachment_url>
</item>
<item>
  <title>evolution4</title>
  <link>http://leanarch.eu/2014/06/28/continuous-architecting-devops/evolution4/</link>
  <pubDate>Sat, 28 Jun 2014 08:34:42 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/evolution4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1725</wp:post_id>
  <wp:post_date>2014-06-28 16:34:42</wp:post_date>
  <wp:post_date_gmt>2014-06-28 08:34:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>evolution4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1707</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/evolution4.png</wp:attachment_url>
</item>
<item>
  <title>evolution5</title>
  <link>http://leanarch.eu/2014/06/28/continuous-architecting-devops/evolution5/</link>
  <pubDate>Sat, 28 Jun 2014 09:00:10 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/06/evolution5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1726</wp:post_id>
  <wp:post_date>2014-06-28 17:00:10</wp:post_date>
  <wp:post_date_gmt>2014-06-28 09:00:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>evolution5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1707</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/06/evolution5.png</wp:attachment_url>
</item>
<item>
  <title>debt-free</title>
  <link>http://leanarch.eu/2014/07/14/technical-debt-metaphor-is-wrong/debt-free/</link>
  <pubDate>Sat, 12 Jul 2014 15:27:29 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/07/debt-free.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1741</wp:post_id>
  <wp:post_date>2014-07-12 23:27:29</wp:post_date>
  <wp:post_date_gmt>2014-07-12 15:27:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>debt-free</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/07/debt-free.jpeg</wp:attachment_url>
</item>
<item>
  <title>ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334</title>
  <link>http://leanarch.eu/2014/08/03/teams-in-the-driving-seat/ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334/</link>
  <pubDate>Sun, 03 Aug 2014 05:03:22 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/08/ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1755</wp:post_id>
  <wp:post_date>2014-08-03 13:03:22</wp:post_date>
  <wp:post_date_gmt>2014-08-03 05:03:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1754</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/08/ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334.jpg</wp:attachment_url>
</item>
<item>
  <title>-twoifc-building-3</title>
  <link>http://leanarch.eu/twoifc-building-3/</link>
  <pubDate>Mon, 18 Aug 2014 13:47:50 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/08/twoifc-building-3.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1758</wp:post_id>
  <wp:post_date>2014-08-18 21:47:50</wp:post_date>
  <wp:post_date_gmt>2014-08-18 13:47:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>twoifc-building-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/08/twoifc-building-3.jpg</wp:attachment_url>
</item>
<item>
  <title>less_framework</title>
  <link>http://leanarch.eu/2014/11/30/less-framework-and-architecting/less_framework/</link>
  <pubDate>Wed, 19 Nov 2014 06:15:13 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2014/11/less_framework.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1768</wp:post_id>
  <wp:post_date>2014-11-19 14:15:13</wp:post_date>
  <wp:post_date_gmt>2014-11-19 06:15:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>less_framework</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1767</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2014/11/less_framework.png</wp:attachment_url>
</item>
<item>
  <title>followers vs craftmen</title>
  <link>http://leanarch.eu/2015/01/07/discover-own-or-use-existing-practices/followers-vs-craftmen/</link>
  <pubDate>Mon, 05 Jan 2015 09:33:13 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/01/followers-vs-craftmen.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1777</wp:post_id>
  <wp:post_date>2015-01-05 17:33:13</wp:post_date>
  <wp:post_date_gmt>2015-01-05 09:33:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>followers-vs-craftmen</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1773</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/01/followers-vs-craftmen.png</wp:attachment_url>
</item>
<item>
  <title>agile_scrum</title>
  <link>http://leanarch.eu/2015/01/07/discover-own-or-use-existing-practices/agile_scrum/</link>
  <pubDate>Wed, 07 Jan 2015 06:52:33 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/01/agile_scrum.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1785</wp:post_id>
  <wp:post_date>2015-01-07 14:52:33</wp:post_date>
  <wp:post_date_gmt>2015-01-07 06:52:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile_scrum</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1773</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/01/agile_scrum.png</wp:attachment_url>
</item>
<item>
  <title>Scannable Document 2</title>
  <link>http://leanarch.eu/2015/02/17/velocity-increase-is-evil/scannable-document-2/</link>
  <pubDate>Tue, 17 Feb 2015 09:55:12 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/02/scannable-document-2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1791</wp:post_id>
  <wp:post_date>2015-02-17 17:55:12</wp:post_date>
  <wp:post_date_gmt>2015-02-17 09:55:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scannable-document-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1788</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/02/scannable-document-2.jpg</wp:attachment_url>
</item>
<item>
  <title>Scannable Document</title>
  <link>http://leanarch.eu/2015/02/17/velocity-increase-is-evil/scannable-document/</link>
  <pubDate>Tue, 17 Feb 2015 09:56:05 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/02/scannable-document.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1792</wp:post_id>
  <wp:post_date>2015-02-17 17:56:05</wp:post_date>
  <wp:post_date_gmt>2015-02-17 09:56:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scannable-document</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1788</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/02/scannable-document.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_4192</title>
  <link>http://leanarch.eu/2015/02/17/velocity-increase-is-evil/img_4192/</link>
  <pubDate>Tue, 17 Feb 2015 09:56:41 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/02/img_4192.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1793</wp:post_id>
  <wp:post_date>2015-02-17 17:56:41</wp:post_date>
  <wp:post_date_gmt>2015-02-17 09:56:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_4192</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1788</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/02/img_4192.jpg</wp:attachment_url>
</item>
<item>
  <title>pairon</title>
  <link>http://leanarch.eu/2015/02/20/how-to-make-people-do-pair-programming/pairon/</link>
  <pubDate>Fri, 20 Feb 2015 14:13:40 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/02/pairon.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1797</wp:post_id>
  <wp:post_date>2015-02-20 22:13:40</wp:post_date>
  <wp:post_date_gmt>2015-02-20 14:13:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pairon</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1795</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/02/pairon.jpg</wp:attachment_url>
</item>
<item>
  <title>principles</title>
  <link>http://leanarch.eu/2015/03/07/my-impression-of-less-practitioner-course/principles/</link>
  <pubDate>Sat, 07 Mar 2015 13:22:36 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/03/principles.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1802</wp:post_id>
  <wp:post_date>2015-03-07 21:22:36</wp:post_date>
  <wp:post_date_gmt>2015-03-07 13:22:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>principles</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1800</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/03/principles.png</wp:attachment_url>
</item>
<item>
  <title>no this is a product</title>
  <link>http://leanarch.eu/2015/05/09/descaling-organisation-with-less-2/no-this-is-a-product/</link>
  <pubDate>Sat, 09 May 2015 03:21:56 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/05/no-this-is-a-product.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1818</wp:post_id>
  <wp:post_date>2015-05-09 11:21:56</wp:post_date>
  <wp:post_date_gmt>2015-05-09 03:21:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>no-this-is-a-product</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1814</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/05/no-this-is-a-product-e1431141833995.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:2266;s:6:"height";i:1280;s:4:"file";s:24:"no-this-is-a-product.png";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>improvements_vs_compromises</title>
  <link>http://leanarch.eu/2015/10/08/do-12-agile-principles-scale/improvements_vs_compromises/</link>
  <pubDate>Thu, 08 Oct 2015 01:47:35 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/10/improvements_vs_compromises.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1831</wp:post_id>
  <wp:post_date>2015-10-08 09:47:35</wp:post_date>
  <wp:post_date_gmt>2015-10-08 01:47:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>improvements_vs_compromises</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1828</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/10/improvements_vs_compromises.jpg</wp:attachment_url>
</item>
<item>
  <title>improvements_vs_compromises</title>
  <link>http://leanarch.eu/2015/10/08/do-12-agile-principles-scale/improvements_vs_compromises-2/</link>
  <pubDate>Thu, 08 Oct 2015 01:49:23 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2015/10/improvements_vs_compromises1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1832</wp:post_id>
  <wp:post_date>2015-10-08 09:49:23</wp:post_date>
  <wp:post_date_gmt>2015-10-08 01:49:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>improvements_vs_compromises-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1828</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2015/10/improvements_vs_compromises1.jpg</wp:attachment_url>
</item>
<item>
  <title>tumblr_inline_mhe4zls4Sn1qz4rgp</title>
  <link>http://leanarch.eu/2016/02/13/devops-principles/tumblr_inline_mhe4zls4sn1qz4rgp/</link>
  <pubDate>Sat, 13 Feb 2016 04:05:07 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2016/02/tumblr_inline_mhe4zls4sn1qz4rgp.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1846</wp:post_id>
  <wp:post_date>2016-02-13 12:05:07</wp:post_date>
  <wp:post_date_gmt>2016-02-13 04:05:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>tumblr_inline_mhe4zls4sn1qz4rgp</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1844</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2016/02/tumblr_inline_mhe4zls4sn1qz4rgp.png</wp:attachment_url>
</item>
<item>
  <title>scannable-document-on-21-dec-2016-14_00_50</title>
  <link>http://leanarch.eu/2016/12/21/dependencies-teams-and-microservices/scannable-document-on-21-dec-2016-14_00_50/</link>
  <pubDate>Wed, 21 Dec 2016 07:01:44 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2016/12/scannable-document-on-21-dec-2016-14_00_50.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2035</wp:post_id>
  <wp:post_date>2016-12-21 15:01:44</wp:post_date>
  <wp:post_date_gmt>2016-12-21 07:01:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>scannable-document-on-21-dec-2016-14_00_50</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1900</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2016/12/scannable-document-on-21-dec-2016-14_00_50.png</wp:attachment_url>
</item>
<item>
  <title>cross-component_teams</title>
  <link>http://leanarch.eu/2016/12/21/dependencies-teams-and-microservices/cross-component_teams/</link>
  <pubDate>Wed, 21 Dec 2016 07:34:35 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2016/12/cross-component_teams.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2065</wp:post_id>
  <wp:post_date>2016-12-21 15:34:35</wp:post_date>
  <wp:post_date_gmt>2016-12-21 07:34:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cross-component_teams</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1900</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2016/12/cross-component_teams.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2018-08-16 at 09.34.44</title>
  <link>http://leanarch.eu/2018/08/16/how-do-we-pay-people-in-a-less-adoption%e2%80%8b/screen-shot-2018-08-16-at-09-34-44/</link>
  <pubDate>Thu, 16 Aug 2018 07:35:48 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.files.wordpress.com/2018/08/screen-shot-2018-08-16-at-09-34-44.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2143</wp:post_id>
  <wp:post_date>2018-08-16 15:35:48</wp:post_date>
  <wp:post_date_gmt>2018-08-16 07:35:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2018-08-16-at-09-34-44</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2142</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://vgrgic.files.wordpress.com/2018/08/screen-shot-2018-08-16-at-09-34-44.png</wp:attachment_url>
</item>
<item>
  <title>Welcome to the Gutenberg Editor</title>
  <link>http://leanarch.eu/?p=2147</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=2147</guid>
  <description/>
  <content:encoded><![CDATA[<!-- wp:cover-image {"url":"https://cldup.com/Fz-ASbo2s3.jpg","align":"wide"} -->
<div class="wp-block-cover-image has-background-dim alignwide" style="background-image:url('https://cldup.com/Fz-ASbo2s3.jpg');"><p class="wp-block-cover-image-text">Of Mountains &amp; Printing Presses</p></div>
<!-- /wp:cover-image -->

<!-- wp:paragraph -->
<p>The goal of this new editor is to make adding rich content to WordPress simple and enjoyable. This whole post is composed of <em>pieces of content</em>âsomewhat similar to LEGO bricksâthat you can move around and interact with. Move your cursor around and youâll notice the different blocks light up with outlines and arrows. Press the arrows to reposition blocks quickly, without fearing about losing things in the process of copying and pasting.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What you are reading now is a <strong>text block</strong> the most basic block of all. The text block has its own controls to be moved freely around the post...</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"right"} -->
<p style="text-align:right;">... like this one, which is right aligned.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Headings are separate blocks as well, which helps with the outline and organization of your content.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>A Picture is Worth a Thousand Words</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Handling images and media with the utmost care is a primary focus of the new editor. Hopefully, youâll find aspects of adding captions or going full-width with your pictures much easier and robust than before.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://cldup.com/cXyG__fTLN.jpg" alt="Beautiful landscape" /><figcaption>If your theme supports it, youâll see the "wide" button on the image toolbar. Give it a try.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Try selecting and removing or editing the caption, now you donât have to be careful about selecting the image or other text by mistake and ruining the presentation.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The <em>Inserter</em> Tool</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Imagine everything that WordPress can do is available to you quickly and in the same place on the interface. No need to figure out HTML tags, classes, or remember complicated shortcode syntax. Thatâs the spirit behind the inserterâthe <code>(+)</code> button youâll see around the editorâwhich allows you to browse all available content blocks and add them into your post. Plugins and themes are able to register their own, opening up all sort of possibilities for rich editing and publishing.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Go give it a try, you may discover things WordPress can already add into your posts that you didnât know about. Hereâs a short list of what you can currently find there:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Text &amp; Headings</li><li>Images &amp; Videos</li><li>Galleries</li><li>Embeds, like YouTube, Tweets, or other WordPress posts.</li><li>Layout blocks, like Buttons, Hero Images, Separators, etc.</li><li>And <em>Lists</em> like this one of course :)</li></ul>
<!-- /wp:list -->

<!-- wp:separator -->
<hr class="wp-block-separator" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>Visual Editing</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A huge benefit of blocks is that you can edit them in place and manipulate your content directly. Instead of having fields for editing things like the source of a quote, or the text of a button, you can directly change the content. Try editing the following quote:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>The editor will endeavor to create a new page and post building experience that makes writing rich posts effortless, and has âblocksâ to make it easy what today might take shortcodes, custom HTML, or âmystery meatâ embed discovery.</p><cite>Matt Mullenweg, 2017</cite></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>The information corresponding to the source of the quote is a separate text field, similar to captions under images, so the structure of the quote is protected even if you select, modify, or remove the source. Itâs always easy to add it back.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Blocks can be anything you need. For instance, you may want to add a subdued quote as part of the composition of your text, or you may prefer to display a giant stylized one. All of these options are available in the inserter.</p>
<!-- /wp:paragraph -->

<!-- wp:gallery {"columns":2} -->
<ul class="wp-block-gallery columns-2 is-cropped"><li class="blocks-gallery-item"><figure><img src="https://cldup.com/n0g6ME5VKC.jpg" alt="" /></figure></li><li class="blocks-gallery-item"><figure><img src="https://cldup.com/ZjESfxPI3R.jpg" alt="" /></figure></li><li class="blocks-gallery-item"><figure><img src="https://cldup.com/EKNF8xD2UM.jpg" alt="" /></figure></li></ul>
<!-- /wp:gallery -->

<!-- wp:paragraph -->
<p>You can change the amount of columns in your galleries by dragging a slider in the block inspector in the sidebar.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Media Rich</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you combine the new <strong>wide</strong> and <strong>full-wide</strong> alignments with galleries, you can create a very media rich layout, very quickly:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"full"} -->
<figure class="wp-block-image alignfull"><img src="https://cldup.com/8lhI-gKnI2.jpg" alt="Accessibility is important â donât forget image alt attribute" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Sure, the full-wide image can be pretty big. But sometimes the image is worth it.</p>
<!-- /wp:paragraph -->

<!-- wp:gallery {"align":"wide"} -->
<ul class="wp-block-gallery alignwide columns-2 is-cropped"><li class="blocks-gallery-item"><figure><img src="https://cldup.com/_rSwtEeDGD.jpg" alt="" /></figure></li><li class="blocks-gallery-item"><figure><img src="https://cldup.com/L-cC3qX2DN.jpg" alt="" /></figure></li></ul>
<!-- /wp:gallery -->

<!-- wp:paragraph -->
<p>The above is a gallery with just two images. Itâs an easier way to create visually appealing layouts, without having to deal with floats. You can also easily convert the gallery back to individual images again, by using the block switcher.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Any block can opt into these alignments. The embed block has them also, and is responsive out of the box:</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/vimeo {"url":"https://vimeo.com/22439234","type":"rich","providerNameSlug":"","align":"wide","className":"wp-has-aspect-ratio wp-embed-aspect-16-9"} -->
<figure class="wp-block-embed-vimeo alignwide wp-block-embed is-type-rich wp-has-aspect-ratio wp-embed-aspect-16-9"><div class="wp-block-embed__wrapper">
https://vimeo.com/22439234
</div></figure>
<!-- /wp:core-embed/vimeo -->

<!-- wp:paragraph -->
<p>You can build any block you like, static or dynamic, decorative or plain. Hereâs a pullquote block:</p>
<!-- /wp:paragraph -->

<!-- wp:pullquote -->
<figure class="wp-block-pullquote"><blockquote><p>Code is Poetry</p><cite>The WordPress community</cite></blockquote></figure>
<!-- /wp:pullquote -->

<!-- wp:paragraph {"align":"center"} -->
<p style="text-align:center;">
	<em>
		If you want to learn more about how to build additional blocks, or if you are interested in helping with the project, head over to the <a href="https://github.com/WordPress/gutenberg">GitHub repository</a>.	</em>
</p>
<!-- /wp:paragraph -->

<!-- wp:button {"align":"center"} -->
<div class="wp-block-button aligncenter"><a class="wp-block-button__link" href="https://github.com/WordPress/gutenberg">Help build Gutenberg</a></div>
<!-- /wp:button -->

<!-- wp:separator -->
<hr class="wp-block-separator" />
<!-- /wp:separator -->

<!-- wp:paragraph {"align":"center"} -->
<p style="text-align:center;">Thanks for testing Gutenberg!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p style="text-align:center;"><img class="emoji" alt="ð" src="https://s.w.org/images/core/emoji/2.3/svg/1f44b.svg"/></p>
<!-- /wp:paragraph -->]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2147</wp:post_id>
  <wp:post_date>2018-10-26 19:40:25</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fb03bb0b9c9e7bf69eccd1e749e55745</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-vimeo"><iframe src="https://player.vimeo.com/video/22439234?app_id=122963" width="500" height="281" frameborder="0" title="The Mountain" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_time_fb03bb0b9c9e7bf69eccd1e749e55745</wp:meta_key>
    <wp:meta_value><![CDATA[1540554026]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fast changing vs. stable backbone &amp; IT departments</title>
  <link>http://leanarch.eu/2014/07/15/fast-changing-vs-stable-backbone-it-department/</link>
  <pubDate>Tue, 15 Jul 2014 08:45:58 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/?p=4</guid>
  <description/>
  <content:encoded><![CDATA[IT departments in corporate world seem to have twofold management. Depending on affected systems, CIO's willÂ have completely different approaches to software development and operations. A traditional one for crucial or primary IT systems, and an Agile one for less relevant or fast changing business requests.<!--more-->
<h2>StableÂ backbone</h2>
Regardless of architecture type, a large company hasÂ primary software systems, an IT backbone or engineÂ they highly depend on. This usually implies backend systems, but could also be user-facing software. Stability and overall quality is rather important. Perception is that any change is risky, therefore frequent changes are not welcomed. The projects with change or replacement goals are big, complex, involve a lot of architecture, long-term planning, decision making, etc. Any Agile approach in this area feels risky, unnecessary, not serious enough, and too uncontrolled. There is aÂ tendency to think:
<blockquote>Agile is for less risky and less crucial stuff.</blockquote>
<h2>Fast changing systems</h2>
In the very same companies, same CIO's are embracing Agile / Scrum, usually because they see opportunity for faster delivery, and hopefully making business and users a bit happier. Interestingly, they oftenÂ have <a href="http://en.wikipedia.org/wiki/Shadow_IT">Shadow IT</a> problem and Agile practicesÂ are seen as a compromise.

These new teams will have freedom to organise and decide as they wish. The solutions they are working on is the "new age" stuff. Fancy mobile apps, cool sites, latest technology, Ruby, Python, Scala, Swift, etc. In other words, usuallyÂ user-facing solutions.
The most visible difference with stable partsÂ is the amount of policiesÂ and regulations. Even in banking world, the Agile teams are exempt from most of these limitations.

Effect of this differentiation can be quite extreme. Not only separate rules apply to each of the domains, but also teams, roles and responsibilities are completely divided. Someone from an "Agile frontend" domainÂ is not allowed anywhere near core backend systems. Every change request and evenÂ usage has to go through complex chain of approvals.

So far, so good. It sounds like proper management of an IT department, right?
Well, not really. There are several and often not visible issues:
<ol>
	<li><strong>Dependencies:Â </strong>Any interface between front- and backend has dramatic influence on delivery speed. An Agile team with regular dependency on 6+ months backend change cycle will hardly benefit from being Agile. Sadly, this inability to change dependent systems spoils the promise of really being Agile and delivering value. Some will even say: "You see, Scrum can't solve this problem either".</li>
	<li><strong>Inferior solutions:Â </strong>A frontend solution developed with assumption of stable / unchangeable backend has much less value. The main reason is that interfaces are old and not built with newest requirements and technologies in mind. An iPhone app may look fancy, but overall experience is inferior to something completely driven by current business need and less restricted backend.</li>
	<li><strong>Component teams:Â </strong>This fast changing vs. backboneÂ thinking drives creation of component instead of feature teams. Component teams are a bad idea, as <a href="http://featureteamprimer.org/feature_team_primer12.pdf">thoroughly explained</a> by Craig Larman and Bas Vodde.</li>
	<li><strong>Unfinished:Â </strong>Agile teams tend toÂ deliver fake "potentially shippable product". It meansÂ they really deliver their increment correctly, which falls under their responsibility. But, the product cannot be shipped because a backend system is not changed yet. Also, testing against an interface with some <a href="http://martinfowler.com/articles/mocksArentStubs.html">Test Double</a> implementation is never as good as a real system.</li>
</ol>
<h2>Real improvement</h2>
The root causeÂ is not the mere existence of stable backboneÂ systems. Any large enterprise has a number of theseÂ systems with extreme quality requirements. Consciously dividing landscape into technical domains with different stability requirements, and treating them differently is a good thing.

Instead, there are other root causes and severalÂ painful improvement possibilities:
<h3>Large stable / small fast changingÂ domain</h3>
Stable backend systems tend to contain too specific - use case dependent, and therefore too much business logic. Exact division between stable and fast changing domains is usually accidental or has become bigger and bigger throughout years with newÂ requirements. The solution is to gradually clean up and move these parts into more fast changing domains.

Btw, SOA introductions have made this problem only worse. In order to prevent silos, everything meaningful for business is placed behind service implementations, which are placed behind ESB, orchestrationÂ tools, etc. By nature, any service becomes part of "stable domain" and therefore difficult to change. Because of bad service contracts (high coupling) the problem is not limited to interface definitions.
<h3>Automated testing</h3>
This one is straight forward: A large / old system without proper automated tests is costly or impossible to refactor. Risks caused byÂ frequentÂ changes are not a fact of life anymore. Automated testing is the solution. Today, building a long lived software product without comprehensive automated tests on severalÂ levels is amateurism.

Nevertheless, one definition of legacy is a software in production without automated tests. So, there is a lot of legacy out there. But, there are also many techniques, like TDD, to gradually and safely change that.
<h3>Trust your Agile teams with changes in backend</h3>
TheÂ management should allow teams to take responsibility and collaborate freely. <strong>How we organise architectural domains should be separate from how we organise teams</strong>. In other words, teams forming should not be driven by technical architecture or components. The feature teams should be allowed to make changes in backend. An experiencedÂ team will learn necessary rules and regulations, but alsoÂ exposeÂ many problems in architecture and change-request process. Only having cross-component feature teams instead of component teams makes aÂ huge difference.

None of these solutions are quick wins. It takes time and effort to bring real improvements. The aiming goal is to create an ITÂ landscapeÂ where these backbones are smaller, simplified and much better tested. In turn, this createsÂ more space for movement and change. Despite high risk, we already have technology and practices to continually change and evolve them just as fast as frontend systems.

There is nothing in AgileÂ which makes it applicable only in less important or fast changing environments. In fact, the biggest advantages are most visible when Scrum is applied for business critical solutions. TheyÂ are not "stable" by nature, but because of dangers of breaking something.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2014-07-15 16:45:58</wp:post_date>
  <wp:post_date_gmt>2014-07-15 08:45:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fast-changing-vs-stable-backbone-it-department</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/1joFE2UjyLv]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10204102415017488]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/uSXRAnSNPW]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5894733418809274368&type=U&a=tz1r]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>More designing, less architecture</title>
  <link>http://leanarch.eu/2012/07/18/more-designing-less-architecture/</link>
  <pubDate>Wed, 18 Jul 2012 11:07:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/18/more-designing-less-architecture/</guid>
  <description/>
  <content:encoded><![CDATA[One of the fundamental differences between traditional and Agile way of "making / doing architecture" is that in Agile / Scrum I don't really make or define architecture.<br />As far as you can call anything "architecture", this would be definition from Agile perspective:<br /><blockquote class="tr_bq"><a href="http://blog.zilverline.com/2012/04/16/architect-in-scrum/" target="_blank">"The set of design decisions that minimize the cost of development, maintenance and use. (Michael Franken / Grady Booch)"</a></blockquote>These decisions are eventually visible in one or more software products. If not, then there is no architecture at all. There are only pointless decisions. Like fantastic wine, open in the air, they will be spoiled / outdated very fast. World, requirements and specially insights are simply changing too fast. The problem with word "architecture" in software is that it represents something tangible. Something that you might want to pay for and say that you have it or not. But, nobody really wants to pay for architecture. Architecture is not a product. Please don't say it's a document. :-). You do have form and structure, which emerges with each iteration. This can be called architecture during and after you built a system. Talking about architecture so extensively as we do now in traditional projects, before a system is delivered, is a sign of lot of waste creation.<br /><br />On other hand, architecting&nbsp;or in more correct english: <b>designing</b> is, just like planning, one of the most important disciplines in Scrum cadence. Designing represents all decision making activities needed to deliver business value with a suitable product. Some of them are:<br /><ul><li>Defining and continuously redefining with new insights overall product vision.</li><li>Identifying and placing quality requirements on product backlog and Definition of Done (DoD).</li><li>Making sure teams take design decisions just-on-time and just enough</li><li>Making sure teams know constraints, possible technical solutions, and design limitations</li><li>Dealing with technical debt and refactoring</li><li>Involving stakeholders often overlooked by the Product Owner</li><li>Measuring overall quality of the product or landscape</li><li>Harvesting and documenting discovered guidelines, standards, services, and solutions that might be of interest to others in organization.</li></ul><div>Stay tuned, in coming postings I'll explain these better.</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>26</wp:post_id>
  <wp:post_date>2012-07-18 11:07:00</wp:post_date>
  <wp:post_date_gmt>2012-07-18 11:07:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>more-designing-less-architecture</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[706685673348048507]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>22</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-10-12 07:58:33</wp:comment_date>
    <wp:comment_date_gmt>2012-10-12 07:58:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Viktor,Specification and implementation are traditionally seperated, resulting in solutions were specification and implementation are not in sync.There are more and more methods/apps that support loosely coupling of specification and implementation. Visual Studio does it with the layer- and class diagram.Result: Change the specification once and implementation is also changed.Change the implementation once and specification is also changed.I think this is in line with your post.Regards,Johan Theunissen]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-12 07:58:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Functionally well-defined interfaces crucial for 'Design for Change'!</title>
  <link>http://leanarch.eu/2012/07/25/functionally-well-defined-interfaces-crucial-for-design-for-change/</link>
  <pubDate>Wed, 25 Jul 2012 14:32:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/25/functionally-well-defined-interfaces-crucial-for-design-for-change/</guid>
  <description/>
  <content:encoded><![CDATA[As elaborated in an <a href="http://blog.leanarch.eu/2012/07/design-for-change-as-agile-architecture.html" target="_blank">earlier post</a>, 'Design for Change' is one of the main architectural principles in Agile. So, while the '<b>why</b>' is explained earlier, one of the <b>how's</b> (proper interfaces) is explained in this one.<br /><br /> <h3>Interface definition is not about technology</h3><a href="http://vgrgic.files.wordpress.com/2012/07/2542a-231834610.jpg" style="clear:right;float:right;margin-bottom:1em;margin-left:1em;"><img border="0" height="320" src="http://vgrgic.files.wordpress.com/2012/07/2542a-231834610.jpg?w=300" width="320" /></a>The proper interface definition practices are about as old as programming. Still, wrongly defined interfaces are one of the common and major impediments in delivering a system designed for change.<br /><br />An important misunderstanding about interfaces between components or systems is that it is all about technology and techies should take care of it. But, how much does it really cost to implement or refactor e.g. from SOAP to REST; or from JMS to HTTP? Practically nothing when compared to functionally highly coupled components because of badly defined interface regardless of technology.<br /><br /> <h3>Never make generic interfaces</h3>One of the worst practices in this area are so called SOAP gateways or ESB's, which only make technical stuff more complex and when connecting two systems, still requiring from involved parties to define functionally working interface. This real interface is not explicit anymore, often described in some large document, and hidden deep in involved systems.<br />So, what is the problem? Well, most of the changes in service providing systems have huge costs because of the impact on consuming systems / components and middleware.<br /><br />One of the bizar things architects tend to say is that things like SOAP gateways or ESB's decouple systems, because you can place anything in the request and response placeholders. It's like: let's forget about language so we can say to each other anything we want.<br /><br />Making functionally explicit, fit for context and purpose, simple, and specific interfaces between components, understandable by product owner and sometimes even users gives you a lot of space to move and change. It also makes all real dependencies explicit and easy to use.<br /><br /><span style="background-color:white;">For example:</span><ul><li><span style="background-color:white;">one generic: <span style="font-family:'Courier New', Courier, monospace;">update(bookReservation)</span>;</span></li><li><span style="background-color:white;">multiple specific methods: <span style="font-family:'Courier New', Courier, monospace;">reserveBook(bookId,customerId); cancelReservation(bookId); bookReturned(bookId);</span> and so on.</span></li></ul><br /><span style="background-color:white;">Also, if consuming components only need few details of a book reservation; do not send the whole source object, but create a separate DTO (Data Transfer Object) containing only these fields. It is always easier to extend this later if more is needed, than to change existing field.</span><br /><br />Agile or not, changing an interface functionally is expensive. Think about complexity of having multiple versions and so on. Single most imporant factor to reduce this costs is to make very explicit interfaces. It means that your interface only describes the strictly necessary information for the purpose and nothing more. This all does not mean that you always define fine-grained interfaces. In contrary, you don't want separate methods for each field of an object, but rather to have one BookReservationDTO used by as many as possible service consumers. Defining such objects is a balancing act mainly influenced by specific domain and how realistic it is to have one object for all consumers. Because we do stuff in an Agile manner, we can safely name our object BookReservationDTO containing only the bare minimum of fields.<br /><br /> <h3>Well-defined interface is a powerful wedge for changes</h3><div class="separator" style="clear:both;text-align:center;"><a href="http://vgrgic.files.wordpress.com/2012/07/c41be-upvc-lever-wedge-47-p.jpg" style="clear:right;float:right;margin-bottom:1em;margin-left:1em;"><img border="0" height="200" src="http://vgrgic.files.wordpress.com/2012/07/c41be-upvc-lever-wedge-47-p.jpg?w=288" width="191" /></a></div>There is another reason why we appreciate good interfaces so much. It makes a whole new range of creative solutions possible. <span style="background-color:white;"><br /></span><br /><span style="background-color:white;">I learned this example from Michael Franken (Zilverline): Imagine wanting CRM solution really fast, but don't know all needed features yet and buying complete solution so early is also very expensive. In other words, unwanted big bang with all disadvantages. But you also don't want to build it yourself.</span><br />You could build only user interaction stuff with simplest possible technology while backend is just a database or some in memory solution. No interfaces to others systems and complex business rules and logic. You do make sure from start that interfaces from user interface to the repository with data are very well defined. Later on, you can (gradually) replace this backend database solution with fully featured out-of-box CRM solution. You can also use these interfaces as perfect specs for buying such system.<br /><br /> <h3>Conclusion</h3>Also Agile teams need to be very careful when defining interfaces. But, it's all about functionally well thought-out interfaces and not about SOAP, REST and so on. These are simply not important, because they are cheap to change or add. Agile says: "Do The Simplest Thing That Could Possibly Work".]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>27</wp:post_id>
  <wp:post_date>2012-07-25 14:32:00</wp:post_date>
  <wp:post_date_gmt>2012-07-25 14:32:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>functionally-well-defined-interfaces-crucial-for-design-for-change</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[716639650655170795]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_149cf7459b370975221b76216c5be63b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>People never suck, only systems surrounding individuals do</title>
  <link>http://leanarch.eu/2012/07/26/people-never-suck-only-systems-surrounding-individuals-do/</link>
  <pubDate>Thu, 26 Jul 2012 20:09:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/26/people-never-suck-only-systems-surrounding-individuals-do/</guid>
  <description/>
  <content:encoded><![CDATA[Mainly just before my Agile workshops and presentations, I'm hearing often this same thing:<br /><blockquote class="tr_bq">"When you have a great group of people, you can achieve great results with any methodology. So, why bother learning Agile stuff?"</blockquote>This would, on other hand, imply that individuals in a group who fail, simply suck just as much as their failures. So, if you have been a team member during such failure (as I have been multiple times), then YOU suck too big time.<br /><br />But, what does really make someone excel? Are some people simply born failures? Of course not! In my opinion, nobody sucks at anything. Just-in-case you might wonder: I love to work with people with little experience. Lack of experience and knowledge does not contribute much in failures and it is solvable. I have first hand experience from different customers with some amazing guys and girls who improved so much and become real craftsman within a short time frame.<br />There are two reasons why teams fail:<br /><ol><li>Team members lack motivation to do their job well, they are not appreciated, challenged, goal is unclear or unattractive and they have not enough influence and therefore don't feel responsible.</li><li>Environment in which team operates is full of impediments.</li></ol><div>Main goal of an Agile / Scrum introduction is to address these two issues, so great results can be achieved. In order to be effective and make everything concrete and tangible, we do need a simple framework as Scrum with underlaying (Agile) values. Agile and Scrum help create environment where people can be creative and fully exploit their potential.</div><div><br /></div><div>On other hand, I must say we have today so many Agile coaches with certificates preaching their very extensive knowledge of Scrum, Kanban, Lean, XP, and so on. It seems that quality is measured by amount of Agile methodologies and practices they know and introduce, instead of references from real world significant improvements, and by helping people become happier in their work.</div><div><br /></div><div>Real results are all that matters and not how well you are doing Scrum or Kanban!</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>28</wp:post_id>
  <wp:post_date>2012-07-26 20:09:00</wp:post_date>
  <wp:post_date_gmt>2012-07-26 20:09:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>people-never-suck-only-systems-surrounding-individuals-do</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[3326321965976512312]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>19</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-09-28 09:17:00</wp:comment_date>
    <wp:comment_date_gmt>2012-09-28 09:17:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Maybe you like this site about Agile Results from JD Meier:http://gettingresults.comRegards,Johan Theunissen]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-28 09:17:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>20</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-09-28 10:17:34</wp:comment_date>
    <wp:comment_date_gmt>2012-09-28 10:17:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This comment has been removed by the author.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-28 10:17:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>21</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-09-28 10:17:49</wp:comment_date>
    <wp:comment_date_gmt>2012-09-28 10:17:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Johan, thanks for the tip! I&#039;ll put it on my backlog: stuff to read :-(]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-28 10:17:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Complex vs. complicated</title>
  <link>http://leanarch.eu/2012/07/28/complex-vs-complicated/</link>
  <pubDate>Sat, 28 Jul 2012 18:13:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/28/complex-vs-complicated/</guid>
  <description/>
  <content:encoded><![CDATA[One of the major reasons why so many IT projects fail is <b>complicated architecture</b>. I would even argue, in contrary to so many IT news articles, is that complicated architecture is a bigger problem than bad project management in those failures.<br /><br />Let me get this very precise: It's not <b>complexity</b> that we should worry about. Look around you! So many things are very complex. You probably don't even understand how your fridge, watch or TV works. Still, these are very simple things in usage and they all work and are very predictable. So much in our world is complex and still predictable.<br /><br />Jurgen Appelo described extensively difference between complex and complicated in his book Management 3.0. As ironic as it seems, I'm giving here oversimplified version of his thorough explanation and seen from perspective of IT system architecture.<br /><br />In Agile architecting, we constantly strive to create simple systems. At the same time we usually should not simplify <b>complex</b> stuff. Let me explain this with one example.&nbsp;<span style="background-color:white;">During one of my visits at a large dutch company, group of enterprise architects told me very proud they created "generic business process" which will enable them to deal with any business process in the company. One that rules them all! Standardization gone crazy! This is a typical case of oversimplifying things which are complex by nature. The reason this company has so many different business processes is because they have big diversity of products and services, which are eventually relatively simple for their customers.&nbsp;</span><span style="background-color:white;">The worst of all is that they were planning to cram all these processes into generic one, which is rather impossible unless you want to sacrifice the business value from having clearly wanted diversity.</span><br /><br /><span style="background-color:white;">Complexity is everywhere and it is the reason why this life is so interesting. Complex systems bring value. A human being is a very, very complex system with even more complex behavior; although basic components of human body are just cells. Human being itself is capable of delivering even more complex systems. It's amazing that something as simple as a cell can grow into indefinite complexity.</span><br /><span style="background-color:white;"><br /></span><br /><div class="separator" style="clear:both;text-align:center;"><a href="http://vgrgic.files.wordpress.com/2012/07/33edd-incredible-lego-art-by-nathan-sawaya-yellow.jpg" style="margin-left:1em;margin-right:1em;"><img border="0" height="286" src="http://vgrgic.files.wordpress.com/2012/07/33edd-incredible-lego-art-by-nathan-sawaya-yellow.jpg?w=300" width="320" /></a></div><div class="separator" style="clear:both;text-align:center;"><br /></div><span style="background-color:white;">But, human beings are really bad in dealing with complicated stuff. We can't even comprehend, without partitioning in our head, a drawing containing more than seven blocks and lines. We also use familiar patterns to understand anything. If we create software structure with no or too many patterns, then it will&nbsp;definitely&nbsp;fail.</span><br /><br /><span style="background-color:white;">This is the main reason why is so important we create simple structures capable of delivering complex&nbsp;behavior. One simplicity litmus test: Is every developer in your team capable of explaining the overall system architecture without using any reference?</span><br /><br /><span style="background-color:white;">Many architects and IT managers are trying to buy simplicity from some vendor. They actually never request this literally, but the main reason why companies buy out-of-box solutions so fast is because the business challenge and question is complex and they don't feel capable of dealing with it. The challenge is oversimplified or "patternized" too fast by labeling the problem and buying the product with promise of solving it. In other words, they confuse complexity with complicated. The real complexity is not understood because you must have specific business domain knowledge, which vendors lack. Instead, IT landscape gets only complicated with each new expensive IT&nbsp;gadget. The symptoms are statements from business: "Why does it take us to deliver this product in 5 years and not 5 months like competition does?" or "Our problem is still not solved!"</span><br /><br /><span style="background-color:white;">The best architectures are the ones, which deal with huge number of users and structure can be explained to you grandmother. I've never said architecting is easy. :-)</span><br /><br /><span style="background-color:white;">In the following posts, I'll give many examples how simple enterprise&nbsp;landscapes&nbsp;should look like and practices to achieve this.</span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>29</wp:post_id>
  <wp:post_date>2012-07-28 18:13:00</wp:post_date>
  <wp:post_date_gmt>2012-07-28 18:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>complex-vs-complicated</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[2659583963486596003]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3714777db2e0a975a452de02c2ed0748</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_16e8a5b64d97d27419c4de81d16d3c2c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Bonsai, Agile Architecting metaphor</title>
  <link>http://leanarch.eu/2012/07/30/bonsai-agile-architecting-metaphor/</link>
  <pubDate>Mon, 30 Jul 2012 18:55:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2012/07/30/bonsai-agile-architecting-metaphor/</guid>
  <description/>
  <content:encoded><![CDATA[I have love-hate relationship with metaphors. They can be extremely helpful in explaining complex stuff, but can also be horribly misunderstood or misused in wrong context.  <br /><br />One of these horrible metaphors in software architecture is a picture of a building or city to explain (enterprise) architecture and the architect as a title. This metaphor caused much more harm than good. Following are the main differences between the two:<br /><br /><ul><li>Software architecture is...well...<b>soft</b>. It's quite difficult to refactor a building, while refactoring even the foundation of a software system has become a normal part of Scrum cadence.</li><li>Developing software is for most part a very creative process, while assembling a building with pre-build walls requires much less creativity and a lot of precision. There is little room for mistakes.</li><li>The number of options to build a software product is magnitudes larger than for buildings. The speed of improvement and innovation in software is also much faster. Therefore, too much standardization in software development, in contrary to building construction, blocks improvements and innovation.</li></ul><br /><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left:auto;margin-right:auto;text-align:center;"><tbody><tr><td style="text-align:center;"><a href="http://vgrgic.files.wordpress.com/2012/07/7dabb-k9wit.jpg" style="margin-left:auto;margin-right:auto;"><img border="0" height="320" src="http://vgrgic.files.wordpress.com/2012/07/7dabb-k9wit.jpg?w=254" width="272" /></a></td></tr><tr><td class="tr-caption" style="text-align:center;">Japanese Marble Bonsai</td></tr></tbody></table><br /><div>On other hand, a metaphor of a bonsai tree can show us what Agile Architecting is.</div><div><ol><li>It is about having required complex behavior, while spending minimal amount of water and space.</li><li>Continuous refactoring towards clean and minimal structure.</li><li>It is about getting rid of any technical fanciness without clear value.</li><li>It means taking care of the tree throughout the whole lifecycle.</li><li>Let it grow first, before seeing which improvements are useful. Don't be too late.</li><li>Make very small improvements. Bigger ones tend to be too complicated.</li></ol></div><div><br /></div><div>Sandai Shogun no Matsu is a more than 500 years old bonsai tree.</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>30</wp:post_id>
  <wp:post_date>2012-07-30 18:55:00</wp:post_date>
  <wp:post_date_gmt>2012-07-30 18:55:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bonsai-agile-architecting-metaphor</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="category" nicename="metaphor"><![CDATA[metaphor]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[3074351784276901118]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>16</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-31 06:05:04</wp:comment_date>
    <wp:comment_date_gmt>2012-07-31 06:05:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This really is the best metaphor a came across so far. Though refactoring the foundation of a bonsai seems challenging ;)Really enjoy reading your posts.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-31 06:05:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>17</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-07-31 09:33:03</wp:comment_date>
    <wp:comment_date_gmt>2012-07-31 09:33:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ha, true! Even this one is not perfect. Glad to hear that you enjoy the posts. It motivates me to write more.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-31 09:33:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>18</wp:comment_id>
    <wp:comment_author><![CDATA[Anonymous]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://Anonymousnoreply@blogger.com</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2012-09-24 14:21:25</wp:comment_date>
    <wp:comment_date_gmt>2012-09-24 14:21:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Viktor,We people love visualization and I love metaphors.The reason buildings and towns are often used as metaphors in IT architecture, is because we adopted the term &quot;Architecture&quot;.If you want the building and town metaphors to dissappear, you will have to choose another term for architecture. Regards,Johan Theunissen]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-24 14:21:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>115</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>218.250.172.237</wp:comment_author_IP>
    <wp:comment_date>2014-03-06 18:05:53</wp:comment_date>
    <wp:comment_date_gmt>2014-03-06 10:05:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I just might! :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1394100353</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1394100353.3136670589447021484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1394100353</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-06 10:05:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2548</wp:comment_id>
    <wp:comment_author><![CDATA[Harold Lee]]></wp:comment_author>
    <wp:comment_author_email>jobsforhlee@cox.net</wp:comment_author_email>
    <wp:comment_author_url>http://www.linkedin.com/in/HaroldBLeeJr</wp:comment_author_url>
    <wp:comment_author_IP>107.77.241.11</wp:comment_author_IP>
    <wp:comment_date>2018-06-18 22:56:15</wp:comment_date>
    <wp:comment_date_gmt>2018-06-18 14:56:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Amazing! I am an Enterprise Architect, and I also have the hobby of growing bonsai. While working on a bonsai tree, I came to realization that the same mindset, mindfulness, and practices that it takes to  grow and sculpt a bonsai trees parrallel what is/should be done when doing Enterprise Architecture, which you also describe so well. It is nice to see that someone else has also seen metaphor between architecture and bonsai disciplines.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1529347829.410441;s:5:"event";s:17:"status-unapproved";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1529333776</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1529333776.842043;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1529347832</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1529347832.764776;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>J2EE architecture patterns are already painful legacy</title>
  <link>http://leanarch.eu/2013/01/01/j2ee-architecture-patterns-are-already-painful-legacy/</link>
  <pubDate>Tue, 01 Jan 2013 21:11:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2013/01/01/j2ee-architecture-patterns-are-already-painful-legacy/</guid>
  <description/>
  <content:encoded><![CDATA[It is amazing that there are still architects designing and advising J2EE architecture patterns when creating typical server-based applications with Java. Before you think "OMG maybe I'm doing it also!", I'll give you a few of these practices:<br /><ol><li>J2EE application server is the fundament providing all the technologies needed by your application and your application relies upon; instead of other way around: your application might use some of J2EE technologies, Spring or other framework, or combination to deliver functionality.</li><li>Two-phase commit transaction management, which is just wrong from the beginning as a concept.</li><li>System is designed by using standard multi-tier model (client, presentation, business, integration, data, resource) and placing code mainly in different kinds of EJB's.</li></ol><div>Many also emphasize core J2EE patterns like "front controller", "business delegate", "session facade" as the main drive force behind good design. They forget that these patterns have almost nothing to do with object orientation and do not manage any domain complexity. It is all technical, often only needed because of the overuse of J2EE technologies and all those tiers. You want to learn really useful design practices? Read: Domain Driven Design from Eric Evans.</div><div><br /></div><div>Grab any possible chance, while you can, to get rid of all those tiers. Always search for simpler solution, even if not J2EE standardized. Reduce your dependency on application server technologies as much as possible. The code that provides business functionality should be free of any technical stuff like transaction management, EJB, SOAP, clustering, caching, integration.</div><div><br /></div><div>This will make your system less likely to become painful legacy, ready to be replaced in the future when application servers look completely different or are not important at all.</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>31</wp:post_id>
  <wp:post_date>2013-01-01 21:11:00</wp:post_date>
  <wp:post_date_gmt>2013-01-01 21:11:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>j2ee-architecture-patterns-are-already-painful-legacy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[2038055210630093344]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>31</wp:comment_id>
    <wp:comment_author><![CDATA[Suresh S. a.ka. Suri]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/03282732422693045780</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-05-21 18:42:47</wp:comment_date>
    <wp:comment_date_gmt>2013-05-21 18:42:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi,Excellent write up about the way &quot;Old School&quot; is clinging on to ideas.I am currently in a project that is planned to be used as a platform and slowly so many things like complexity, adaptability to changes is slowly becoming a big concern.. Is there anything specific you can suggest than can help me learn better and work towards making my existing system more flexible and adapatable to changes?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-21 18:42:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>32</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-05-21 19:33:05</wp:comment_date>
    <wp:comment_date_gmt>2013-05-21 19:33:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Suresh,Thanks! It is difficult to advise something really useful without knowing the context. But still, I would suggest to let go of &quot;making system more flexible&quot;. Flexibility in itself does not mean much. Even within a context, it is quite difficult to define what exactly need to be flexible and how. For me, flexibility is just part of implementation of each separate function requested and connected to business need.&quot;Adaptable to changes&quot; has in practice pretty much the same meaning as simplicity. If some solution is very simple and straight forward, then it is cheap to replace it too. In other words, I never design systems that should meet changing requirements, but design and system itself should be easy to change with those requirements.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-21 19:33:05</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Scaling Agile Architecting is NOT rocket science</title>
  <link>http://leanarch.eu/2013/01/05/scaling-agile-architecting-is-not-rocket-science/</link>
  <pubDate>Sat, 05 Jan 2013 21:26:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2013/01/05/scaling-agile-architecting-is-not-rocket-science/</guid>
  <description/>
  <content:encoded><![CDATA[What about Enterprise Architecture? Can it also be Agile and how does Agile mindset affects Enterprise Architecture? The book <a href="http://deanleffingwell.com/book-scaling-software-agility/" target="_blank">"Scaling Software Agility" from Dean Leffingwell</a> elaborates on Agile scaling challenges in general. One of the aspects is architecture.<br /><br />My general opinion about this book is that most of the book is basic Agile knowledge, but it does have a few practices related to Agile Architecting on which I'd like to elaborate:<br /><br /><div class="separator" style="clear:both;text-align:center;"><a href="http://vgrgic.files.wordpress.com/2013/01/1e741-kids.png" style="margin-left:1em;margin-right:1em;"><img border="0" height="236" src="http://vgrgic.files.wordpress.com/2013/01/1e741-kids.png?w=300" width="400" /></a></div><br /><br /><h2>Component based Agile teams</h2><div>The idea is to organize multiple teams in accordance to architecture. Each component is very much loosely coupled with other components which makes life easier for a team and they don't depend too much on progress of other teams.</div><div>IMO, this can work most of the times, with one limit that needs to be considered: Do not assume too fast that multiple teams cannot take care of same multiple components&nbsp;simultaneously. Although more difficult to manage, the great advantages is quality improvement when more people are working with the same code and improved interchangeability of team members because so many of them know the code.<br /><br /></div><div></div><h2>Architectural Runway</h2><div>Before teams pick up their stories, basic overall architectural decisions are made. These are necessary for correct definition of each component built by separate teams. I like this, except the fact that you should have separate (runway) teams named "Architecture" or "Prototyping team" consisting of architects and/or technical leaders from other teams which don't deliver direct value.</div><div>Although Leffingwell mentions that such teams deliver coded architecture and not some document, there are still two major pitfalls:</div><div><ol><li>Functional teams are not familiar and involved in this early development and tend to dislike delivered product because they often do not support to be delivered stories well.</li><li>Architecture and prototyping teams tend to be technology-driven and the question: "Is this really needed?" is not easily answered. Keeping things as simple as possible is not natural in such teams.</li></ol><div>I find it much better to have same functional teams who deliver direct value also collaborate and make these decisions themselves. Also, term: "architectural runway" sounds like something special, while in practice it is just team members from different teams getting together and making decisions.</div></div><div><br /></div><h2>Design spikes</h2><div>According to Leffingwell, these are activities intended to address design challenges, architectural extensions, and the impact of new technologies or to explore critical problems with the existing solution. Design spikes do not deliver direct value and occur in each iteration.</div><div>What I wonder about design spikes is what makes something worth spending time on regular basis discussing, discovering and improving by itself? What kind of design issue is not driven by one or more stories or business requirements and thus not prioritized in product backlog? In other words, I think it is really good to spend time discussing and designing, but always driven by real business / user need. Therefore, it is not needed to plan such meetings on regular basis; let them happen as part of user stories design.</div><div><br /></div><h2>Conclusion</h2><div>In large enterprise Agile projects and organisations I have worked with, we never needed architectural runway or something similar. In contrary, such undertakings were standing in the way of delivering real architecture and quality.</div><div>What we did need is more intensified collaboration between teams and business during delivery of real value. This means, many on-demand cross-functional teams workshops and meetings. This requires creativity in order to make them as effective as possible.</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>33</wp:post_id>
  <wp:post_date>2013-01-05 21:26:00</wp:post_date>
  <wp:post_date_gmt>2013-01-05 21:26:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scaling-agile-architecting-is-not-rocket-science</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[8155189471725799142]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Scrum is a very inefficient framework</title>
  <link>http://leanarch.eu/2013/01/31/scrum-is-a-very-inefficient-framework/</link>
  <pubDate>Thu, 31 Jan 2013 08:14:00 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://vgrgic.wordpress.com/2013/01/31/scrum-is-a-very-inefficient-framework/</guid>
  <description/>
  <content:encoded><![CDATA[Yesterday I talked to several people about a workshop they had and <strong>efficiency</strong> came to realize that some tend to hammer on efficiency as something very relevant, although not using the word itself. It might even be the number one reason why people don't understand Agile completely.

<br /><br /><div class="separator" style="clear:both;text-align:center;"><a href="http://vgrgic.files.wordpress.com/2013/01/40f0d-4568372067_cdab6de16b.jpg" style="margin-left:1em;margin-right:1em;"><img border="0" height="272" src="http://vgrgic.files.wordpress.com/2013/01/40f0d-4568372067_cdab6de16b.jpg?w=300" width="320" /></a></div><div class="separator" style="clear:both;text-align:center;"><br /></div><br />

Except from an excellent <a href="http://agile.dzone.com/videos/our-obsesssion-efficiency" target="_blank">presentation given by Dan North</a>&nbsp;I could not find any article where Agile / Scrum and efficiency is thoroughly discussed. On other hand, there is a lot of stuff about this from Lean perspective.

<h1>Efficiency vs. Effectiveness</h1>
Just to make sure we understand each other:
<ul>
	<li>efficiency = the ratio of the useful work performed by a machine or in a process to the total energy expended.</li>
	<li>effectiveness = the degree to which something is successful in producing a desired result</li>
</ul>

The first one is about <b>time well spent</b> and the second about <b>getting right results or doing the right thing</b>. These seem not <b>mutually exclusive</b> in Scrum, but they are.

<h1>Why is Scrum inefficient?</h1>
Actually, most of the stuff in Scrum is inefficient. Think about pair-programming, decision making by whole team, retrospectives, product backlog grooming, open spaces, and so on. It is much more efficient to spend everyone's time writing code instead of having all these meetings and other stuff. You might even hear some developers complain about these meetings. Mainly in the beginning, while experience with Scrum is still lacking.

<h1>Efficiency is irrelevant</h1>
As long as a team keeps delivering high quality <b>desired</b> product and keep improving their <b>effectiveness</b>, I don't care if they spend most of their time chatting instead of coding, most of their time experimenting, spiking multiple solutions for the same problem, playing games, reading Reddit or laying on the beach every sprint. If team feels that enjoying the beach every sprint will improve their effectiveness by getting extra D-vitamins from sun and a nice cocktail, they should certainly do that.
One more time, effectiveness means achieving your goal <b>as good and soon as possible</b>. So, what exactly will go wrong if you're still inefficient as hell? Nothing!It is sad to see that most managers today know so much about measuring efficiency and so little about measuring effectiveness. Measuring effectiveness is about measuring how well the products or services meet customer needs / requirements. Also, how well did we hit the stop of to be achieved goal.

<h1>Going for efficiency is bad</h1>
It is not that being efficient is bad. In contrary, it is very good that people spend their time well. That is something personal. The problem is that we, on bigger scale than personal, tend to forget effectiveness when talking about efficiency. We don't see contradiction with effectiveness - which is far more important-, because it is often so difficult to see. An example:
A: "We spend too much money making architectural&nbsp;decisions&nbsp;in those long and frequent sessions. Maybe only architect and product owner should take all those decisions."
B: "Do we keep getting the best / simplest decisions when only architect and product owner takes them?"
A: "No, but it's more efficient..."
B: "How much time does everybody spends understanding and accepting those decisions afterwards? How much time do we spend controlling and discussing that decisions are enforced and correcting them afterwards?"

In other words, when seeing a big picture, at the end, it is sometimes not even efficient to go for efficiency and it is certainly not effective. Going for effectiveness, on other hand, can sometimes also be very efficient.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>35</wp:post_id>
  <wp:post_date>2013-01-31 08:14:00</wp:post_date>
  <wp:post_date_gmt>2013-01-31 08:14:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scrum-is-a-very-inefficient-framework</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="category" nicename="effectiveness"><![CDATA[effectiveness]]></category>
  <category domain="category" nicename="efficiency"><![CDATA[efficiency]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_blog</wp:meta_key>
    <wp:meta_value><![CDATA[blog.leanarch.eu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_author</wp:meta_key>
    <wp:meta_value><![CDATA[Viktor Grgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blogger_972bc0b559603e4cbf70df50f817aae3_permalink</wp:meta_key>
    <wp:meta_value><![CDATA[2306725011970031966]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[edwinschouten.nl]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://edwinschouten.nl/</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-02-02 21:36:08</wp:comment_date>
    <wp:comment_date_gmt>2013-02-02 21:36:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great post Victor, to me efficient is more related to factory like repetitive work which in essence does not match with any form of creativity like creating new functionality. I think you have nailed it to effectiveness, in the sense of delivering the right business support when it&#039;s needed. It&#039;s not about quantity, it&#039;s about quality. ]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-02 21:36:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>26</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-02-02 23:32:27</wp:comment_date>
    <wp:comment_date_gmt>2013-02-02 23:32:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey Edwin, thanks!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-02 23:32:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>29</wp:comment_id>
    <wp:comment_author><![CDATA[Eltjo]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/14118904955820108409</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-05-05 18:23:02</wp:comment_date>
    <wp:comment_date_gmt>2013-05-05 18:23:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Viktor, your post reminds me of something Mary Poppendieck said in a tutorial at SATURN 2013 I attended last Friday: &quot;utilization is the most ridiculous metric possible for a development team&quot;. (your definition of efficiency is what&#039;s usually called utilization). This comes from basic queueing theory: depending on the size of the batches of work, pushing utilization upwards will decrease throughput to zero. If the batches of work are large, this effect will start at utilization over 50%. &quot;Fully utilized highways are called parking lots&quot;.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-05 18:23:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>30</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.blogger.com/profile/07587845252573255289</wp:comment_author_url>
    <wp:comment_author_IP/>
    <wp:comment_date>2013-05-05 18:27:17</wp:comment_date>
    <wp:comment_date_gmt>2013-05-05 18:27:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, yes, you&#039;re right. Maybe I should have better used word &quot;utilization&quot; afterwards.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-05 18:27:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2321</wp:comment_id>
    <wp:comment_author><![CDATA[5 Common Misconceptions About Agile Development - Oracle Blog - Oracle - Toad World]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://www.toadworld.com/platforms/oracle/b/weblog/archive/2017/03/01/5-common-misconceptions-about-agile-development</wp:comment_author_url>
    <wp:comment_author_IP>12.106.87.255</wp:comment_author_IP>
    <wp:comment_date>2017-03-02 01:53:46</wp:comment_date>
    <wp:comment_date_gmt>2017-03-01 17:53:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Scrum is a Very Inefficient Framework. Victor Grgic. https://leanarch.eu/2013/01/31/scrum-is-a-very-inefficient-framework/ [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1488395390.7817909717559814453125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1488421641.894390106201171875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1488421641</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1488390827.0176150798797607421875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Agile and Scrum in Hong Kong</title>
  <link>http://leanarch.eu/2013/12/04/agile-and-scrum-in-hong-kong/</link>
  <pubDate>Wed, 04 Dec 2013 03:09:20 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=147</guid>
  <description/>
  <content:encoded><![CDATA[<p>In short, Agile is starting to take off in Hong Kong. Others might say, it is not really happening here (yet), depending on how optimistic one is. While in America, Europe and even other APAC countries, Agile software development is widespread, Hong Kong is a quite different story.</p>[caption id="" align="aligncenter" width="487"]<a href="http://vgrgic.files.wordpress.com/2013/12/img_0974.jpg"><img class="size-full wp-image  " id="i-239" alt="Image" src="http://vgrgic.files.wordpress.com/2013/12/img_0974.jpg?w=487" width="487" height="182" /></a> Dinner and gala for ICT CEOs of Hong Kong.[/caption]<p>Why? There are several reasons. Most people associate Agile and Scrum with software development, and there are less software development companies and software developers in Hong Kong compared to neighbouring countries. It seems that most software for Hong Kong customers is developed in India or Singapore.</p><p>Another reason could be cultural. Software development as craftsmanship seems to be less valued in Hong Kong than in other countries. Also, there is this obvious hierarchy, where management takes decisions and subordinates follow up. Actually, this seems to be only the symptom of much deeper difference with e.g. Europeans. Higher ranking people, both in private (parents and other older family members) and business life, are much more respected than in Europe. This very nice cultural aspect, has a pitfall. It is quite difficult for teams to take substantial decisions without simply asking the boss what she wants.Â This makes introduction of self-organising teams easier if management actively and continuously approves and (co-)facilitates the coaching process.</p><p>Hongkongers are hard working people. Working more than 40 hours a week is very normal. Children are brought up in relatively protected environment, where hard work and obedience are being rewarded. Typical Agile guys in self-organising teams are rather assertive and opinionated, and don't really like working hard. Instead, they like to continuously improve effectiveness of their work. In other words, achieve more while doing less. There is of course nothing wrong with working hard. It is just that in order to be more effective, very often we have to slow down and retrospect on what is happening. This might feel like waste of time and awkward.</p><p>Also, people are very eager to learn new things. Preferably by listening to a lecture or some other form of teaching. Unfortunately, there is not much to learn about Agile and Scrum unless you actually start doing it as soon as possible. Becoming Agile is more about learning from experience, and less about learning from others.</p><p>I've also wondered if delivering a software solution here in waterfall approach is simply more successful than in Europe or US. Therefore, an Agile approach with faster delivery would simply not be needed. That is definitely not the case. The problems with disconnected business, large IT projects, mostly outsourced and managed with thick contracts are same as anywhere else.</p><p>Comments on the subject are very much welcome.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>147</wp:post_id>
  <wp:post_date>2013-12-04 11:09:20</wp:post_date>
  <wp:post_date_gmt>2013-12-04 03:09:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile-and-scrum-in-hong-kong</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="hong-kong"><![CDATA[hong kong]]></category>
  <category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1219</wp:comment_id>
    <wp:comment_author><![CDATA[Timothy Lok]]></wp:comment_author>
    <wp:comment_author_email>loktinhung@yahoo.com.hk</wp:comment_author_email>
    <wp:comment_author_url>https://www.facebook.com/InnovativeEntrepreneur</wp:comment_author_url>
    <wp:comment_author_IP>202.69.92.83</wp:comment_author_IP>
    <wp:comment_date>2014-09-29 17:33:25</wp:comment_date>
    <wp:comment_date_gmt>2014-09-29 09:33:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very good passage.  Typical IT guy in Hong Kong just follows orders instead of solving the root problems and seldom try to find ways to improve things more effectively and efficiently.  Agile is a way of thinking that improves things in long run, rather than fixing things in the surface without solving the root causes on a daily basis.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1411983206</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1411983206.0830380916595458984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>682390905</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1411983206</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-29 09:33:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1221</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>223.197.200.92</wp:comment_author_IP>
    <wp:comment_date>2014-09-29 18:16:32</wp:comment_date>
    <wp:comment_date_gmt>2014-09-29 10:16:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Timothy, good to hear you like it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1411985792</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1411985792.678884983062744140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1411985792</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-29 10:16:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Difference between Enterprise and Software Architecture is artificial</title>
  <link>http://leanarch.eu/2013/12/18/difference-between-enterprise-and-software-architecture-is-artificial/</link>
  <pubDate>Wed, 18 Dec 2013 08:21:15 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=273</guid>
  <description/>
  <content:encoded><![CDATA[Every single Enterprise Architect I know is or use to be an IT guy. Most of them are saying they are responsible for creating or adjusting processes, policies, flow of information, resource management and technology of their organisation. In reality, almost all of them are busy with technology, and maybe information part. At best, they are making nice pictures of business processes and information. There are certainly people responsible for execution of business strategy, but somehow they don't call themselves Enterprise Architects. These people are often C-level managers or work for a policy department. "Enterprise Architects" might give advises to these people, but they are never part of the club. At least not in any organisation I've seen.
<p style="text-align:center;"><img class="size-full wp-image aligncenter" id="i-381" alt="Image" src="http://vgrgic.files.wordpress.com/2013/12/enterprise-vs-software.png?w=487" width="487" height="207" /></p>
No matter how much we discuss term Enterprise Architecture - and there are really many of them, in reality it is always about making decisions about some combination of IT systems within one organisation seen from different perspectives (workplaces, software, infrastructure, integration, middleware, hardware, and so on). Enterprise Architects are very much concerned with processes, information flowing between departments and people, policies, strategy, but these are mere inputs for making IT decisions. At best, certain IT limitations or capabilities can influence business decisions in making or adjusting business processes.

Therefore, difference between Enterprise and Software is just a matter of scale and limited number of different aspects. The rest should be treated the same way. Btw, term software architecture in this context can be replaced with solution or system architecture. This distinction is also just as much relevant.

Let me explain. The first question would be: Which input is not relevant in creating either of them?
<ul>
	<li>Business processes
When creating a specific solution it is very much important that processes in specific software solution represent and are aligned with one or more business processes.</li>
	<li>Strategy and Business Vision
One of the first things an Agile team does is get together with business people and define a Production Vision Board. One of the typical inputs here is a story from people responsible for strategy to explain the ultimate business goal.</li>
	<li>Information
Domain-Driven Design is one of the most important practices in designing software solutions. The most important message of DDD is ubiquitousÂ language. It means that terminology in code should be same as terminology used by business / users. In other words, developers are required to understand information on enterprise level, but only scaled down to their specific domain. Wether one defines Canonical Data Model, master data, reference data, or whatever terminology used, none of these are lacking in one software solution. Only terminology might be different. The difference is again only scale, and speed of change. Knowledge and practices in defining and partitioning information across different systems are same when defining one system.</li>
</ul>
Another question is wether concerns and practices are so different:
<ul>
	<li>Workplace, hardware, infrastructure, network
Any of these aspects are very much important when delivering a solution for obvious reasons. There are software / solution architects or teams only concerned with code, but that is just simply irresponsible in Agile environments.</li>
	<li>Design practices
A nice example here are SOLID principles. I wish anyone who call himself Enterprise Architect could learn these principles. Especially when creating services in SOA. Our enterprise landscapes would become "clean enterprise landscapes", just like we practice <a href="http://blog.goyello.com/2013/01/21/top-9-principles-clean-code/" target="_blank">clean code</a>.</li>
	<li>Quality requirements
The same as for one system, the direction in enterprise landscape being formed is based on required quality requirements like security, capacity, availability, and so on. These might be different for different systems, but same rules apply to a single system. Some parts of one solution are allowed to be less available.</li>
</ul>
I could go on with many more examples, but I invite you to challenge me in this statement first. What makes Enterprise Architecting so special? Of course, you will need to agree on my definition of Enterprise Architecture first. :-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>273</wp:post_id>
  <wp:post_date>2013-12-18 16:21:15</wp:post_date>
  <wp:post_date_gmt>2013-12-18 08:21:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>difference-between-enterprise-and-software-architecture-is-artificial</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="post_tag" nicename="enterprise-architecture"><![CDATA[enterprise architecture]]></category>
  <category domain="post_tag" nicename="software-architecture"><![CDATA[software architecture]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_69e25ef433f86beca4bcec69400509df</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>45</wp:comment_id>
    <wp:comment_author><![CDATA[enectoux]]></wp:comment_author>
    <wp:comment_author_email>emeric_nectoux@yahoo.fr</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>82.238.76.106</wp:comment_author_IP>
    <wp:comment_date>2014-01-02 17:25:57</wp:comment_date>
    <wp:comment_date_gmt>2014-01-02 09:25:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hello,

Even though, as you mentioned, lot of skills / practices / methodologies are shared between enterprise architecture and software architecture disciplines, you forgot to mention a bunch of them that are different. For instance, "change management" skill is mandatory for an enterprise architect and not needed by a software architect (dealt by someone else in an implementation project), another one that I could mention would be the high communication skills that is needed by an EA (as you mentioned, the EA needs to talk to C-level, being able to summarize quickly, not being drawn into details), communication skill is needed at a complete different level for a software architect (discussing with his peers and with developers) 

I could continue like this for a while...

So, NO, enterprise architect and software architect are not the same (neither the same people nor the same job) There are a lot of similarities, as there are a lot of differences... But as you know, the devils is in the details... ;)

To conclude, you may say that the software architecture discipline is a part of the Enterprise architecture discipline, that I would have a agree too. :)

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>5779769</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388654757</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388654757.485639095306396484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"enectoux";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1388654757</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-02 09:25:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>46</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>218.250.172.237</wp:comment_author_IP>
    <wp:comment_date>2014-01-02 17:49:51</wp:comment_date>
    <wp:comment_date_gmt>2014-01-02 09:49:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I understand your opinion. You are right that having people who properly deal with architecture on enterprise and software level is important. Communication skills are also extremely important. Although I know what you mean, but rather funny to ask people: "Do you have C-level communication skills?" when hiring an enterprise level guy. I don't see why good communication skills are less important. They might be somewhat different, which is a problem on its own and certainly solvable by making sure that even developers talk to C-level people. Something that I've managed to achieve in several organisations as a coach, and specially C-level people were very glad afterwards.

Term "change management" have become extremely vague and over bloated in IT. It can mean many things.

Maybe a mistake in my post is that I mentioned in beginning "architect" instead of simply architecture, which is the main point. Skills people need for doing architecture on scaled level (enterprise) can be slightly different. Interesting thing to notice is that very often a group of senior hands-on developers from different teams are better capable of making enterprise decisions than many enterprise architects.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388656191</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388656192.010366916656494140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>18827320835</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1388656192</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-02 09:49:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>47</wp:comment_id>
    <wp:comment_author><![CDATA[aelena (@aelena)]]></wp:comment_author>
    <wp:comment_author_email>aelena@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/aelena</wp:comment_author_url>
    <wp:comment_author_IP>81.36.85.220</wp:comment_author_IP>
    <wp:comment_date>2014-01-02 20:23:54</wp:comment_date>
    <wp:comment_date_gmt>2014-01-02 12:23:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I actually tend to agree on this sort of definition as opposed to the "purer" concept of EA as a separate practice. As the old adage goes, "everyone is in sales", so it is also true that every company is, ultimately, in the software business. 

At the end of the day, every strategy, every automated business process, etc. are to be embodied in code, running on some servers, so it is bound to happen that both architectures will have to touch and share a lot, in fact.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388665435</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388665436.1542971134185791015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/1672915137/Screen_Shot_2011-11-16_at_21.17.06_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>8227112</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>18832724404</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1388665436</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-02 12:23:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>48</wp:comment_id>
    <wp:comment_author><![CDATA[enectoux]]></wp:comment_author>
    <wp:comment_author_email>emeric_nectoux@yahoo.fr</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>80.215.197.219</wp:comment_author_IP>
    <wp:comment_date>2014-01-03 02:16:08</wp:comment_date>
    <wp:comment_date_gmt>2014-01-02 18:16:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, communication skills are different (if you read carefully, I did not wrote "less important")

When it comes to "change management" as most of the time with IT, the term has been miss used / blured... which doesn't mean it is wrong. Might need to come back to the original definition... but that should deserve another post ;) - not in comments -

Finally, I think we agree :) both architectures (enterprise and software) are different. Needed skills are different... So why not making a difference? It would help not to mix / blur things, wouldn't it? ;)

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>46</wp:comment_parent>
    <wp:comment_user_id>5779769</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388686570</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388686571.622828006744384765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"enectoux";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>18847027670</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1388686572</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-02 18:16:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>49</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>218.250.172.237</wp:comment_author_IP>
    <wp:comment_date>2014-01-03 10:19:34</wp:comment_date>
    <wp:comment_date_gmt>2014-01-03 02:19:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'll give a few reasons:
1. We needlessly overcomplicate IT because of this.
2. People from enterprise learn too little from teams because they feel they are different.
3. It is limiting the empowerment of teams as one of the core Agile values. This limitation is one of the important reasons why Agile is not scaling well. The companies which solved this (like Spotify) have some really nice results.

In other words, there are definitely differences. But they are irrelevant compared to bad effects exaggeration of differences has on IT performance.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388715574</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388715574.9736080169677734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>18866980652</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1388715575</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-01-03 02:19:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2329</wp:comment_id>
    <wp:comment_author><![CDATA[Diego]]></wp:comment_author>
    <wp:comment_author_email>diego@trusteagle.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>77.165.206.43</wp:comment_author_IP>
    <wp:comment_date>2017-05-07 03:17:46</wp:comment_date>
    <wp:comment_date_gmt>2017-05-06 19:17:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I was in a meeting few days ago in which there were 2 domain architects, one platform arch, one system arch, one software arch, a business arch and few others ...
Being one of them I felt at best very silly. 

I consider enterprise arch as a superset of all these skills, not as a separate thing. From distributed system arch to why not infra and ops. Think of the boxes of zachmann and you get the picture, maybe not a specialist in each but at least with a decent clue of each.

Prob is, as from first comment also, in almost none of the orgs and people I have seen ent archs can fit the bill. Lots are over 50s recycled mainframe progs, that talk in wordly abstractions, or worse mgmt consultants that have never wrote software ... 

Maybe we can't just say that there is a lot of bad stuff around EA, due to both consultants, to elderly ones and to people that should go back coding time to time. Cause it would be to embarrassing...

This results that the average EA guy is usually scared off to go down to a squad babbering of their latest swagger crack.

All the wordly abstractions are appreciated only if they are traceable down to concrete items in each brain of the org, and same for all the nice pictures, patterns and so on so forth, that shall be traceable to system designs and coding through standard techniques such as archimate.

The avg answer is: oh we are happy about our business services but no we are not intersted to map them to technologies, implementations, infra, to delve into interfaces, detail out models and so on ..
Maybe it becomes too much an easy job this way ?

With a bit of practice I can teach my wife the wordly talks, acronyms and fancy names ... and she will be able to do as well as these guys... But ops .. it will not be so easy for her to spot if that piece of commercial package integration hits the owasp and is a no no for a specific case.

Maybe these bad woods chopped out the easiest spot, and now are on their way to the door cause their CIO is pissed ...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>4770037241</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1494098267</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1494098267</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1494098267.05640888214111328125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>We are the Borg, our role is Architecture Owner!</title>
  <link>http://leanarch.eu/2013/12/20/we-are-the-borg-our-role-is-architecture-owner/</link>
  <pubDate>Fri, 20 Dec 2013 10:53:12 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=441</guid>
  <description/>
  <content:encoded><![CDATA[<p>I was usually the guy who facilitated different architecture related sessions at HaMIS - Port of Rotterdam. As soon as I was absent for few weeks, nobody organised them in those weeks. During retrospective meeting, several of them would mention they missed those meetings and blamed themselves that nobody thought or took responsibility for organising them. The simple conclusion and reason for this problem was: Viktor usually organised them, and he is the architect.</p><p>Every now and then I get in discussion with people about different roles we have in software development. For example, it starts with explanation that Scrum needs someone to be responsible for architecture. That role is named e.g. "Architecture Owner". Then I try to explain that from Agile perspective, we would like to have whole team feel responsible for the architecture. Having one guy call himself architecture owner, tester, analyst will clearly contradict this goal. The answer is then: Oh no, there is no problem at all. We just need to have architecture role and it does not need to be one person. It can certainly be fulfilled by whole team.</p><p>Theoretically, it is possible to have multiple people fulfilling one role. The interesting thing is that nobody really does something like that in reality. It is just confusing. You either have specific group of people with dedicated responsibilities as a group with specific name (Scrum team, architecture team, Centre of Excellence, etc) or a single person. I never heard group of people say about themselves: "Our role is architecture owner!" or any other role in that sense.</p><p>So, what is the point of having a role if whole team should fulfil it?! It is just a responsibility or discipline that needs to be taken care of. What is this need to introduce new roles? The suggestion that with such role team would better take care of architectural aspects does not make much sense. Teams might need knowledge and experience to fulfil their responsibility for certain aspect as architecture, but that has nothing to do with ownership or having a role.</p><p>In contrary, teams tend to neglect certain responsibilities simply because someone else is appointed and granted a role called blablabla owner. How ironic, the whole problem of taking responsibility is actually created by people whose intentions are to solve it.</p><p>It it were some very specific task, which requires knowledge very few people have and it must be done properly, I would understand. But, architecture is one the most important disciplines in software development. It is extremely important that whole team feels responsible and most team members should have the knowledge for dealing with complexities of architecture. The reality is of course that many teams do not have this knowledge. Very often this proves to be the cause of total failure of an Agile team. There are many ways to solve this problem. Introducing a new role is not one of them. It merely maintains suboptimal state of having one or few people keeping responsibility from the place it should be.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>441</wp:post_id>
  <wp:post_date>2013-12-20 18:53:12</wp:post_date>
  <wp:post_date_gmt>2013-12-20 10:53:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>we-are-the-borg-our-role-is-architecture-owner</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="post_tag" nicename="roles"><![CDATA[roles]]></category>
  <category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:comment>
    <wp:comment_id>118</wp:comment_id>
    <wp:comment_author><![CDATA[Book review: Software Architecture for Developers by Simon Brown | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/03/07/book-review-software-architecture-for-developers-by-simon-brown/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.9.98</wp:comment_author_IP>
    <wp:comment_date>2014-03-07 16:46:59</wp:comment_date>
    <wp:comment_date_gmt>2014-03-07 08:46:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] a team. How this role could be fulfilled by a team is not really explained, which further emphasises my negative opinion about having a role in the first place. At the end, I don&#8217;t share opinion that teams need an architect, [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1394182020</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1394182020.4538080692291259765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-07 08:46:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Should we blame methodologies?</title>
  <link>http://leanarch.eu/2013/12/29/should-we-blame-methodologies/</link>
  <pubDate>Sat, 28 Dec 2013 19:52:46 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=530</guid>
  <description/>
  <content:encoded><![CDATA[It is often said: You can't blame a methodology for not being used properly. Well, yes you can. Consider the fact that everybody's intention when using one is to succeed. Nobody wants to fail in delivering a software product. The promise of any methodology, even any waterfall methodology, is to deliver value sooner or later. Any failure starts with a choice of using one or multiple of these methodologies and buying into their promise.

Some say, one should have enough knowledge to apply a certain methodology. If not, one is responsible for the failure and not the methodology itself. This does sound tempting until you consider the fact that people who preach this are paid a lot to explain others how to properly apply the methodology. Nevertheless, even after applying methodology according to every recommendation, failure is still there. Ironically, very often because of huge effort being put into doing methodology in a proper way at cost of delivering actual value as soon as possible.

Some say, software development is like manufacturing. Therefore we have all kinds of Software Development Factories. Software developers are factory workers with limited focus and knowledge and therefore need a process, which will guide them towards delivering a product. I guess anyone who does software development in today's complex world has found out that treating software developers as factory workers constrained by a strict process is a recipe for failure. Besides, it would be more realistic to consider software development same as trying to land a jet fighter on aircraft carrier for the first time than a factory.

It is the fault of a methodology when people use less creativity and less improvisation to deliver value, because methodology discourages them to deviate from rules. It is the fault of a methodology when people are only concerned about their always limited set of tasks and responsibilities assigned to their role.

Some might say, no methodology says we should be restricted in any of these aspects. True! Still, mere existence of a methodology introduces certain limitations by definition. Bigger, more complex methodologies tend to be more limiting than simple ones. Even if everything described in a methodology is called only a practice; and each of the practices can be used but can be skipped too. When used, people will call these practices: <strong>the best</strong> practices. Who can argue the usage of a best practice? People are discouraged in adjusting the process. Not because it is not allowed, but because of the assumption that they are less capable of setting up a process in their situation than people who spent a lot of time and effort in creating this great methodology.

Does this mean we should not have methodologies in software development? No, it does not. Certain guidance is always needed, and we definitely need ever improving and new practices. But, there is a difference between having rules defined by people who use, change, improve these rules; and imposing these rules on people. There is a difference between having a methodology as a mean to help people deliver more value and hiring people according to roles defined by a methodology.

Every methodology or framework has this problem. Even XP, Scrum or Kanban. The most important reason why these are so much simpler than others is to encourage people to think and be more creative in every possible way. In fact, there is so little really described or prescribed in these that for successful teams methodology is just a detail, a sideshow. Doing scientific research on how successful Agile methodologies are proves to be very difficult. Why? It is same as trying to determine wether Mandarin is successful language in doing business. To have a common language is crucial when doing business, but rather irrelevant detail in the whole process. This is different for large methodologies, where methodology itself is an important factor. Agile brings us more success not because of better methodologies, but rather because we have less methodology.

Still, many organisations are imposing Scrum on people in same way as they did with previous methodologies. Suddenly, many of often used practices have become the only way to do e.g. Scrum and XP properly. User stories, poker planning, TDD, specific meetings, burndown chart, Scrum of Scrums, pair programming. It gets much worse when extended by DAD or SAFe. LinkedIn forums are full of discussions about which of these are better or how to use them properly.

Don't get me wrong. I give trainings and coach teams in these practices because they are so great. Nevertheless, if we keep giving methodologies the front seat at cost of people, we will keep blaming methodologies for failures. There is a huge difference between giving a "why" behind each practice and simply explaining how it should be applied properly. A team can only become Agile if team members understand "why" behind every practice they use.

So, the next time you say "Scrum has failed in our organisation!", ask yourself what exactly did you or did your organisation do. What or rather <strong>who</strong> is to blame?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>530</wp:post_id>
  <wp:post_date>2013-12-29 03:52:46</wp:post_date>
  <wp:post_date_gmt>2013-12-28 19:52:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>should-we-blame-methodologies</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="methodologies"><![CDATA[methodologies]]></category>
  <category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="post_tag" nicename="software-development"><![CDATA[software development]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/93Nnq5rnYkd]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Forgotten questions</title>
  <link>http://leanarch.eu/2014/01/09/forgotten-questions/</link>
  <pubDate>Thu, 09 Jan 2014 15:59:18 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">https://vgrgic.wordpress.com/?p=602</guid>
  <description/>
  <content:encoded><![CDATA[In the conversations with users or customer we ask many questions. Some of them are about how the solution should work, some of them are about what functions should solution provide, and if we are really good with questions about "why" this solution is needed.Â In case of Scrum we also ask questions about priorities. Which story or epic do they want first to be delivered.

Forgotten questions are about the <strong>frequency of usage</strong>. For example:
<ul>
	<li><strong>How often</strong> are company details (reference data) changed?</li>
	<li><strong>How often</strong> do you need to print list of all companies?</li>
	<li><strong>How many</strong> people are going to use this?</li>
	<li>May I observe you during your work while using the existing system? I would like to see <strong>how often</strong> and in which order you use certain functions.</li>
</ul>
Besides prioritisation, an important reason for answering these questions is <strong>design</strong>. For example, if certain reference data is changed only once a year, then it might be cheaper to Â have reference data hardcoded instead of a database table. The first option is much simpler to implement and performs much better. Also a common example is implementation of messaging systems. A very expensive message queuing system, SOAP processing, or even an ESB is placed just to process one message a day on average, and with max of 5 messages occasionally. Email was maybe good enough.

Another reason might be <strong>migration path</strong>. Sometimes, it is acceptable to postpone implementation of certain features in order to choose a less risky path, and still go in production. Making a right choice of implementing or temporarily not implementing features when migrating from one system to another can be extremely complex. This can be reduced by knowing how often certain capabilities are needed.

Maybe the greatest reason of all is the validity of building something. Sometimes a system should be not built at all simply because the features are rarely used. It happens quite often that business owner wants to spend money on a solution based only on assumptions about how much time and accuracy is really lost in all the manual work that will be replaced by a costly system.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>602</wp:post_id>
  <wp:post_date>2014-01-09 23:59:18</wp:post_date>
  <wp:post_date_gmt>2014-01-09 15:59:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>forgotten-questions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>geo_latitude</wp:meta_key>
    <wp:meta_value><![CDATA[22.319931]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_longitude</wp:meta_key>
    <wp:meta_value><![CDATA[114.157052]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10202769971227226]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/4Tm8Hvip5YX]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/bZv77zTcoj]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5827976686217469952&type=U&a=jzJo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Imposed rules and boundaries are a sign of distrust</title>
  <link>http://leanarch.eu/2014/01/12/imposed-rules-and-boundaries-are-a-sign-of-distrust/</link>
  <pubDate>Sun, 12 Jan 2014 06:15:18 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=605</guid>
  <description/>
  <content:encoded><![CDATA[There is a lot truth in saying "rules are meant to be broken". Also, the trustworthiness begins with trusting someone despite the fact if they already have deserved your trust or not.

[caption id="attachment_644" align="aligncenter" width="584"]<a href="http://vgrgic.files.wordpress.com/2014/01/img_1337.jpg"><img class=" wp-image-644" alt="IMG_1337" src="http://vgrgic.files.wordpress.com/2014/01/img_1337.jpg" width="584" height="329" /></a> Hong Kong people[/caption]

Maybe the worst of all is when someone imposes the rules, which are btw meant to be broken, and says: "See, this is exactly what I mean. They have hard time following these rules. How can they be trusted? We should impose more rules!".

Having rules and other restrictions in software development is a very good thing. Essential difference of having restrictions in Agile environment, compared to a traditional, is the purpose. In Agile, these are meant as part of many feedback loops, and defined by people who want to be reminded of something they want themselves. They are never meant as a tool of enforcing compliance.

Rules are also not defined and agreed upon beforehand, but continuously, after finding out which ones are exactly needed. An experienced Agile team will eventually end-up Â having huge amount of these implicit, but also explicit rules. An obvious example is usage of code quality tools, which inform developer that a line of code is "invalid" is as soon as it is written. A good practice is to completely fail a build even if only one rule is broken.

Implicit rules are known to most team members, and experienced team members are comfortable in reminding each other that they should be followed for the benefit of everyone.

At the same time, there should always be room to discuss any rule. The moment is usually a retrospective meeting.

An interesting observation is that self-organising teams have more of these rules than traditional teams and love them. At the same time, traditional teams tend to complain even about the basic stuff like choice of code versioning system. Sometimes their complaints are justified. But just as often, they complain because they were simply not involved in decision process.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>605</wp:post_id>
  <wp:post_date>2014-01-12 14:15:18</wp:post_date>
  <wp:post_date_gmt>2014-01-12 06:15:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>imposed-rules-and-boundaries-are-a-sign-of-distrust</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/cAvbBoJ5GTw]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Is there a such thing as an Agile solution?</title>
  <link>http://leanarch.eu/2014/02/11/is-there-a-such-thing-as-an-agile-solution/</link>
  <pubDate>Tue, 11 Feb 2014 00:38:03 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=647</guid>
  <description/>
  <content:encoded><![CDATA[Today, many software product vendors have placed word Agile in front of the original name of their platform. If this is a proper use or misuse of word Agile, is up to you. The discussion about it might be useful, but I'm interested more in how good each of the platforms support Agile values. For anyone to assess this, a set of principles is needed. These principles can be used by Agile teams to better decide if a certain platform will help achieve your goals or stand in your way. So let's start:

<strong>1. It is the team that makes architectural decisions. A platform should be capable of fulfilling these decisions.</strong>

Many platforms have so called out-of-box architecture. It means that <em>significant</em> decisions are already made and defined by the platform. In this context, significant decision means any decision which strongly influences the structure and look of the solution. I am not talking about the commodities like messaging systems, application server platform, database, and so on. There is a certain, hard to define, line between what is a commodity and what not. The significant decision here is still wether you want to use certain commodity platform / component or not. But, you almost never want to mess with inner workings of such components. Directly, they have little to do with your business problem domain. This is often not the case for things like BPM tools and ERP platforms. Why not? They tend to intrude the space of the only people who are really capable of fulfilling the business need, which are Agile teams themselves. Signs of this problem is when platform has very specific ways in which certain business requirements are solved or no capability at all. Let's say: if you want to do payment on your website, then you must use a specific module for these credit cards.

<strong>2. If you first need to spend time on implementing some kind of baseline without direct value for business, then it ain't Agile.</strong>

Welcome to 21st century where you still have vendors who try to convince you that you need to be patient for half a year or a year. You spend 500.000 euros before seeing a failure, because of your own fault. "You shouldn't have changed your requirements!" or "You should have known your requirements before you started!" - says the vendor in <a href="http://www.cio.com/article/443864/SAP_Fires_Back_At_Waste_Management">a court</a>. Forget the promises, if your team is not capable of delivering value in production in one sprint, then the platform does not belong in this century.

<strong>3. Is a platform capable of delivering in productionÂ continuously?</strong>

I must admit, although I do know how difficult can be to properly deliver things in production, I almost get convinced by those sales presentations where things look like magic. A few hard questions later and this magical stuff proves to be nothing more than hot air. Until your team actually experiences and exactly knows how to deliver solution every couple of weeks (preferably after every check-in) with little effort and high quality, don't trust those nice looking PPT pictures.

<strong>4.Â CraftsmenÂ deliver value, not platforms</strong>

First statement on a typical vendor site begins something like this: "With our software you will reduce costs, speed time to profit, get real time visibility,..." and so on. I should make a software to produce these generic statements, so all these vendors can reduce their costs. :-) It sounds like a good business case. Anyway, no software implements itself. Even a rollout of MS Office can become a mess if you don't have craftsmen knowing their stuff. In other words, no software platform ever delivers business value. It is the people who actually know how to use this technology in specific context. As a customer, if you want to be Agile, you should spend more time on hiring great craftsmen, and less on which platform is the correct one. This should be the job of the hired craftsmen and not yours. In that way, your team might fail to produce value and be held accountable. Blaming a platform, never really works out in customer's favour. Specially if vendor behind it is one of the largest ones.

<strong>5. The team should be able to refactor most of the previously made decisions and implementations?</strong>

If anyone advise you to make many difficult and important design decisions before starting delivery, because otherwise you will get in trouble later on, then your platform is not Agile. If business changes their mind, the platform should not be the bottleneck. Again, it is the 21st century, and you don't want to say No to your customer and users because of the platform.

<strong>6. Can you automate testing?</strong>

One of the main reasons why Agile teams are capable of delivering every couple of weeks or even more frequent, and still maintain high quality, is because of test automation. TDD, BDD are few of these amazing practices that improved quality of our solutions tremendously. If you cannot automate the validation of everything before every delivery, then your platform is definitely not Agile.

<strong>7. Last but not least, if your craftsmen don'tÂ like the platform, don't use it.</strong>

It is very disturbing to hear people treat developers like some children who get bored with their toys. Although many developers lack skill to properly argument their dislike of certain technology, there is always a truth in what they are telling.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>647</wp:post_id>
  <wp:post_date>2014-02-11 08:38:03</wp:post_date>
  <wp:post_date_gmt>2014-02-11 00:38:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>is-there-a-such-thing-as-an-agile-solution</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="post_tag" nicename="platforms"><![CDATA[platforms]]></category>
  <category domain="post_tag" nicename="solutions"><![CDATA[solutions]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vendors"><![CDATA[vendors]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>73</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>203.145.79.49</wp:comment_author_IP>
    <wp:comment_date>2014-02-12 10:38:32</wp:comment_date>
    <wp:comment_date_gmt>2014-02-12 02:38:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey Antek,
Thanks for your comment. Yes, I agree. Actually, DevOps is already being used by some products. :-). A solution or platform can't be or be not Agile. Nevertheless, my post is about how good certain technologies support Agile values. Architectures can strongly influence or even prevent fast delivery in production.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1392172713</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392172712</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392172713.11398601531982421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-12 02:38:32</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>72</wp:comment_id>
    <wp:comment_author><![CDATA[Antek Baranski (@AntekBaranski)]]></wp:comment_author>
    <wp:comment_author_email>AntekBaranski@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/AntekBaranski</wp:comment_author_url>
    <wp:comment_author_IP>204.128.192.34</wp:comment_author_IP>
    <wp:comment_date>2014-02-12 06:24:59</wp:comment_date>
    <wp:comment_date_gmt>2014-02-11 22:24:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Let's start with the definition of 'agile' as its found in dictionaries, for example Webster's: http://www.merriam-webster.com/dictionary/agile. The definition clearly talks about actions and not an object.

Therefore 'agile' in software development for me is an action and cannot be a skill, solution nor the end product. This leads me to say that Agile software development is a methodology (actions) to develop software using certain principles. Agile software development is a means to an end and not the end in itself.

It is my opinion that there are no Agile solutions or products and that anyone putting Agile in-front of their offering is trying to hitch a ride on the bandwagon. And I am going to make the prediction that in a few years the word 'DevOps' or some variance of it will be put in-front of solutions as that bandwagon gets up to speed.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>90441810</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1392157502</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/3699176405/a7e783b03a877abac1c167c4c4a18d8b_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392157501</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392157501.903759002685546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-11 22:24:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Agile: Leadership without titles</title>
  <link>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</link>
  <pubDate>Wed, 19 Feb 2014 06:40:24 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=793</guid>
  <description/>
  <content:encoded><![CDATA[This was title of a lecture I gave at TheÂ Hong Kong Polytechnic University, or in short PolyU. I've been asked to tell my story, and how I got where I am right now, related to leadership. Am I some kind of a well known leader to talk about this subject? No, I am not. At least not in the way many perceive words leader and leadership.

<a href="http://vgrgic.files.wordpress.com/2014/02/dscf7012.jpg"><img class=" wp-image" id="i-862" alt="Image" src="http://vgrgic.files.wordpress.com/2014/02/dscf7012.jpg?w=650" width="520" height="390" /></a>

The message was that looking up to or becoming a leader has a flip side. I've been through one of the most extreme ones in Bosnia, where leaders pushed people into war against each other. A more subtle one is the way most businesses are being managed. In Hong Kong, but also in the rest of the world. In most companies, we have people who think or manage, and others who execute as being told. Distinction between the two is very clear. There is this whole notion that people on the floor know much less, and are less capable than people on the top. Of course, this has also become a self-fulfilling prophecy with certain level of acceptance. People on the floor are not encouraged to be creative, think for themselves, but follow the process defined by "smarter" people. It is defined by Frederique Winslow Taylor about 114 years ago in his book "The Principles of Scientific Management". Not much has changed ever since, or has it?

Well, yes. Many changes are taking place in this area and some of them, like Agile Software Development, are making a dent in this old-fashioned way of thinking about people. A nice "side-effect" is that people who have broken with these old rules, actually deliver much better quality faster. Or better to say, they are more effective.

Who is "they" in this case? They are Agile teams. A groups of people holding certain values, like collaboration, trust, and respect. But, what makes these people really effective in business world is the sense of leadership in each member of the team. Team members are continuously encouraged to improve, be creative, place people above processes, take initiative, bring ideas forward, convince others, and so on.

These are the leadership qualities. They are not based on titles, but mutual trust, respect and power of arguments. In these environments, the Taylor's world is upside down. The traditional leaders / managers, are taking more facilitating role and following the wish of the teams.Â I have become part of this, in the past 15 years, and will never leave it.

<a href="http://vgrgic.files.wordpress.com/2014/02/dscf7019.jpg"><img class=" wp-image" id="i-866" alt="Image" src="http://vgrgic.files.wordpress.com/2014/02/dscf7019.jpg?w=650" width="520" height="390" /></a>

After I told these 18 year old Hong Kong students about basics of Agile and Scrum, the most interesting thing happened. I've received about 100 questions, written on paper. These questions are much different from questions I've received in any workshop, training or a masterclass I gave before. At that moment I've discovered that if I'm able to answer these questions, I will learn a lot about why we like this thing called Agile and also about myself.

In the following posts, I will try to answer those questions, one by one. The list below will be updated continuously:
<ul>
	<li><a title="PolyU student question: What are the steps for getting collaborative workÂ environment?" href="http://leanarch.eu/2014/02/20/polyu-student-question-what-are-the-steps-for-getting-collaborative-work-environment/" target="_blank">What are the steps for getting collaborative work environment?</a></li>
	<li><a href="http://leanarch.eu/2014/02/21/polyu-student-question-how-to-convince-others/" target="_blank">How to convince others?</a></li>
	<li><a href="http://leanarch.eu/2014/02/22/polyu-student-question-leaders-most-important-attitude/">Leader's most important attitude</a></li>
	<li><a title="PolyU student question: How do you stand for your own idea when othersÂ disagree?" href="http://leanarch.eu/2014/02/24/polyu-student-question-how-do-you-stand-for-your-own-idea-when-others-disagree/">How do you stand for your own idea when others disagree?</a></li>
	<li><a title="Democratic or autocratic leadership? â PolyU studentÂ question" href="http://leanarch.eu/2014/02/25/democratic-or-autocratic-leadership-polyu-student-question/">Democratic or autocratic leadership?</a></li>
	<li><a title="Teammates not communicating â PolyU studentÂ question" href="http://leanarch.eu/2014/02/26/teammates-not-communicating-polyu-student-question/">Teammates not communicating</a></li>
	<li><a title="Understanding each other â PolyU studentÂ question" href="http://leanarch.eu/2014/02/27/understanding-each-other-polyu-student-question/">Understanding each other</a></li>
	<li><a title="Does decision making by whole team cost more time? â PolyUÂ question" href="http://leanarch.eu/2014/02/28/does-decision-making-by-whole-team-cost-more-time-polyu-question/">Does decision making by whole team cost more time?</a></li>
	<li><a href="http://leanarch.eu/2014/03/03/do-self-organising-teams-work-well-in-all-cultures/">Do self-organising teams work well in all cultures?</a></li>
	<li><a title="What if some prefer privacy above cooperation? â PolyU studentÂ question" href="http://leanarch.eu/2014/03/04/what-if-some-prefer-privacy-above-cooperation-polyu-student-question/">What if some prefer privacy above cooperation?</a></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>793</wp:post_id>
  <wp:post_date>2014-02-19 14:40:24</wp:post_date>
  <wp:post_date_gmt>2014-02-19 06:40:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile-leadership-without-titles</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="agile-software-development"><![CDATA[Agile Software Development]]></category>
  <category domain="post_tag" nicename="frederique-winslow-taylor"><![CDATA[Frederique Winslow Taylor]]></category>
  <category domain="post_tag" nicename="hong-kong"><![CDATA[hong kong]]></category>
  <category domain="post_tag" nicename="leadership"><![CDATA[Leadership]]></category>
  <category domain="post_tag" nicename="leadership-qualities"><![CDATA[leadership qualities]]></category>
  <category domain="post_tag" nicename="polyu-questions"><![CDATA[PolyU questions]]></category>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="post_tag" nicename="the-hong-kong-polytechnic-university"><![CDATA[TheÂ Hong Kong Polytechnic University]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/TqwnIp9RoG]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14242304;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>102</wp:comment_id>
    <wp:comment_author><![CDATA[Does decision making by whole team cost more time? &#8211; PolyU question | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/28/does-decision-making-by-whole-team-cost-more-time-polyu-question/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.254.51</wp:comment_author_IP>
    <wp:comment_date>2014-02-28 18:14:36</wp:comment_date>
    <wp:comment_date_gmt>2014-02-28 10:14:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393582476</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393582476.8963739871978759765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-28 10:14:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>98</wp:comment_id>
    <wp:comment_author><![CDATA[Teammates not communicating &#8211; PolyU student question | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/26/teammates-not-communicating-polyu-student-question/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.55</wp:comment_author_IP>
    <wp:comment_date>2014-02-26 18:40:25</wp:comment_date>
    <wp:comment_date_gmt>2014-02-26 10:40:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393411225</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393411225.1175239086151123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-26 10:40:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>90</wp:comment_id>
    <wp:comment_author><![CDATA[PolyU student question: How do you stand for your own idea when others disagree? | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/24/polyu-student-question-how-do-you-stand-for-your-own-idea-when-others-disagree/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.80.159</wp:comment_author_IP>
    <wp:comment_date>2014-02-24 19:34:27</wp:comment_date>
    <wp:comment_date_gmt>2014-02-24 11:34:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393241667</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393241667.289164066314697265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-24 11:34:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>110</wp:comment_id>
    <wp:comment_author><![CDATA[What if some prefer privacy above cooperation? &#8211; PolyU student question | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/03/04/what-if-some-prefer-privacy-above-cooperation-polyu-student-question/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.135</wp:comment_author_IP>
    <wp:comment_date>2014-03-04 18:10:29</wp:comment_date>
    <wp:comment_date_gmt>2014-03-04 10:10:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393927829.4356229305267333984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393927829</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-04 10:10:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>100</wp:comment_id>
    <wp:comment_author><![CDATA[Understanding each other &#8211; PolyU student question | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/27/understanding-each-other-polyu-student-question/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.135</wp:comment_author_IP>
    <wp:comment_date>2014-02-27 15:33:42</wp:comment_date>
    <wp:comment_date_gmt>2014-02-27 07:33:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393486422</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393486422.8909199237823486328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-27 07:33:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>85</wp:comment_id>
    <wp:comment_author><![CDATA[SutoCom]]></wp:comment_author>
    <wp:comment_author_email>dennes777@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.sutocom.net</wp:comment_author_url>
    <wp:comment_author_IP>50.176.179.47</wp:comment_author_IP>
    <wp:comment_date>2014-02-20 19:41:40</wp:comment_date>
    <wp:comment_date_gmt>2014-02-20 11:41:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://sutocom.net/2014/02/20/agile-leadership-without-titles/" rel="nofollow">Sutoprise Avenue, A SutoCom Source</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9083961</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392896500</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392896501.1595089435577392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"sutocom";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1392896501</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-20 11:41:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>88</wp:comment_id>
    <wp:comment_author><![CDATA[PolyU student question: Leader&#8217;s most important attitude | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/22/polyu-student-question-leaders-most-important-attitude/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.19</wp:comment_author_IP>
    <wp:comment_date>2014-02-22 18:16:50</wp:comment_date>
    <wp:comment_date_gmt>2014-02-22 10:16:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393064210</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393064211.022017955780029296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-22 10:16:50</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>95</wp:comment_id>
    <wp:comment_author><![CDATA[Democratic or autocratic leadership? &#8211; PolyU student question | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/25/democratic-or-autocratic-leadership-polyu-student-question/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.8.61</wp:comment_author_IP>
    <wp:comment_date>2014-02-25 22:29:54</wp:comment_date>
    <wp:comment_date_gmt>2014-02-25 14:29:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393338595</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393338596.1725559234619140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-25 14:29:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>83</wp:comment_id>
    <wp:comment_author><![CDATA[PolyU student question: What are the steps for getting collaborative work environment? | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/20/polyu-student-question-what-are-the-steps-for-getting-collaborative-work-environment/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.8.108</wp:comment_author_IP>
    <wp:comment_date>2014-02-20 17:35:13</wp:comment_date>
    <wp:comment_date_gmt>2014-02-20 09:35:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] &larr; Previous [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392888914</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392888914.9559268951416015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-20 09:35:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>86</wp:comment_id>
    <wp:comment_author><![CDATA[PolyU student question: How to convince others? | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/21/polyu-student-question-how-to-convince-others/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.248.187</wp:comment_author_IP>
    <wp:comment_date>2014-02-21 19:07:10</wp:comment_date>
    <wp:comment_date_gmt>2014-02-21 11:07:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392980830</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392980830.460341930389404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-21 11:07:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>109</wp:comment_id>
    <wp:comment_author><![CDATA[Do self-organising teams work well in all cultures? &#8211; PolyU student question | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/03/03/do-self-organising-teams-work-well-in-all-cultures/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.10.35</wp:comment_author_IP>
    <wp:comment_date>2014-03-03 15:38:02</wp:comment_date>
    <wp:comment_date_gmt>2014-03-03 07:38:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] One of the questionsÂ asked by PolyU studentsÂ is: [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393832283</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393832284.261046886444091796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-03 07:38:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>PolyU student question: What are the steps for getting collaborative work environment?</title>
  <link>http://leanarch.eu/2014/02/20/polyu-student-question-what-are-the-steps-for-getting-collaborative-work-environment/</link>
  <pubDate>Thu, 20 Feb 2014 09:35:02 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=870</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a> is:
<blockquote>Since nowadays people are quite used to the human resource structure under which employees work according to manager's orders, what are the steps to take, in order to change this common mindset and achieve a collaborative work environment?</blockquote>
It can start very small. It begins with your direct manager and how you approach him or her. The managers in any culture actually want their workers to be more proactive, make suggestions for improvements and so on. They also want to be challenged, but they are afraid to be disrespected. Or lose face in Asian countries. Therefore, many managers are playing a role of a manager, somehow different from you as a non-manager. They sometimes seem to forget we are at the end all just people.

One of the ways to start changing this, is by emphasising the stated<strong> end goal</strong>. For example: Â "Manager, I understand you want to sell more clothes, and I want that too. It would be great. I understand your order to...., but I don't believe it will bring us towards selling more clothes at the end. I have another idea...". If you don't know the end goal, ask for it, demand it.

Another suggestion: "Manager, I have an idea. I want to do a workshop with our team. In this workshop, everyone can make suggestions how to improve sales. We can even discuss which ones are best.". There are several simple ways to get everyone to give their opinion, even if they are shy or afraid to speak out while manager is present too. Result: a bit more collaboration in your team. You don't do this because it is your task given by someone, but because it is a right thing to do. By the way, knowing what is right and acting upon it, despite others' opinions, is characteristic of leaders.

The golden rule: make sure manager always knows that you have the same goal as she has, and keep repeating it. This encourages her to make a distinction between disrespect for authority and someone who is simply proactive, engaged, and wants to improve things.

At the end, these are very small steps, which might or might not produce meaningful improvement in your first job. It can be difficult because of limited influence you might have in your job. In most companies which have embraced Agile or some very similar values, these changes happen a bit more dramatic. Believe it or not, they actually usually start at management level. Managers crave even more for big changes in how their workers behave. They desperately want for them to be more engaged, effective, and they would gladly give some of their power or decision making to achieve that. It is the managers who request for an Agile training or coaching, because they've seen a presentation and see a possible solution to stay on top of this competitive world. These are valid reasons to introduce Agile, but occasionally I come across managers who simply want to have happy people. This should be the primary reason, all others are secondary.

In these trainings and coaching, a great deal of effort is spent to "reset" some fundamental things they take for granted, and let them realise by experiencing in their own company how much better it could become. The change happens as combined effort from one or number of managers in the company who firmly believe in this new way of thinking and an Agile Coach from outside.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>870</wp:post_id>
  <wp:post_date>2014-02-20 17:35:02</wp:post_date>
  <wp:post_date_gmt>2014-02-20 09:35:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>polyu-student-question-what-are-the-steps-for-getting-collaborative-work-environment</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/JfTkso9zHeD]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/sX7s8eX7Ql]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5842199529973100544&type=U&a=Viz0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>93</wp:comment_id>
    <wp:comment_author><![CDATA[Yufan Zou]]></wp:comment_author>
    <wp:comment_author_email>408504970@qq.com</wp:comment_author_email>
    <wp:comment_author_url>https://www.facebook.com/profile.php?id=100004310133437</wp:comment_author_url>
    <wp:comment_author_IP>158.132.33.136</wp:comment_author_IP>
    <wp:comment_date>2014-02-25 20:27:24</wp:comment_date>
    <wp:comment_date_gmt>2014-02-25 12:27:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for replying my question and i believe your suggestion will help a lot when approaching the manager with my own idea in the future.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393331244</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>100004310133437</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1393331244</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-25 12:27:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>94</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>218.250.172.237</wp:comment_author_IP>
    <wp:comment_date>2014-02-25 20:34:48</wp:comment_date>
    <wp:comment_date_gmt>2014-02-25 12:34:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hello Yufan, you are welcome. If you have any other question, don't hesitate to ask.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393331688</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393331688.7771759033203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1393331688</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-25 12:34:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>84</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.17</wp:comment_author_IP>
    <wp:comment_date>2014-02-20 17:37:25</wp:comment_date>
    <wp:comment_date_gmt>2014-02-20 09:37:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] &larr; Previous Next &rarr; [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1392889046</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1392889047.1913349628448486328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-20 09:37:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>PolyU student question: How to convince others?</title>
  <link>http://leanarch.eu/2014/02/21/polyu-student-question-how-to-convince-others/</link>
  <pubDate>Fri, 21 Feb 2014 11:05:56 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=880</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:
<blockquote>It is hard to get everyone agree on your idea, so I would like to ask how should we express and make people agree without miscommunication and efficient technique as a leader?</blockquote>
There are a number of things here. There is a huge difference between wanting to achieve something and having an idea. Before having an idea, you first need to agree together on what all involved actually want to achieve with your idea. Why? It is much easier to argument an idea by stating how it contributes to the common goal.

Second: The whole point of ideas is to bring in options, creative collaborative thinking, where people listen to each other's ideas, and create new ones based on your idea. All ideas in the world are nothing more than combination of multiple existing ideas and things that are already known.

So, there should be no convincing here, just stating the idea. When you come up with a great idea, it is crucial that you don't hold to it like it is your child. Unless your idea also becomes owned by others in team, it won't be accepted. Even if you really have a one million dollar idea, others tend to disagree because you might defend it too much.

To be very practical, I'm usually stating my ideas like this: "I have an idea which will help us achieve something we all want. My idea is....... The advantages are ....., and disadvantages are.... So, I'm asking you what you think about this idea. Is it good, bad, why or maybe you have even better ideas?" In this way, you give a large opening for others to become really involved in your idea. The idea is then <strong>owned</strong> by the group, and not only you.

Third: A real trait of a leader is to encourage others to come up with ideas. Dominant people, who are often wrongly seen as leaders, should be even more careful in the process of continuously stating their own ideas. Other, less dominant people in the group tend to become more and more passive in their behaviour if the so called "leader" is constantly bringing and defending his ideas.

Sometimes, the best or only possible way to convince others is by implementing your idea first and demonstrating how good it is. This action should always be finished with a question to others: "So, would you like to join me in finishing this idea into something useful?"]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>880</wp:post_id>
  <wp:post_date>2014-02-21 19:05:56</wp:post_date>
  <wp:post_date_gmt>2014-02-21 11:05:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>polyu-student-question-how-to-convince-others</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/39MoGUUJr57]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/SAtdMJUAon]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5842585066135367680&type=U&a=V1Yu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>87</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.81.176</wp:comment_author_IP>
    <wp:comment_date>2014-02-22 15:17:02</wp:comment_date>
    <wp:comment_date_gmt>2014-02-22 07:17:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] How to convince others? [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393053422</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393053422.77437305450439453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-22 07:17:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>PolyU student question: Leader's most important attitude</title>
  <link>http://leanarch.eu/2014/02/22/polyu-student-question-leaders-most-important-attitude/</link>
  <pubDate>Sat, 22 Feb 2014 09:57:29 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=884</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:
<blockquote>What is the most important attitude to be a successful leader?</blockquote>
One needs many traits in order to move people in certain direction. Nevertheless, there is one I find particularly scarce and therefore very important. I call it: <strong>cloudless thinking</strong>. Everyone is capable of becoming a leader, the problem is conditioned thinking or lack of awareness we all have. This conditioned thinking is created by our parents, environment we live in, education, all kinds of rules and the ways people work and live their lives. These things often create obstacles in seeing what is possible and what is really happening. A striking example of this is when a suggestion is made to have a team which could manage itself. Many, if not most, would react with disbelief, and start stating reasons why something like that would not work. Even after presenting succes stories and evidence how great it is, some still say: "It can never work in my company or country.". Leadership is about reshaping the rules of your environment. Seeing the possibilities, while others are limited in their thinking because of sometimes lifelong conditioning.

This might be understood as: "So I need to disobey, behave differently from what my parents and everyone else is telling me, do other things than what I learned". No, this would be just another conditioned thinking.Â Cloudless thinking means first being aware of your own personality, needs, and how does your behaviour influences your interaction with others. For example, if someone offends you in front of others, what will you do? Defend yourself? Revenge? Think less of yourself because of what he said? Or simply see this as it is: a remark from someone who only <strong>tried</strong> to offend you. It sounds like you need grey hair first before having such a wisdom. But, many leaders who shape today's world are still quite young or started very young. It is young people who think more clearly and see the possibilities.

Cloudless thinking could also mean being aware of personality of others and their needs, or simply: empathy. A person is seen as a leader because others feel understood by him or her. Once you are capable of understanding others, it is much easier to change things. Nothing really changes unless people already desire it, usually unconsciously.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>884</wp:post_id>
  <wp:post_date>2014-02-22 17:57:29</wp:post_date>
  <wp:post_date_gmt>2014-02-22 09:57:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>polyu-student-question-leaders-most-important-attitude</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203063743571351]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/CvKtko9wCW3]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/Xqdu7VbRcG]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5842934798242304000&type=U&a=yhUU]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>91</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.80.160</wp:comment_author_IP>
    <wp:comment_date>2014-02-24 19:36:54</wp:comment_date>
    <wp:comment_date_gmt>2014-02-24 11:36:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Leader&#8217;s most important attitude [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393241814</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393241814.7883880138397216796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-24 11:36:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>PolyU student question: How do you stand for your own idea when others disagree?</title>
  <link>http://leanarch.eu/2014/02/24/polyu-student-question-how-do-you-stand-for-your-own-idea-when-others-disagree/</link>
  <pubDate>Mon, 24 Feb 2014 11:34:24 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=886</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:
<blockquote>How do you stand for your own idea when others disagree?</blockquote>
Let me tell you a short story first: I've had this obvious idea that would simplify a software product we were building. The idea was to replace the so called application server platform with simpler, and less expensive one. These were more of less my arguments, and I didn't think much about disadvantages. So, I prepared a session with another guy who agreed with me. The only thing left was to convince other 25 team members of my idea. I was very eager and driven to "sell" my idea to others and they would buy it.

Well, they didn't. I was confused by not knowing why not. At the same time, I was throwing more and more arguments in favour of my idea. The interactive presentation was transformed into a not so pleasant discussion where everyone was a bit irritated.

In the coming days, I thought really hard what to do, discussed my dilemma with few guys separately. Eventually, I came to conclusion I should back out a bit and just listen what others are actually telling me and see what happens. I found out that nobody was really against my idea, but they didn't like that I was selling my idea. It felt like to them there was no choice and they were simply told by me what is going to happen. After I've slowed down and started listening, there was suddenly space for input. This input was very useful, because my idea to switch had some consequences and cost aspects to it.

So, an answer to you question would be: I try to distantiate myself from my idea in order to create space for proper discussion. Besides, it is just an idea. If someone else has a better idea, than that should be welcomed.

By the way, the main reason why others disagree is that something went wrong earlier in the process. Either I did not listen enough to others, I didn't expressed idea in objective manner, or didn't give or have valid arguments.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>886</wp:post_id>
  <wp:post_date>2014-02-24 19:34:24</wp:post_date>
  <wp:post_date_gmt>2014-02-24 11:34:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>polyu-student-question-how-do-you-stand-for-your-own-idea-when-others-disagree</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/EGC9geYitc4]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203078432898575]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/zJUpsTHltu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5843679106469740544&type=U&a=QAo1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>92</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.80.160</wp:comment_author_IP>
    <wp:comment_date>2014-02-24 19:36:56</wp:comment_date>
    <wp:comment_date_gmt>2014-02-24 11:36:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] How do you stand for your own idea when others disagree? [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393241816</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393241816.8402450084686279296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-24 11:36:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Democratic or autocratic leadership? - PolyU student question</title>
  <link>http://leanarch.eu/2014/02/25/democratic-or-autocratic-leadership-polyu-student-question/</link>
  <pubDate>Tue, 25 Feb 2014 14:29:50 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=909</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:
<p style="text-align:left;"><a href="http://vgrgic.files.wordpress.com/2014/02/question1.png"><img class="size-full wp-image-910" alt="question1" src="http://vgrgic.files.wordpress.com/2014/02/question1.png" width="611" height="171" /></a></p>
<p style="text-align:left;">It took me several years to figure out my own answer to this question. Don't be discouraged if you too spend many years before having your own answer. The reason why this question is interesting and difficult at the same time, is because our feeling and environment contradict each other. Being a democratic leader seems ineffective and difficult compared to an autocratic one. Also, look around! There are not many really democratic leaders in the world. It is better to be an autocratic leader and admit it, then to say I'm a democratic leader and not be one.</p>
<p style="text-align:left;">Nevertheless, I firmly believe in democratic leadership. I believe in future where companies are managed in democratic manner. Companies like Odd-e, Treehouse, WL Gore &amp; Associates, Valve, Buffer, Spotify, Facebook, Google are just a few examples of frontrunners in this area. In many of these companies, workers have a lot of freedom, management is chosen by workers or they have no management at all, workers are hired or fired by other workers, people define their own salaries, and many other amazing practices. In other words, democratic leadership is already a reality. The examples from my personal experience are not fully democratic companies, but partially where number of teams or a single department has democratic leadership.</p>
<p style="text-align:left;">Advantages of democratic leadership are huge. The most important one is that workers are much more motivated. This motivation comes from amount of influence they have in the way company is managed. The most obvious effect from my observation is that people tend to keep working for the company even if it pays less than somewhere else. People are generally more happy even if work is really hard.</p>
<p style="text-align:left;">On other hand, it is difficult to be an effective democratic leader. If leader lacks experience, getting things done can be very cumbersome and take a lot of time. Very often, if things are urgent and decisions need to be taken, being an autocratic leader seems more effective. But, eventually, the price for being an autocratic leader must be paid. If other workers are not involved, they will protest or - even worse - behave in very passive way. Passive behaviour where workers simply fulfil manager's wishes ends up in rumours, leaving the company simply because someone else pays better, and general lack of involvement.</p>
<p style="text-align:left;">Seeing advantages of being a democratic leader can be difficult. Type of leadership has a large influence on organisation as a system. Type of leadership is just one of many possible influences that shape an organisation. We call this awareness of many influences and effects: <a href="http://www.noop.nl/2011/03/top-15-systems-thinking-books.html" target="_blank">Systems Thinking</a>. I would like to encourage you to read a book on this subject. It will be very useful once you enter corporate world. It helped me in discovering effects of democratic leadership.</p>
<p style="text-align:left;">You might say, on short term when observing direct effectiveness, autocratic leadership seems to have more advantages. But on longer term and seen from different perspectives, advantages of democratic leadership are much greater. The biggest one: it contributes to happiness of people.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>909</wp:post_id>
  <wp:post_date>2014-02-25 22:29:50</wp:post_date>
  <wp:post_date_gmt>2014-02-25 14:29:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>democratic-or-autocratic-leadership-polyu-student-question</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203085829403483]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/Zq2UKHkgvqT]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/AgrBRFLkZ8]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5844085651695230976&type=U&a=i_if]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>96</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.38.26</wp:comment_author_IP>
    <wp:comment_date>2014-02-25 22:31:55</wp:comment_date>
    <wp:comment_date_gmt>2014-02-25 14:31:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Democratic or autocratic leadership? [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393338715</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393338715.3090369701385498046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-25 14:31:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Teammates not communicating - PolyU student question</title>
  <link>http://leanarch.eu/2014/02/26/teammates-not-communicating-polyu-student-question/</link>
  <pubDate>Wed, 26 Feb 2014 10:40:21 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=915</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:

<a href="http://vgrgic.files.wordpress.com/2014/02/question2.png"><img class="size-full wp-image-916 alignnone" alt="question2" src="http://vgrgic.files.wordpress.com/2014/02/question2.png" width="589" height="192" /></a>

In Scrum we have these gatherings called retrospective meetings. During these meetings team looks back at the sprint (past 2-4 weeks) and talks about possible improvements. Less experienced teams tend to look at problems at superficial level. For example: "We forgot to update product documentation". Typical conclusion and action is: "We should not forget it next time, because it is important!".

More experienced teams will take more time to examine the problem thoroughly and not be satisfied with statement: next time we try to do better. After so many of these meetings, it can be observed that many of the problems have a real cause in lack of communication. It can even be said that communication problem is bigger than all technical problems combined.

Still, this huge problem that seemingly everyone has, is caused by other things. These things need to be discovered, discussed openly in respectful manner before permanent solution is found. Restrospective meetings I've just mentioned can help in creating awareness in your team. Very often, teammates are not even aware of insufficient communication and bad effects.

I never start discussion with statement "we don't communicate enough". The problem is too generic in order to expect any practical result. Instead, address unwanted effects and trace them back to communication. This traceability is done by asking multiple <a href="http://blogs.hbr.org/2012/02/the-5-whys/" target="_blank">"why" questions</a>. E.g. "Why didn't we update documentation?", "Although we knew it needs to be done, why nobody said it?", and so on.

Why people don't communicate more? There are many reasons. It can simply be a personality of someone who only speaks when she is surrounded with people she knows for many years. Or it could be the situation in the company, where people distrust each other so much they are not willing to help because of competitiveness. "If he knows what I know, that he might get promoted instead of me. Why should I tell him anything?"

The biggest obstacle here is that people are often not comfortable with talking about these subjects. It can become a bit personal. I try not to be too careful about asking difficult questions as long as I'm respectful towards every team member and they know my intentions are to help.

Another measure is introduction of certain rules where people are encouraged or even obliged to share information with others. Agile and Scrum have many of these built in the framework by means of <a href="http://c2.com/cgi/wiki?ScrumMeetings" target="_blank">different meetings</a> where everyone is involved. It is impossible to do Scrum successfully if teammates don't communicate a lot. The problem of bad communication becomes painfully visible and discussion cannot be avoided.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>915</wp:post_id>
  <wp:post_date>2014-02-26 18:40:21</wp:post_date>
  <wp:post_date_gmt>2014-02-26 10:40:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>teammates-not-communicating-polyu-student-question</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203091605507882]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/3fGAeE1EeAP]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/tZc6hQQB29]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5844390285584371713&type=U&a=Vw96]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>99</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.81.188</wp:comment_author_IP>
    <wp:comment_date>2014-02-26 18:41:38</wp:comment_date>
    <wp:comment_date_gmt>2014-02-26 10:41:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Teammates not communicating [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393411298</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393411298.2258250713348388671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-26 10:41:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Understanding each other - PolyU student question</title>
  <link>http://leanarch.eu/2014/02/27/understanding-each-other-polyu-student-question/</link>
  <pubDate>Thu, 27 Feb 2014 07:33:38 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=922</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:

<a href="http://vgrgic.files.wordpress.com/2014/02/question3.png"><img class="size-full wp-image-923 alignnone" alt="question3" src="http://vgrgic.files.wordpress.com/2014/02/question3.png" width="588" height="328" /></a>

You are making a correct connection between people understanding each other and having a real team. This is an absolute prerequisite before expecting any substantial and <strong>sustainable improvement</strong> in a team. I interpret your question as what kind of practices do we have in order to achieve this.

The most of Agile practices are concerned with <strong>creating environment</strong> where team members are naturally encouraged to collaborate, get to know and help each other. The most common one is, again, retrospective meetings. Some say, if you are only allowed to choose one Agile practice, let it be <strong>retrospective meeting</strong>. Why? It is the most important driving force of continuous improvement. To have a such meeting every 2-4 weeks, means to create a moment and place where all team members stop with usual work, take a step back and observe what is happening.

This meeting can be facilitated in many different ways. There are many <a href="http://retrospectivewiki.org/index.php?title=Retrospective_Plans" target="_blank">websites</a> and even <a href="http://pragprog.com/book/dlret/agile-retrospectives" target="_blank">books</a> describing different techniques or plans. A number of these stimulate teammates to get to know each other better. One that I particularly like is <a href="http://retrospectivewiki.org/index.php?title=Appreciative_Retrospective" target="_blank">Appreciative Retrospective</a>.

There are a number of <strong>principles</strong> behind Scrum which create environment where people are indirectly encouraged to get to know each other. One of them is that whole team is held accountable for possible failures or successes. There is much less tendency to single out one of the members even if it is obvious she contributed most to a failure or an achievement. Because of this, others in team will naturally appreciate each other or help each other.

In general, the best and fastest way for a team to understand each other better, is to simply give them a <strong>challenging goal</strong> and let them succeed or fail as fast as possible. After a possible failure, they will naturally retrospect and get to know each other in the process. Btw, a team is more likely to learn and get to know each other after a failure than after a successful delivery.

Other ways to get to know each other is to have <strong>fun</strong> together. Have a beer together, diner, organise hackathon nights, watch a movie together, a vacation, play games, BBQ, or karaoke here in Hong Kong :-).

This is a short movie of an Agile team that went skiing and snowboarding together in French Alps.

http://www.youtube.com/watch?v=RW3NlkXh79o]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>922</wp:post_id>
  <wp:post_date>2014-02-27 15:33:38</wp:post_date>
  <wp:post_date_gmt>2014-02-27 07:33:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>understanding-each-other-polyu-student-question</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203097279009716]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/HKr0kC0acG]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5844705674595934208&type=U&a=6ViT]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>101</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.101</wp:comment_author_IP>
    <wp:comment_date>2014-02-27 15:35:01</wp:comment_date>
    <wp:comment_date_gmt>2014-02-27 07:35:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Understanding each other [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393486502</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393486502.744697093963623046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-27 07:35:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Does decision making by whole team cost more time? - PolyU question</title>
  <link>http://leanarch.eu/2014/02/28/does-decision-making-by-whole-team-cost-more-time-polyu-question/</link>
  <pubDate>Fri, 28 Feb 2014 10:14:33 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=929</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:

<a href="http://vgrgic.files.wordpress.com/2014/02/question4.png"><img class=" wp-image-930 alignnone" alt="question4" src="http://vgrgic.files.wordpress.com/2014/02/question4.png" width="517" height="246" /></a>

Let me start with what it means to make a decision. By the way, in english it is more correct to say: "We <strong>make</strong> a decision!" instead of "We <strong>take</strong> a decision" like many often say. I'm not saying this to be overly precise about proper use of english, but to emphasise the <strong>process</strong> aspect of decisions. Having a decision should always be less relevant than the path before and after decision is made.

Later in your first job, you will find out that some managers make decisions much faster than any team could have. At the same time, these decisions are not really good. You don't need to be a manager to make 100 decisions in one day. The challenge is to make well-educated decisions. For this, both manager or team need information and experience. A group of people has simply more knowledge than just one manager. Also, a one person making a decision tends to have tunneled vision. There is nobody who will say: "So, what if you are wrong?" or "What are the other options even if this one seems so right?".

So, the issue here is not really who makes better decisions. It is rather that group of people have different opinions, which complicates the process. They obviously tend to disagree with each other. That costs time. Is this bad? It depends. Let us not forget again, it is decision making process which is important, and less the end-result. So, in case of a group of people, the challenge is to have them exchange arguments in <strong>creative mode</strong> where everyone first listens to others before judging or dismissing proposals. Actually, the judgement part is postponed as much as possible and separated from creative part where everyone learns from others. If the process is creative, the end-result will be much better than having only one person make a decision. This creative mode is also characterised with presentation of factual arguments instead of only opinions. Giving opinions and making assumptions is not bad, but it should always be subordinate to proven arguments. Also, group of people should be aware of their knowledge limitations, and be humble to admit that even they as a group don't have enough knowledge. This is often invisible cause of disagreement.

Another challenge are all kinds of egocentric behaviours. Some team members want to prove to others they are always right, and others are very silent because they are afraid to offend someone and especially if other is higher in ranking. Both are just as bad.

Nevertheless, all these challenges are very much worth spending time on. They are definitely solvable. If we consider decision making as a process, than a team makes better decisions and faster than a single manager.

We should also not forget the process after a decision is made. One of the greatest challenges managers today have is convincing others that decision they made is a good one. I've seen many managers spending months in this process and it is not pleasant. If this manager at least has involved his workers in decision making process from the start, than whole process would likely take much less time. This problem is very visible in organisations with highly educated workers. People naturally tend to disagree with something simply because they were not involved.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>929</wp:post_id>
  <wp:post_date>2014-02-28 18:14:33</wp:post_date>
  <wp:post_date_gmt>2014-02-28 10:14:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>does-decision-making-by-whole-team-cost-more-time-polyu-question</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203104215223117]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/5MqtPKCiSSJ]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/Ei4qIGuwmT]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5845108575407460352&type=U&a=zKPO]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>103</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.14</wp:comment_author_IP>
    <wp:comment_date>2014-02-28 18:16:11</wp:comment_date>
    <wp:comment_date_gmt>2014-02-28 10:16:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Does decision making by whole team cost more time? [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393582571</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393582571.873879909515380859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-02-28 10:16:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Do self-organising teams work well in all cultures? - PolyU student question</title>
  <link>http://leanarch.eu/2014/03/03/do-self-organising-teams-work-well-in-all-cultures/</link>
  <pubDate>Mon, 03 Mar 2014 07:27:20 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=934</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:

<a href="http://vgrgic.files.wordpress.com/2014/03/question5.png"><img class="size-full wp-image-935 alignnone" alt="question5" src="http://vgrgic.files.wordpress.com/2014/03/question5.png" width="517" height="280" /></a>

My personal experience with different cultures in combination with Agile is limited. I've worked in Agile context with Dutch, Serbs, British, Americans, Australians and Hongkongers. Through collaboration with Agile people from many more cultures, I have learned about their challenges.

It seems that culture plays much less of a role than we often think. Certainly, in cultures with rigid hierarchy, there are number of specific challenges to be aware of and which might make things a bit more difficult.

For example, in order to get feedback from teammates in Scandinavian countries or Netherlands, it is enough to ask a question like: "Please tell me, one by one, how last 3 weeks felt to you.". In those countries, it is important to add: "and please, keep it within 3 minutes per person". Otherwise, there is a chance meeting will take too much time causing all kinds of discussions. In Hong Kong, on other hand, effect of this question is usually that team members don't really know what is expected, or don't feel encouraged to give honest opinion in front of everyone. The meeting will likely result in an awkward silence.

We often play games in order to experience what Agile is. In some of these games, participants - girls and men - hold their hands, sometimes in awkward positions. You can image that this is unacceptable in certain countries.

Still, these challenges are easily solved. The people who facilitate this process, only need to be aware of these differences and figure out practical solutions to each of them. In above case with Hong Kong, it works much better if everyone is requested to place their feeling on paper or some scale, like <a href="http://scrum.jeffsutherland.com/2010/11/happiness-metric-wave-of-future.html" target="_blank">Happiness Metric</a>. This is a good stepping stone for starting an open discussion.

Embracing self-organisation is a lot about letting go of many things we take for granted. One of these is the power and privileges of managers. This one seems to be a bigger challenge in Asian countries than Scandinavian countries. But, other things are quite the opposite. E.g. Agile is all about never-ending learning process for everyone involved. Hongkongers are really eager to learn new things and change is part of their existence, while Dutch are often eager in having and stating opinions before properly acquiring knowledge about the subject. Also, managing constantly changing company is often considered as chaos and something bad.

So, rigid hierarchical structures are still less of a problem compared to a whole set more difficult challenges, which have very little to do with specific cultures. These are the biggest challenges I come across:
<ul>
	<li>Official and unofficial titles, power and careers people have. When introducing Agile, these are largely broken down, which is often unacceptable for people who spent many years to achieve certain levels. It might surprise you that people without managers' title have more difficulty accepting this.</li>
	<li><strong>Exposing real capabilities and personality</strong> of every team member. Some can't handle this and leave their team. In this case, managers who don't directly contribute inÂ <a href="http://en.wikipedia.org/wiki/Value_stream_mapping" target="_blank">value stream</a> are most vulnerable.</li>
	<li>Having a <strong>clear goal</strong>, feeling proud in achieving this goal as a team. Too often, the goal is unclear, too far in future or not worth spending 40 hours or more every week for a long time.</li>
	<li>Treating people as resources. In any country, managers are still calling their workers <strong>resources</strong>. This is a really bad and old-fashioned practice and should be stopped as soon as possible.</li>
	<li>Achieving <strong>brutal honesty</strong> can be very difficult. If not achieved, people will keep speaking behind the backs or withhold crucial information. This can become a big problem for a team or an organisation. Honesty and transparency are two of the pillars Agile depends on heavily.</li>
</ul>
Most of cultural challenges and differences are solved by creating open, honest, respectful and trustful environment. Once people feel this, they usually lower their walls defined by their cultural preconditioning.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>934</wp:post_id>
  <wp:post_date>2014-03-03 15:27:20</wp:post_date>
  <wp:post_date_gmt>2014-03-03 07:27:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>do-self-organising-teams-work-well-in-all-cultures</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203124655814119]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/jUYjjq3igqA]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/SbUikaShoF]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5846156332062740480&type=U&a=V0Qx]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>111</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.101</wp:comment_author_IP>
    <wp:comment_date>2014-03-04 18:12:29</wp:comment_date>
    <wp:comment_date_gmt>2014-03-04 10:12:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Do self-organising teams work well in all cultures? [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393927951</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393927951.38035488128662109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-04 10:12:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>What if some prefer privacy above cooperation? - PolyU student question</title>
  <link>http://leanarch.eu/2014/03/04/what-if-some-prefer-privacy-above-cooperation-polyu-student-question/</link>
  <pubDate>Tue, 04 Mar 2014 10:09:34 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=947</guid>
  <description/>
  <content:encoded><![CDATA[One of the questionsÂ <a title="Agile: Leadership withoutÂ titles" href="http://leanarch.eu/2014/02/19/agile-leadership-without-titles/">asked by PolyU students</a>Â is:

<a href="http://vgrgic.files.wordpress.com/2014/03/question6.png"><img class="size-full wp-image-948 alignnone" alt="question6" src="http://vgrgic.files.wordpress.com/2014/03/question6.png" width="453" height="300" /></a>

Everyone cherishes his/hers privacy. Therefore, I think privacy is more an excuse than a real reason why someone does not cooperate. Effective cooperation requires certain amount of <strong>vulnerability</strong> from everyone involved. This is much easier for a person with higher status - official or unofficial by means of knowledge, experience, or earned respect. These people are less likely to put themselves in vulnerable position, because they do not need to be vulnerable in order to cooperate. They simply rely on e.g. their knowledge. This gives them a sense of security. Cooperation with others could even been seen as a mean to further elevate their status.

I believe that most important reason why people not collaborate is <strong>lack of this security</strong>. They might feel less capable, and therefore less confident, than the rest of the group. From their perspective, they are also not / will not be appreciated for their contribution. If both of these problems are active, collaboration becomes impossible.Â In other words, if anything or anyone threatens to make someone seem less capable, that someone will definitely tend to not cooperate out of protection.

Some might say, a person is simply an introvert. A large misconception about introverts is that they don't like to cooperate. Introverts definitely love to engage with others in order to create something together. They only have their own rules before spending their energy on cooperation. They also need to <strong>feel comfortable</strong> with a person first.

In Agile environment, it is simply unworkable to have people working in corners alone, protecting their privacy. <strong>Self-organising teams cannot operate without everyone's involvement.</strong> I sometimes express this to a whole team, without ever calling the person by name. Also, in most of Agile practices everyone is involved. Mere introduction of these might solve the problem.

Another reason why people are not cooperating, is because they believe it is more effective to work alone. Why? Because of the exactly opposite reason: the rest is not as capable as he is, why bother? In IT, we call this: <strong>Hero-Driven Development</strong>. One, or few guys who do everything because the rest is too slow. It looks as if team would never work without these guys, but very opposite is the truth. In extreme cases, the best thing to do is firing this hero.

This all does not mean we are allowed to force someone to collaborate. It does not work like that. As I just described, the reasons can be very deep. It takes a lot of effort to change them. This effort must come just as much from the rest of the group, as the person in question. One universal approach is <strong>appreciation</strong>. Encourage the person to contribute by asking her help, ask and value her opinion, <strong>give compliments</strong> when she contributes. This all takes time, sometimes years in order to see a change. I've seen some amazing changes in the past years. Therefore, newly forged short living teams are less likely to work as really self-organising teams.

In Asia, language seems to be a problem. In more international companies, where English is the main language, Asians tend to feel a bit insecure in presence of all those British or Americans. This might influence collaboration. The word here is: <strong>patience</strong>. Let person find his words, take his time, do not interrupt him, or prematurely state that you already know what he is trying to say.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>947</wp:post_id>
  <wp:post_date>2014-03-04 18:09:34</wp:post_date>
  <wp:post_date_gmt>2014-03-04 10:09:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-if-some-prefer-privacy-above-cooperation-polyu-student-question</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="polyu-questions-agile"><![CDATA[PolyU Questions]]></category>
  <category domain="category" nicename="psychology"><![CDATA[psychology]]></category>
  <category domain="category" nicename="self-organising-teams"><![CDATA[self-organising teams]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/5wna9yK8zjW]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203131862114272]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/LS8Hiwl0WT]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5846556866842226688&type=U&a=YaSg]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>112</wp:comment_id>
    <wp:comment_author><![CDATA[Agile: Leadership without titles | LEANARCH LIMITED]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://leanarch.eu/2014/02/19/agile-leadership-without-titles/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.82.101</wp:comment_author_IP>
    <wp:comment_date>2014-03-04 18:12:33</wp:comment_date>
    <wp:comment_date_gmt>2014-03-04 10:12:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] What if some prefer privacy above cooperation? [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1393927954</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1393927954.6721990108489990234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-04 10:12:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>"Think big, act small" - what does it mean in architecture?</title>
  <link>http://leanarch.eu/2014/03/05/think-big-act-small-what-does-it-mean-in-architecture/</link>
  <pubDate>Wed, 05 Mar 2014 11:17:49 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=954</guid>
  <description/>
  <content:encoded><![CDATA["Think big, act small, fail fast, learn rapidly" is a statement made by Mary and Tom Poppendieck in the book: Lean Software Development. It is a profound statement.

Nevertheless, it seems we still have so many people having never ending discussions about Architecture and Agile. The questions like: <strong>"How much architecture should we have before starting development?"</strong> or <strong>"Can architecture emerge by doing TDD?"</strong>. The typical answer is something like: "Well, you should definitely spend a few weeks" or "It can emerge, but it does not happen by itself". Also, we love to disagree with other side based on statements full of ambiguousÂ words.

One example isÂ <a href="http://philippe.kruchten.com/2013/12/11/agile-architecture/" target="_blank">Philippe Kruchten's post</a>.Â Another one is a talk <a href="http://www.infoq.com/presentations/Agile-Architecture-Is-Not-Fragile-Architecture-James-Coplien-Kevlin-Henney" target="_blank">"Agile Architecture Is Not Fragile Architecture"</a> given byÂ James Coplien &amp; Kevlin Henney. There is a huge amount of blog posts by a bit less respected names than these, trying to explain wether agile and architecture contradict each other, should find a compromise, or is a marriage made in heaven.

The problem here is that we are talking about architecture as a <strong>thing.Â </strong>But, you cannotÂ <em>hold</em><strong>Â </strong>architecture and you cannot point your finger and say: "There it is!". It is an abstract concept, just like Agile. Abstract concept * abstract concept = unlimited number of assumptions!. The questions above are simply invalid. What exactly do you <strong>need to have</strong> before starting development, and what exactly emerges from TDD? Answers on the first questions above are arbitrary, and do not give us insights.

This brings me to think big, act small statement. James and Kevlin do state that Agile never forbids to <strong>think</strong> about architecture up-front, as opposed to actually putting one in stone. That is clear and useful. But then, they confuse a hell of it by stating things like, we must have some up-front design, called RUFD (Rough Design Up Front). So, how much is "rough" and what is it? Jim emphasises abstract classes, and Kevlin interfaces, and "some" documents, and so on.Â It is eventually one hour of endless explaining of subtleties of an abstract concept, which by itself without specific context does not mean much.

After this opinion of mine, it might amaze you that I actually totally agree with pretty much everything they say. I just want these well-respected names to tell things that are actually usable in practice and a bit less prone to so many possible interpretations, causing huge failures.

The big confusion is caused by lack of clear distinction in the process of what we call architecture. Let me try to make some distinction:

<a href="http://vgrgic.files.wordpress.com/2014/03/architecture_process.png"><img class=" wp-image-955 alignnone" alt="architecture_process" src="http://vgrgic.files.wordpress.com/2014/03/architecture_process.png" width="646" height="172" /></a>
<h2>Look ahead or have a vision</h2>
I never heard anyone saying that we should not spend time looking ahead, and <strong>having a clear vision</strong> of the product from different perspectives. "Think big" is the first part of Poppendiecks statement. I guess Philippe did hear that from some Agile coaches. Some might overlook the first part, and go directly for the second.

By having a vision, I mean first and foremost that everyone involved has it in their head. Is it also placed on a paper? Irrelevant question! It is just a mean of communication. Use youtube if you want, be creative. I don't care, as long as you fulfil <strong>a real need</strong>. You can't do much without knowing this need first.

There is a whole range of practices helping to define a vision. Some of these practices are not called "architectural" but definitely cover things considered architecture. Currently, we don't have enough practices and games to support teams in this process. Yes, we do have a huge amount of overloaded architectural processes like TOGAF staying at meta level, focusing on navel-gazing models, producing documents. We need you (yes, I'm talking to you Jim :-)) to help in this process, tell about <strong>useful</strong> practices.
<h2>Make decision</h2>
Some, when talking about architecture, mean to say: making or having a <strong>significant</strong> decisions about used programming language, technology, visible (system and user interface) or invisible (internal) structure. The main problem here is: What is significant? How much is really significant? Which things to postpone and how? What are the driving forces behind this? And, shouldn't we use technologies and design techniques which enable us to minimise these significant decisions? Which one help us and which don't?
<h2>Design it</h2>
So, once we have this decision, <strong>w</strong><strong>hat do we do with this decision?Â </strong>The biggest and very clear difference between Agile and traditional dealing with architecture is the things we do <strong>after</strong> we have a significant decision. So, we usually design stuff. With design, I mean draw a picture or implement some code in order to....what? Prove it to someone? Whom? And is it a real proof without delivering real functionality in production first? Also, are we talking about overall internal design? E.g. definition of components on highest level, applying specific approach like CQRS, and so on. Or are we talking about user interface, or maybe something at lower level. E.g. caching technology, abstract classes, and so on.

Which one do we need to define beforehand and why? These things are completely different from each other and should be treated as such. We don't have good enough answers to this question. Also, word "design" is just as ambiguous as "architecture".

Besides, from a perspective of doing things up-front: How much time do we spend in this mental exercises compared to failing after 3 sprints and learning from failure? The devil is in these details. There are many different opinions and practices here:
<ul>
	<li>Abstract classes as mentioned by Jim.</li>
	<li>Interfaces as mentioned by Kevlin</li>
	<li>TDD will create proper design, so nothing up-front</li>
	<li>Agile software architecture sketches by Simon Brown</li>
	<li>and so on</li>
</ul>
Again, this is all great, but every single of them is completely arbitrary and so much context-dependent. Completely pointless discussing which one is good or bad. The reality is simply: tell me the context, and I will do my best to explain what the wisdom is.
<h2>Build it</h2>
Again, a relevant question here is wether we <strong>buildÂ </strong>overall decisions up-front or not. DSDM, so called Agile methodology, spends during elaboration phase (up-front) huge amounts of effort <strong>building</strong> significant decisions with, if you are lucky, one implemented use case.

Is this good, bad or inevitable? Again, it depends hugely on technology used and context. Luckily, there are more and more technologies, languages, and tools which lower the price of refactoring. It would be more interesting to have discussion about what kind of decisions must be put in code before starting with first user stories. It would also be interesting to see if we have or can improve certain technologies or design techniques in order to lower the price of refactoring.

Please, be reminded that distinction in different "steps" I make in this post is not my real message. You can probably make a better one.

My message is: Let's not oversimplify these things by using generic words like architecture, design, structure, and so on. Let's simplify things by talking about concrete things we actually do in software projects.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>954</wp:post_id>
  <wp:post_date>2014-03-05 19:17:49</wp:post_date>
  <wp:post_date_gmt>2014-03-05 11:17:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>think-big-act-small-what-does-it-mean-in-architecture</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="category" nicename="software-architecture"><![CDATA[software architecture]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>113</wp:comment_id>
    <wp:comment_author><![CDATA[Eric Lopes Cardozo]]></wp:comment_author>
    <wp:comment_author_email>eric@empulsys.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>83.161.159.77</wp:comment_author_IP>
    <wp:comment_date>2014-03-06 06:54:44</wp:comment_date>
    <wp:comment_date_gmt>2014-03-05 22:54:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Victor,

Good post.

I would like to add that a decision is not a 'thing' also. 
In fact it is a verb in disguise :: deciding.

Many experts with different solutions......the risk is that we are dealing with overgeneralized solutions; solutions that work well within one context and not so well in others. We are also told what to do on the outside (visible) but not what to do on the inside (how to think, reason and make decisions)

To me architecture is about risk management, an activity that humans are quite good at as a species in general but maybe not within the context of (software) projects/products.

Some relevant questions then are: 
1. What is it that we know now that is this risky that we are forced to make decisions that will constrain our solution space?
2. How are we going to qualify/quantify risk?
3. If we have selected these risks, what are good ways to address them?
4. When do we need to have these risks addressed?
5. How can we test or measure that these risks have been addressed?
6. Does the impact of each risk resolution measure outweigh the impact of the risk becoming a problem?

It requires at least  a (continuous) thinking process and teamwork. 
And of course we have ways to do it this in a practical way.

Best,
Eric

P.S.
Neuro Linguistic Programming (NLP) has strategies for (better) decision making which means it is something we can learn and teach.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1394060084</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1394060084</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1394060084.4673340320587158203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-05 22:54:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>114</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>124.217.139.8</wp:comment_author_IP>
    <wp:comment_date>2014-03-06 15:04:23</wp:comment_date>
    <wp:comment_date_gmt>2014-03-06 07:04:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Eric,

Agree. Thanks for this addition! Btw, risk management is really interesting. Most feel that before starting development, the biggest risks should be addressed first. But, there are others with some really reasonable argumentation that risks in architecture should be postponed as much as possible. In other words, exactly opposite opinion. The main argument is that risk-driven approach pushes us towards complex architecture prematurely and unnecessary. Risk analysis suppose to have a pitfall of trying to predict the future, and then trying to have a solution for hypothetical problems. Choosing the simplest possible solution becomes difficult in such case.

I guess it depends very much on existing experience and knowledge of possible risks.
I've witnessed a few times a real irony here, caused by lack of information. While trying to solve theoretical risks, architects forgot the real ones already known by developers and operation guys. A concrete example here is the availability of a network in one specific case. This proved to be the biggest risk for overall availability by crashing regularly because of poorly performed changes. It had nothing to do with technology.

Thanks for mentioning NLP. I did not know this.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1394089463</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1394089463.6248080730438232421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1394089463</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-06 07:04:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>579</wp:comment_id>
    <wp:comment_author><![CDATA[Piensa en grande, actÃºa pequeÃ±o y hazlo ya &laquo; TeachNova]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.teachnova.com/piensa-en-grande-actua-pequeno-y-hazlo-ya/</wp:comment_author_url>
    <wp:comment_author_IP>144.76.85.230</wp:comment_author_IP>
    <wp:comment_date>2014-06-11 17:59:26</wp:comment_date>
    <wp:comment_date_gmt>2014-06-11 09:59:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] âThink big, act smallâ â what does it mean in architecture?Â -Â Viktor Grgic &#8211; Mar. 2014 [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1402480767</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1402480767.127499103546142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-11 09:59:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Book review: Software Architecture for Developers by Simon Brown</title>
  <link>http://leanarch.eu/2014/03/07/book-review-software-architecture-for-developers-by-simon-brown/</link>
  <pubDate>Fri, 07 Mar 2014 08:44:34 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=959</guid>
  <description/>
  <content:encoded><![CDATA[There are many books out there about software architecture and design. Not many combine this discipline with Agile Software Development. There are also many Agile books out there. Still, these books merely touch this aspect by stating general principles. The result is that many Agile teams are still struggling with questions related to architecture.Â So, I was glad that Simon Brown wrote a book specifically targeted for developers. This post is my review. It will hopefully encourage you to buy the book at <a href="https://leanpub.com/software-architecture-for-developers">LeanPub</a>.
<p style="text-align:center;"><a href="https://leanpub.com/software-architecture-for-developers"><img class="aligncenter size-full wp-image-1006" alt="architecture_book" src="http://vgrgic.files.wordpress.com/2014/03/architecture_book.png" width="301" height="424" /></a></p>
Conclusion, as you may already guessed it, the book is good, useful for a number of purposes, but one in particular: <strong>Sketching and documenting architecture and design.Â </strong>The book will give you as a developer a large number of tips and tricks to make effective sketches and effective light-weight documentation. Does this book cover everything in breadth a developer needs to know about software architecture? No, definitely not. It touches a lot of subjects like BUFD, architect's role, definitions, different types of architectures, collaboration practices. None of them is described as well as the one mentioned above.

If you think: "Architectural documentation and Agile, that does not sound good!?" Don't worry. The way Simon presents this, it does not contradict Agile principles and Scrum in any way. It merely gives you many possible options in dealing with challenges related to software architecture Agile teams already definitely have.
<h2>Definition</h2>
The book begins with definition of architecture. The message is that there are many definitions, but can be divided inÂ <strong>verbsÂ </strong>andÂ <strong>nouns </strong>driven definitions. Both are valid. In the well known confusion of different types of architectures, Simon defines his own preference: <strong>application, system, software, enterprise</strong>. The new thing here for me is how Simon stacks these. Application is the smallest perspective, system might contain multiple applications and software architecture is the combination of the previous two. While these types are well interconnected, enterprise architecture is placed somewhat outside this very much technological perspective. I like that Simon simplify things and does not put much relevance to this division in types because exact difference is not important and brings a lot of unnecessary confusion. I didn't really find argumentation why this division is relevant or better than any other.
<h2>Architecture role</h2>
After explaining importance of managing risks, software architecture role is explained as something that can be fulfilled by a person or a team. How this role could be fulfilled by a team is not really explained, which further emphasises<a title="We are the Borg, our role is Architecture Owner!" href="http://leanarch.eu/2013/12/20/we-are-the-borg-our-role-is-architecture-owner/" target="_blank"> my negative opinion about having a role</a> in the first place. At the end, I don't share opinion that teams need an architect, architecture role, master builder, architecture owner, or anything similar. Teams need knowledge and responsibility for taking care of architectural aspects. Having a role, only confuses things, and covers up the real problems many Agile teams have as mentioned by Simon. I'm afraid that explanation by Simon will further encourage many architects to protect their kingdom instead of help teams take care of this extremely important discipline.

Simon's further explanation is about what kind of things an architect usually does: e.g. building prototypes, proof of concepts, perform code reviews. Also importance of being generalising specialist. My opinion: these are all very important things thatÂ <strong>developers</strong> should do occasionally. All developers don't need to know and do everything, but because architecture is such a broad discipline it is very natural to spread this over multiple developers. This happens automatically driven by knowledge and experience of each team member.

Still, I was glad with importance of having "hands-on software architect". Simon explains very extensively what this exactly means. I suspect that by applying these things, the difference between architect and developer will blur significantly.
<h2>Designing, visualising and documenting software</h2>
These parts of the book are the most useful ones in my opinion. Simon covers the most important aspects in dealing with software architecture. It starts with architectural drivers: functional reqs, quality attributes, constraints and principles. These are well explained with a lots of practical advise. Teams can use this as a checklist. I like his opinion on term "best practices".

Simon gives a well-balanced and practical advise about usage of design tools and UML. A number of often used views in approaching architecture from different perspectives is explained. A number of useful advises are given about how to keep things simple and importance of simplicity.

Agile teams love using post-its, whiteboards and flip-charts. A big chunk of book explains how to use these effectively in communicating architecture and design. Also, many pitfalls are explained.

Chapter about documenting seems an extension of the previous two. Simon strikes a nice balance of lightweight documentation. Each type of essential information every software architecture has is explained by blocks containing intent, structure, motivation, audience and wether it is required. If it isn't clear what I mean, go buy the book. It is very useful stuff. :-)
<h2>The rest</h2>
The last part is about number of things named "software architecture in the development lifecycle". It should help developers in dealing with questions of BUFD, significant decisions. The explanation is useful, but lacks argumentation. It seems based on personal experience of Simon, which is still definitely useful.

In a bit unexpected place in the book you will find very practical advise in dealing with risks. Risk-storming is a really nice practice.

Only the very last part of the book touches aspects of incorporating architecture as a discipline in teams. I've expected a bit more because of this huge problem that Agile teams don't know well enough how to <strong>organise</strong> architecture process.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>959</wp:post_id>
  <wp:post_date>2014-03-07 16:44:34</wp:post_date>
  <wp:post_date_gmt>2014-03-07 08:44:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>book-review-software-architecture-for-developers-by-simon-brown</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203154306755374]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/EHb6daAI2d]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/hGYUq5fkKm3]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5847623227580354560&type=U&a=ujsA]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reoccurring Problem Syndrome</title>
  <link>http://leanarch.eu/2014/04/02/reoccurring-problem-syndrome/</link>
  <pubDate>Wed, 02 Apr 2014 08:33:02 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1042</guid>
  <description/>
  <content:encoded><![CDATA[Your Agile team(s) isÂ incrementally delivering a product for a long time. Let's say 4 years. After every sprint aÂ new version is delivered into production successfully and many feedback loops are giving information on what can be improved.

There is this one issue with someÂ stakeholders complaining that all that prioritising leaves them waiting too long before they see their needsÂ being fulfilled. In his best judgment, Product Owner has decided to postpone some requests from a particular group of users in favour of others, mostly driven by defined business strategy. This impatience from users is effecting collaboration with team(s).

The issue is discussed in a retrospective meeting, and action isÂ defined to solve the problem. Unfortunately, the same issue arrises again 2 sprints later. It could be from same group or this time from another group of users. TheÂ causeÂ here is deep and might be dueÂ to lack of alignmentÂ between management and users, or different business departments.

Teams spend a lot of time on this reoccurring problem, and more important, a lot of <strong>negative energy</strong>. It is a waste, a big waste.Â After each retrospective, the problem is not solved, but often just postponed.

A good thing to do in this situation is first to be <strong>aware</strong> of that problem has reoccured. The second thing is to prevent statements like "We've tried to solve this. It is very difficult, let's keep trying." or "We need to do more of what we did last time." as a possible solution. This usually does not solve the problem. Instead, try approaching the problem from a completely different perspective, maybe discovered by applying completely different retrospective techniques. E.g. <a href="http://christianpaulsen62.wordpress.com/2011/01/31/2-reasons-you-need-to-do-a-fishbone-diagram/" target="_blank">Fishbone Diagram</a>. A solution might also be to ask for help from someone outside if problem falls outside the influence of teams.

TheÂ main point is, if the possibilities for solution are exhausted, teams should also be prepared to simply <strong>accept</strong> the problem as given or work around the problem without really solving it. In case of reoccurring problem syndrome, this is better than <strong>wasting time and energy in retrospectives</strong> in the name of continuous improvement, at cost of givingÂ attention to achievableÂ improvements. From systems thinking perspective, improving something different that is perfectly achievable, might influence in positive way this seemingly unsolvable problem. For example, repeating the business vision and path as understood from business at the beginning of sprint review meeting.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1042</wp:post_id>
  <wp:post_date>2014-04-02 16:33:02</wp:post_date>
  <wp:post_date_gmt>2014-04-02 08:33:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reoccurring-problem-syndrome</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="self-organising-teams"><![CDATA[self-organising teams]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203329560856617]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/GfydBqajBZk]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/4fNdQjNFq0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5857041823821746177&type=U&a=9ryl]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Dutch government massively failed IT projects openly discussed</title>
  <link>http://leanarch.eu/2014/04/26/the-dutch-government-massively-failed-it-projects-openly-discussed/</link>
  <pubDate>Fri, 25 Apr 2014 17:57:15 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1048</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://vgrgic.files.wordpress.com/2014/04/erp-failure-head-in-hands.jpg"><img id="i-1154" class="size-full wp-image aligncenter" src="http://vgrgic.files.wordpress.com/2014/04/erp-failure-head-in-hands.jpg?w=444" alt="Image" /></a>

I usually write about different details of doing architecture in an Agile way and other related topics, but the reality of outside world is that Dutch government loses betweenÂ â¬4bn and â¬5bn on failed waterfall IT projects. This is definitely a problem in other countries too.

As far as I know, thisÂ is the first time huge failures in governmental IT projects are discussed so openly. AÂ <a href="http://www.tweedekamer.nl/kamerleden/commissies/tcict/" target="_blank">parliamentary committee</a> hasÂ questioned today fiveÂ people from IT industry in the first day of enquiry. The first one was Hans Mulder (a professor at the University of Antwerp) who gives some hard statistics:
<blockquote>Just 7% of the projects with a budget starting at â¬7.5m can be said to be successful, Mulder told MPs. In total, 70% of projects fail. Of those which flop, 36% fail so seriously the new system is never used and around half are of doubtful value because they turn out to be too expensive, take too long or produce unexpected results, Mulder said.Â - source: DutchNews.nl</blockquote>
Second was Stephan Corvers (owner of Corvers Procurement Services BV). The main subject was about procurement process. His expected opinion was that failures have little or nothing to do with procurement process itself. According to him, the customer should better describe what is wanted before starting a project. In other words, more of everything what is already being done. The most noticeable is vagueness of words and statements he used when answering the questions. "Frames....bla bla....framework...frames...bla bla". At some point a MP asked: "Frames?....euhm what?"

Third one was prof. dr. C. Verhoef. He explains clearly some real and painful issues in those failed IT projects. His main point is the lack of proper knowledge in IT industry. Nobody is willingly contributing to failures, but rather "the road to hell is paved with good intentions". IT people are lacking knowledge to successfully deliver. Another point was lack of third element in procurement process, which is quality. These big IT projects are given to software companies based on cost and time aspects. In all kinds of games played out in this process, something perverse is happening. The companies which are capable of delivering and know the risks usually loose the project to competition, which neglects the risks or play the game of underestimating and compensating later and in the process make the project much more costly or complete failure for the customer.

It was a nice analysis of the problem, but solution was a bummer. His suggestion was to specify even more (quality aspects) before the procurement process starts. From my own experience, these beforehand "ilities" are always made up by some group of architects in their ivory tower. The effect of this is possible creation of even bigger problem - overcomplicated architecture driven by quality aspects that have little to do with reality. Another suggestion was to split up these big projects in many smaller ones.

Fourth interviewed was Tony Wildvank (ex-contract manager for large IT projects in government). Her main point was that we need more architecture and involvement of architects before we start. What she actually says: even more documents, theoretical analysis, and so on, before starting to deliver anything. The rest of her statements were either unwillingness to answer the questions because they were too sensitive or full of vague statements like with Stephan. Statement like: "software projects are same as process of making socks in a factory" is aÂ sign of huge amateurism and lack of knowledge.

Fifth and last interviewed today was Swier Jan Miedema. He is an entrepreneur with 20 years of experience in working for or directly with companies like Centric, Logica, and Ordina. He is the embodiment of the pain many honest IT people have in Dutch government IT projects. Many of his statements were maybe too honest and too personal, but he is one of the few brave enough who speak out in such way. I really wonder how this will effect his future business.
His was really appalled by atrocities of big and well-know software integrators in Netherlands. According to Swier, IT projects in government are controlled by these companies. They define what happens with IT at municipalities.

I love his solution. Vendors must prove they are capable by delivering something in one week. If not delivered, they are not paid. After this, close collaboration starts where vendor continuously proves its capability by delivering frequently. He did not say it, but it was obviously Agile he was talking about.

Altogether, I was disappointed and sadly confirmed in my assumption of extreme amateurism in these multibillion projects. Insanity is mind boggling. A clear example is that nobody thinks of splitting a large project into many smaller ones. Even some of the interviewed people are mere confirmation of this amateurism. Some pretend to know how to successfully deliver such large projects. More architecture, better specification, better control, and so on.

The Dutch IT world seems to be completely divided in people constantly discussing why those big waterfall projects are failing and Agile world. They don't interact with each other much.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1048</wp:post_id>
  <wp:post_date>2014-04-26 01:57:15</wp:post_date>
  <wp:post_date_gmt>2014-04-25 17:57:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-dutch-government-massively-failed-it-projects-openly-discussed</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0518f4edcbcbc36a1b6e5959bf3ead7d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_049d7c5d2adaac0e5ff8899350a34404</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_02ac522266ca48c83d91d1b11b5b9987</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2abec3a061f09f9fadffc4e72cab2118</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_acd61c8bd4b487e4b8acfe2045939dfe</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_37ce0c578b5bcc84302fc04fb8c497ad</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4ce93c5b396a7f675919419eb3b0f42c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f28464e547d8774099ba60ecef71e2af</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c18d1d39db59f3b7f4ac18639cf9e723</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_19908a988a77a488228929f6f00c7cb4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_65552fa2a7f7032066addc6ca20feedd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5a7f30c08749e6e31f99cc322a6675af</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f29453e5af14c626f4a26058adf81e43</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f638c8f007ef1363284ade4ef98cfdfa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6ad85d61b23c9477decce98c3c6759ff</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Agile team without a purpose is a truck without fuel</title>
  <link>http://leanarch.eu/2014/04/29/agile-team-without-a-purpose-is-a-truck-without-fuel/</link>
  <pubDate>Tue, 29 Apr 2014 14:51:50 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1161</guid>
  <description/>
  <content:encoded><![CDATA[Why do Agile teams fail and othersÂ are extremely successful? Why the rest of the world thinks Europe is a good thing and Europeans are blessed with so many achievements, and <strong>only 58% of Europeans call themselves Europeans</strong>? Why do you have trouble getting out of your bed and going to your work?

<a href="http://vgrgic.files.wordpress.com/2014/04/tree.png"><img id="i-1417" class="size-full wp-image aligncenter" src="http://vgrgic.files.wordpress.com/2014/04/tree.png?w=642" alt="Image" width="500" height="500" /></a>

There could be multiple reasons. For a team to be really successful we need<strong> craftsmanship, trust, fun, transparency, and a purpose</strong>. The things a Scrum Master or an Agile Coach does, has always to do with one of these aspects in some way.

Let's be honest. Most self-named Agile teams are slightly more successful than teams working in waterfall projects. Hopefully, customerÂ is very happy with some visible improvements: faster delivery, better quality, changing requirements is ok, and maybe few others. The tendency is to spend a lot of time on tuning and improvingÂ these aspects, which is good.

I've noticed that one thing is very often lacking, and it has a tremendous impact on other aspects and being successful. It is a clear purpose. The purpose isÂ expressed in many different forms. One calls them vision statements, others mission statement or project goals, or even business value. Today, any project or team, Agile or not, has a statement representing a purpose. Unfortunately, most of them are worthless, definedÂ by management and ridiculed by the teams.

One might say, who cares!? Let C-level people define vague statements for their own pleasure,Â while teamsÂ build the real thing. Unfortunately, the reason why you are having a hard timeÂ getting out of your bed and Europeans don't like their Europe is this lack of purpose. Despite the amount of fun, craftsmanship, your large salary and so on, this all will also be affectedÂ if purpose is not embedded in everyone involved. I believe that lack of good purpose is one of the most important reasons for teams to fail, and one of the most neglected problems. I've seen problems and discussions not being solved simply because the root cause was lack of purpose: "Why are we building this?"...."Because the customer really wants this"... Applying the practice of asking 'why' question 5 times will often end up in annoyed customer or product owner. Team might finish the meeting as if everything is cleared up, but what really happened is acceptance of the wishes of the customer, while the ultimate purpose is still unknown or even wrong. The effect is lack of energy and involvement. In worst cases, teams are chasing the wrong goal. One of the most awful experiences as an IT professional is when you spend years chasing a goal, project is suddenly killed and the imaginary goal has simply vanished.

The following is a number of common mistakes when defining a purpose as a vision statement or whatever you want to call it.
<h2>#1 : The stated purpose is a misfit with a personal purpose</h2>
The reasoning why your team member gets out of his bed can be visualised as a tree. The roots are theÂ personal reasons for living and not very visible to others. These might be very complicated and different from person to person, but the commonality is doing something meaningful for ourselves and even more for others. Doing something meaningful has different interpretations. One wants to get wealthy in order to support herÂ family and chooses to work in banking business. Someone else, or the same person might change her interpretation during her life time, and gain new insight, like from getting wealthy into doing ethical banking - e.g. investing in renewable energy sources, and refusing to work for banks that support armsÂ industry.

We tend to spend much more energy into something if it fits ourÂ interpretations of word meaningful. Unfortunately, this is often neglected when defining something like a vision statement. Leaders have egocentric tendencies where they feel that their purpose is or should be the same as purpose of everyone else.

I remember the moment I decided to leave a company when CEO was giving a speech where the main message was something like this: "We should be grateful that we are doing better than our competitors, but hard times are coming and we need to be careful with costs we are making. Even more important, every professional should be doing billable work. Also, as you can imagine there won't be salary increase for anyone. We should be glad, because other companies are talking about lay-offs constantly". The reason for me to leave was not the money, but complete lack of purpose I was somehow expecting at that moment.

In this case, CEO is actually doing his best to make a fit with the purpose of his workers, which is sense of security. For some this was a good and realistic speech, but most simply didn't care about it at all. We are talking here about highly educated craftsmen / women with hugeÂ experience. They are unlikely to feel insecure. This was noticeable during diner after the speech. This kind of pointless statements and speeches usuallyÂ end up in no reaction at all or sarcasme and ridicule. Effect on energy levels: they become even lower.
<h2>#2 : Vagueness and lack of distinctiveness</h2>
So many times I would read a vision statement for a software product and ask management why is it so vague and open toÂ interpretations. The nr. 1 reason they state: "It is a compromise, and we want to have space to move in any direction we wish as needed.". Ironically, they areÂ not yet familiar withÂ Agile software development, but it sounds like they are. If there is one thing that should notÂ change, it is theÂ purpose explained in the vision statement. Explicitly making sure the purpose behind a statement can change as needed, makes it worthless.

The main reason why companies choose to have vague vision statements is the lack of purpose. If the common purpose is there, it should not be difficult to write it down in more precise words.

On company level, by far the most vision or mission statements are talking about shareholders value and satisfying needs of the customer. The exact same statement can be used for almost any business. The statements like "Blabla company places customer at the center of our business" has aÂ value only when explained further in the context of this specific company and its business. I hope I don't have to explain why "shareholders value" is completely uninteresting to employees.

Another problem is that vision statement looks like a result of many loosely coupled fancy words. The thinking is: if we leave something out, it will be somehow overlooked later. For some reason, the goal becomes to be comprehensive instead of inspiring.
<h2>#3 : Disconnection from daily deliverables</h2>
Let's say we have a really nice purpose, and everyone believes in it. We start delivering first features of a product. Suddenly, after few sprints, product owner was pushed by stakeholders to deliver something completely outside of the scope of the stated purpose. According to Scrum, Product Owner has the right to doÂ this. Nevertheless, team isÂ confused. "I thought we hadÂ this other goal which was more important than anything else?". PO: "Yes, but this is anÂ exception and I don't have much of a choice. We have to do this".

The reality of this example is usually much more subtle. Let's say we have a nicely stated MVP (Minimal Viable Product) and speed of delivery is crucial - the sooner, the better.Â ThisÂ drives any daily decisions team makes together with Product Owner. Any decision should be scrutinised by team if it fits within the stated goal. It is a responsibility of Product Owner to be very careful with any deviation from this goal even slightly. These deviations are not wise for two reasons. One: stakeholders are obviously not fully in agreement what the goal should be. Two: team becomes demotivated.
<h2>Conclusion</h2>
Although most vision and mission statements are ridiculed and seem completely useless, the real purpose for delivering a product is still extremely important to be truly successful. Lack of common purpose is a hidden impediment. It must be made visible and discussed openly. A team should be able to give feedback, or even better, formulate vision statement together with product owner and stakeholders. There are several practices that might be helpful in this process. One of them is <a href="https://platinumedge.com/blog/agile-artifacts-product-vision-statement" target="_blank">The Product Vision Statement</a> - from bookÂ Crossing the Chasm, Geoffrey A. Moore.

I want you to ask your manager or product owner right now: "Why should I put my energy in making this product?" If his only answer is: "Because I pay you to do so!", then you should be looking for some other challenge. Life is too short.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1161</wp:post_id>
  <wp:post_date>2014-04-29 22:51:50</wp:post_date>
  <wp:post_date_gmt>2014-04-29 14:51:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile-team-without-a-purpose-is-a-truck-without-fuel</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="leadership"><![CDATA[Leadership]]></category>
  <category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to make software architecture decisions?</title>
  <link>http://leanarch.eu/2014/05/27/how-to-make-software-architecture-decisions/</link>
  <pubDate>Tue, 27 May 2014 12:28:10 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1497</guid>
  <description/>
  <content:encoded><![CDATA[Today, a friend of mine asked me this question. We both know how companies usually make architectural decisions, but how Agile teams (should) make significant architectural decisions is less obvious. A difficulty with this question is that answer has many perspectives: one could talk about business need, technology choices, documentation, who is involved in decision making, how they actually do it, what kind of meetings, etc.
<p style="text-align:center;"><a href="http://vgrgic.files.wordpress.com/2014/05/wiz-khalifa-quotes-sayings-decision-making-feelings.jpg"><img id="i-1600" class="size-full wp-image" src="http://vgrgic.files.wordpress.com/2014/05/wiz-khalifa-quotes-sayings-decision-making-feelings.jpg?w=490" alt="Image" /></a></p>
<p style="text-align:center;"><!--more--></p>
We could make it even more complex by quoting Grady Booch: "The set of design decisions that minimise the cost of change". Therefore, it seems that architecting is all about making decisions. Agile teams do have very different way of making decisions compared to waterfall teams:
<h2>Continuous decision making</h2>
Mature Agile teams spend much more time on making decisionsÂ than traditional ones. Ironically, this is often unnoticed because the time spent is spread over all iterations, and more integral part of software development. Compared to waterfall projects, that spends a lot of time in the beginning, an Agile team could start delivering with almost no architectural decisions. In some cases, a team might just start experimenting with a goal of getting early feedback. Nothing is decided yet. The only challenge here is to make sure that cost of change isÂ low enough. This kind of product development has after first few iterations a tipping point, after which certain decisions become moreÂ expensive to change.
<h2>Pull instead of push driven decision making</h2>
You haveÂ maybeÂ heard of statements like just in time, just enough, KISS (Keep It Simple, Stupid), and YAGNI (you ain't gonna need it). This is all good and great, butÂ which factors influence the moment we do take certain decisions? The answer is in the need. The first and foremost need is the <strong>business need of current orÂ next iteration</strong>. "The first thing on product backlog for our big CRM systemÂ is a list of customers. How do we solve this?". The second need is a <strong>product vision</strong> created in the process of creating a product backlog. An Agile team will compare each decision against this product vision. In this process, it is often ok to deviate from product vision as long as this is a conscious decision. These deviations result in either changing a product vision, or as a temporary solution. The third one is about two dimensions of <strong>quality: structural and perceived.</strong> Some call it: internal and external quality. The quality as a driver for architecture decisions is tricky. It isÂ susceptible to various interpretations, and it is the most misused argument for introducing overly complex solutions.

Therefore, an Agile team will never make a definitive decision unless it is necessary for instant delivery in the coming days or weeks. One of my often usedÂ mantras: <strong>"Do we need to know / decide this right now?"</strong>.

A product vision does not influence the moment of decision making, it only gives direction of how product might look like at the end. This direction changes with any significant change in product backlog, or maybe new insights based on technology capabilities.
<h2>Everybody is involvedÂ in decision making</h2>
I remember once a project manager (and now another good friend of mine and Agile coach) telling me in my role of an "architect" to make all architectural decisions. He was observing how challenging it can be to let teams, together with stakeholders, make decisions. He suggested that I should definitely listen to all input, but eventually make the final decision myself. I decided not to follow up his advice and kept organising and facilitating sessions where everyone together makes these important decisions. Despite difficulties, it saved me a lot of time, since I never needed to defend or explain a decision. It was not mine after all. Besides, it contradicts with idea of self-organising teams, and at least one of the Agile Manifesto principles.

There is much more to be said about architecture decision making. Btw, the last one is also the most crucial one. <strong>A group of well-educated self-organised craftsmen and -women makes better decisions</strong> than an architect alone, despite difficultiesÂ in effective facilitation of such process.

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1497</wp:post_id>
  <wp:post_date>2014-05-27 20:28:10</wp:post_date>
  <wp:post_date_gmt>2014-05-27 12:28:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-make-software-architecture-decisions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="post_tag" nicename="architecting"><![CDATA[architecting]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="category" nicename="software-architecture"><![CDATA[software architecture]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/gXjKvTjjufB]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>527</wp:comment_id>
    <wp:comment_author><![CDATA[Michal Svec (@svecmichal)]]></wp:comment_author>
    <wp:comment_author_email>svecmichal@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/svecmichal</wp:comment_author_url>
    <wp:comment_author_IP>89.103.166.18</wp:comment_author_IP>
    <wp:comment_date>2014-06-03 03:21:00</wp:comment_date>
    <wp:comment_date_gmt>2014-06-02 19:21:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Last paragraph is so true.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-02 19:21:00</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/1026923903/woot_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>82606582</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1401736861</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1401736861</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1401736861.3718540668487548828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>486</wp:comment_id>
    <wp:comment_author><![CDATA[SutoCom]]></wp:comment_author>
    <wp:comment_author_email>dennes777@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.sutocom.net</wp:comment_author_url>
    <wp:comment_author_IP>50.176.179.47</wp:comment_author_IP>
    <wp:comment_date>2014-05-27 21:11:47</wp:comment_date>
    <wp:comment_date_gmt>2014-05-27 13:11:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://sutocom.net/2014/05/27/how-to-make-software-architecture-decisions/" rel="nofollow">SutoCom Solutions</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9083961</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-27 13:11:47</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1401196307</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1401196308.3030769824981689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"sutocom";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1401196308</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Corporate world needs high quality Scrambled Eggs</title>
  <link>http://leanarch.eu/2014/06/04/corporate-world-needs-high-quality-scrambled-eggs/</link>
  <pubDate>Wed, 04 Jun 2014 07:29:08 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1628</guid>
  <description/>
  <content:encoded><![CDATA[Hong Kong is a culinary paradise. You can eat here almost anything, the quality is great, and the price is low. Major difference with European restaurants is the perception of service. In Europe we are accustomed to long evenings in restaurant with several courses, aboutÂ half an hour between each course, a lots of wine, beer, or coffee at the end. Perception of service is about personnel being polite, knowledgeable, sociable. Also comfyÂ chairs and tables, with enough space in between.Â Slow service is ok, even integral part of having relaxing evening, as long as it is not excessive. We don't mind paying hefty price, but we also usually prefer eating at home because of it.

In Hong Kong, on other hand, perception of service is almost opposite. First and foremost, Hongkongers expect <strong>speedÂ and food quality</strong>. Eating in restaurant saves time. Everything else seems secondary, as long as we are not talking about high-profile, more western-style type of restaurant.

An extreme example is <a href="http://www.openrice.com/english/restaurant/sr2.htm?shopid=90">Australia Dairy Company</a> restaurant. It is a fast-paced, authentic place - more than 30 years old - where you can have very tasty scrambled eggs with toast! There seem to be a permanent row of people standing in front.

<a href="https://vgrgic.files.wordpress.com/2014/06/australia_dairy_company_outlook.jpg"><img class="aligncenter size-full wp-image-1629" src="http://vgrgic.files.wordpress.com/2014/06/australia_dairy_company_outlook.jpg" alt="Australia_Dairy_Company_outlook" width="646" height="484" /></a><!--more-->

The most remarkable aspect of this restaurant is not efficiency, but <strong>effectiveness</strong>. A crucial difference withÂ most other Hong Kong restaurants is that others try to service as fast as possible. But, the goal in this one is to have you as a customer <strong>as soon as possible back on the street</strong>. In 30 years they are continuously perfecting the concept of <strong>getting things done</strong>. I think it is possible to go through whole "process" in less than 10 minutes.

My wife and IÂ wereÂ placed at already occupied table. A couple at our table lives nearby, and comes to this restaurant almost every week for many years. Customers are serviced by middle-aged men, and money is handled by two women at the entrance. Effectiveness is so extreme, that there is no time for being polite. I was even suddenly insulted because I didn't order my dish as expected. In speed and confusion, I was misunderstood and 2 minutes later my dish arrived, which I didn't order. In second attempt, the waiter made another assumption really fast and I received a wrong dish again. Finally, after rudely pointing with my finger at someone else's dish, and 1 minute later I received my dish. After each try, a number is written on a very small piece of paper, which replaced the old one. This is our total price.

<a href="https://vgrgic.files.wordpress.com/2014/06/dscn9801.jpg"><img class="alignnone wp-image-1631" src="http://vgrgic.files.wordpress.com/2014/06/dscn9801.jpg" alt="DSCN9801" width="329" height="247" /></a> <a href="https://vgrgic.files.wordpress.com/2014/06/00for3583f582e7b8d75c2l.jpg"><img class="alignnone wp-image-1632" src="http://vgrgic.files.wordpress.com/2014/06/00for3583f582e7b8d75c2l.jpg" alt="00FOR3583F582E7B8D75C2l" width="331" height="248" /></a>

We were probably the slowest customers of all and still finished in about 25 minutes. The payment process by two women at the entrance is alsoÂ remarkable. There is no electronic equipment, and therefore only cash is accepted. We are serviced by both of them at the same time. One takes care of coins and other of paper bills. They are shouting amount to each other, and how much it should be returned. The communication is very intensive and constant. The whole payment took about 5 seconds, and we were back on street.

This restaurant understands why customers keep coming here. It is all about getting you back on the street and filled belly with simple, cheap, but delicious dish. It is not about technology, fancy menus, and a good looking meal. Also, efficiency is more a side-effect of being effective.

In restaurant business, customers are ready to pay for "extras" to have anÂ experience. Unfortunately, we don't have this luxury in corporate world. This restaurant understands the importance of getting things done better than most enterprises today.
<h3>Wrong quality</h3>
ThereÂ wereÂ mistakes in the process twice, rudeness, but at the end I wasÂ very satisfied with a simple high quality dish, and back on street really fast. The performance of the end result is much more important than any step in the process. Should they try to be more polite and not make mistakes? Probably not. This, so called quality of service improvement, would possibly result in lower quality seen from end result. It takes time to be polite and try prevent mistakes; also from cost perspective. Two unpaid dishes occasionally cost less than lower throughput of customers.

In corporate world, and specially architecture aspect of it, we are causingÂ slower throughput of value and very bad perceived quality because of our efforts to improve the steps. There is also way too much "fanciness" at cost of end-quality in a world that should not permit any fanciness. In other words, introducing "advanced" technologies with long lead time (implementation time), while occasionallyÂ making easily reparable mistakes is often cheaper. Despite mistakes in restaurant, the total time and cost was still low.

Instead, the corporate world needs high quality scrambled eggs. The customers in corporate world never ask for high-profile diner with lots of wine, hefty price, too many calories, and a hangoverÂ the next day.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1628</wp:post_id>
  <wp:post_date>2014-06-04 15:29:08</wp:post_date>
  <wp:post_date_gmt>2014-06-04 07:29:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>corporate-world-needs-high-quality-scrambled-eggs</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="category" nicename="effectiveness"><![CDATA[effectiveness]]></category>
  <category domain="category" nicename="efficiency"><![CDATA[efficiency]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/ZFfpc2JdU9r]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203797887404488]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/7chX0vt0qv]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5879856175742214144&type=U&a=yxje]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Technical debt metaphor is wrong</title>
  <link>http://leanarch.eu/2014/07/14/technical-debt-metaphor-is-wrong/</link>
  <pubDate>Mon, 14 Jul 2014 10:59:05 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1639</guid>
  <description/>
  <content:encoded><![CDATA[Martin Fowler has <a href="http://martinfowler.com/bliki/TechnicalDebt.html" target="_blank">an explanation</a> of technical debt metaphor as originally defined by WardÂ Cunningham. Many have misunderstood this metaphor. Interestingly, even Fowler gives an explanation, which fits the metaphor, but notÂ explanation by Ward Cunningham. CunninghamÂ even warns audience to not mistake this metaphor with intentionally creating unwanted design or a mess. Cunningham does not believe in "dirty way of doing things" as explained by Fowler, just to fix them later on. Fowler mentions deadlines as a major reason for quick and dirty. I believe that deadlines themselves areÂ the actual problems, and therefore not a good reason.

<a href="https://vgrgic.files.wordpress.com/2014/07/debt-free.jpeg"><img class="aligncenter size-full wp-image-1741" src="http://vgrgic.files.wordpress.com/2014/07/debt-free.jpeg" alt="debt-free" width="425" height="282" /></a><!--more-->

I've used the term very often. At first, it was because I didn't completely understood the metaphor, but it sounded cool and helped me a lot in driving design in line with XP practices. When I started to think about word "debt", I was confused. I keptÂ applying something because it fitted my perception of continuous improvement with obviously nice effect, without much thinking aboutÂ the metaphor itself.

According to Fowler, the intent of technical debt is to consciously make suboptimal decisions for the sake of speed or urgent business need, and rectify them later on when the speed is less needed. Technical debt would implyÂ that we actually know a much better design, but we choose not to implement it right now. This either meansÂ we are predicting the future requirements reflected in some imaginaryÂ design, or/and technology does not allow us to incrementally deliver usable system all the time. In other words, we need to make shortcuts, because implementing this technology takes much longer than acceptable for business.

It happens that I never willingly was in such situation. Even if it was urgent, making shortcuts usually meant introducing bugs and general lack of quality. In other words, I would always choose the most optimal design I can think of <strong>for the current requirement</strong>.

http://www.youtube.com/watch?v=pqeJFYwnkjE

I have used term technical debt to deal with new insights or things we learn - alsoÂ mentioned by Cunningham - as a result of changing requirements or any larger improvements I would discover. Smaller ones were dealt with during normal TDD cycle ("The Boy Scout Rule"). In Agile software development, design has a continuous property. It starts with the simplest and best possible approach for the current need. Of course, there are many more requirements we don't know yet, and even the implemented ones will change. These will have inevitable effect on "the simplest and best possible approach" we had in beginning. I used term technical debt to name and manage these effects. As soon as I knew my existing approach was slightly orÂ completely wrong, I try to deal with it right away. Some of these changes can be big. They would be gradually implemented and spread over multiple iterations, in which the real business value usuallyÂ has higher priority.

In case of large systems, there could be a whole list of newly discovered insights. It would sometimes take months before they are implemented. In meantime, a new ones are continuously discovered, resulting in a permanent list of improvements. Although I called it technical debt list, I'mÂ not paying interest. IÂ rather constantly discover new ways of saving money and try to implement the improvements as soon as possible. Since the trigger for improvement is always some new business requirement, the improvement itself is connected to this requirement and implemented as such. It would be a debt if we would neglect improvement despite obvious legitimate reason driven by a requirement. That would be stupid, wouldn't it?

In fact, this way of thinking is not new at all. It is already part of Test-Driven Development. The refactoring step is where we look at where we stand and make improvements after each requirement is implemented. Only relevant difference is that on larger system- and time scale some requirements are difficult or impossible to implement without first improving the existing design. In TDD, refactoring isÂ primarily driven by principles such as SOLID, while on bigger scale improvementsÂ are more driven by business requirements. The requirement places natural improvement boundaries; we should not start improving things not related to this currentÂ requirement. There is simply no rational reason to do that.

Although the term technical debt helped me a lot, I do think it breaks too easily and therefore causes misunderstanding. There is no such thing as getting into financial debt and paying interest without knowing that first. In software development, we don't actually know if our choice is going to be a "debt" later on. Some wouldÂ think:Â who cares if we know we are in debt! Well, in that case, any software solution is just a financial debt that will be paid back later by gradual or complete replacement by something better. In other words, nonsense.

With right knowledge and technology, anything can be implemented in an incremental way nowadays. Therefore, I don't believe we need to make suboptimal choices. Instead of talking about technical debt, we should use technology capable of fast delivery where every choice we make is the right one at that moment with existing knowledge and capabilities.

It seems that the only correct usage of this metaphor is as an anti-pattern. Quick-and-dirty solutions are costly. This creates a costly debt, where cost grows very fast in time. It is therefore a bad practice to write quick and dirty code, even for seemingly legitimate reasons like deadlines.

One of my customers mentioned they didn't have time to writeÂ high quality code with proper design.Â TheirÂ users just could not wait. The second question was how much time they spend fixing things. It was 30% on average.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1639</wp:post_id>
  <wp:post_date>2014-07-14 18:59:05</wp:post_date>
  <wp:post_date_gmt>2014-07-14 10:59:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>technical-debt-metaphor-is-wrong</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>gplus_authorship_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10204093956926041]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/YRGsoLpPMco]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/XEKf2CN1Bo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5894407806492106752&type=U&a=iiks]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Toyota secrets from Mr. Yoshio Ishizaka</title>
  <link>http://leanarch.eu/2014/06/26/toyota-secrets-from-mr-yoshio-ishizaka/</link>
  <pubDate>Thu, 26 Jun 2014 07:46:06 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1641</guid>
  <description/>
  <content:encoded><![CDATA[This morning I was privileged to participate in a small gathering in Hong Kong, where Mr. Yoshio Ishizaka told his story about Toyota and shared some of his personal experiences. Mr. Ishizaka has worked for Toyota since 1964 and has always focused on overseas business.

<a href="http://vgrgic.files.wordpress.com/2014/06/2014-06-26-09-23-30.jpg"><img id="i-1651" class="size-full wp-image" src="http://vgrgic.files.wordpress.com/2014/06/2014-06-26-09-23-30.jpg?w=650" alt="Image" /></a>Â <!--more-->

Although I haven't heard anything really new, it was a joy to hear him speak with simplicity and clearness about Toyota's "secrets". And some things he mentioned were very much emphasised when Agile Manifesto just came about, but today seems sometimesÂ forgotten.

As the picture already shows, <strong>continuous improvement</strong> and <strong>respect for people</strong>Â areÂ the real secret. Not TPS, and in our IT world: Scrum, Kanban, or anything similar. It is all secondary and product of the first two. When Toyota just came to US, Americans had a hard time adjusting to these values. An example is the rule that any production worker is empowered to stop the whole production line if he/she finds a fault. No manager is allowed to overrule that. Another example is the removal of blame culture: no matter what goes wrong, nobody tries to find the responsible person to blame. Instead, they will keep asking why until the root cause in the process is found.

An interesting observation is Toyota's obsession with process. Since Agile Manifesto says: "Individuals and Interactions over processes and tools", it may sound like he is giving the exact opposite message. But, it is not. This obsession is just a product of continuous improvement. Sometimes, in our Scrum introductions we forget to mention how important is to continuously and rigorously challenge and improve the process of software development. We either start changing Scrum without understanding it first, or stop changing anything in process later on, simply because we are satisfied so fast.

My realisation is that we talk tooÂ much aboutÂ secondary things such as scaling Agile, certification, practices, while most haven't even embedded the two basic pillars properly.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1641</wp:post_id>
  <wp:post_date>2014-06-26 15:46:06</wp:post_date>
  <wp:post_date_gmt>2014-06-26 07:46:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>toyota-secrets-from-mr-yoshio-ishizaka</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
  <category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>657</wp:comment_id>
    <wp:comment_author><![CDATA[Michal]]></wp:comment_author>
    <wp:comment_author_email>pan.svec@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://michalsvec.cz</wp:comment_author_url>
    <wp:comment_author_IP>85.93.126.91</wp:comment_author_IP>
    <wp:comment_date>2014-06-26 16:48:03</wp:comment_date>
    <wp:comment_date_gmt>2014-06-26 08:48:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you! It's always useful to remind these basic principles!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1403772483</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1403772483.64548206329345703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"michalsvec";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1403772483</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-26 08:48:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>667</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>42.2.65.220</wp:comment_author_IP>
    <wp:comment_date>2014-06-27 14:06:59</wp:comment_date>
    <wp:comment_date_gmt>2014-06-27 06:06:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You're welcome!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>657</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1403849220</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1403849221.2437379360198974609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1403849221</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-27 06:06:59</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Continuous Architecting &amp; DevOps</title>
  <link>http://leanarch.eu/2014/06/28/continuous-architecting-devops/</link>
  <pubDate>Sat, 28 Jun 2014 10:23:57 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1707</guid>
  <description/>
  <content:encoded><![CDATA[A lot is improved since Agile Manifesto. Still, one of the major complaints from non-Agile community is architecture and long term quality. The usual statement is that Agile people don't care about architecture.
<blockquote>The priceÂ of short cycledÂ incremental and iterative deliveryÂ of business value is paid with low long term quality and a mess in overall corporate IT landscape.</blockquote>
There is some truth in this, and there is a solution - already applied in corporate world- which does not only remove this argument against Agile methodologies, but delivers a better long term perspective than we ever had before.

<a href="https://vgrgic.files.wordpress.com/2014/06/evolution1.png"><img class="aligncenter wp-image-1721 size-full" src="http://vgrgic.files.wordpress.com/2014/06/evolution1.png" alt="evolution1" width="646" height="47" /></a>

<!--more-->The way IT department looks at software product development - custom-made, COTS, or something in between - is based on total time and cost a software product is delivered in a project, and operations' time and cost. It is usuallyÂ divided in 30% development and 70% operations.

Because of thisÂ division, many IT departments tend to putÂ more effort in optimising and emphasising operations at cost of software development. Also, during operations, a developed product can not actually be used to serve business. Therefore, software development itself is seen as something to be done as little as possible, since it disturbs day-to-day operations.

Of course, the irony of costly operations because of bad product development is noticed, but difficult to solve by itself. These IT departments find costly operations perfectly normal, until business becomes really unsatisfied with IT and them saying "No", or being late so often. This type ofÂ IT departments is rapidly becoming part of the history.

InÂ many of these cases, management wants to finish a project so badly, that project is stopped prematurely at cost of quality. So called operations, full of fixes and other repairs, becomes even more expensive. These repairs are usually not real solutions, but patches full of workarounds, creating a big ball of mud.

<a href="https://vgrgic.files.wordpress.com/2014/06/evolution2.png"><img class="aligncenter size-full wp-image-1723" src="http://vgrgic.files.wordpress.com/2014/06/evolution2.png" alt="evolution2" width="646" height="61" /></a>

In other cases, a similarÂ IT department must continue with a never ending project . Business demands a working product. So, after many years, it is finally finished. Unfortunately, used architecture and requirements are already antiquated, and both business and IT are forced to start all over again, right after delivery in production. Costs are skyrocketing, not much value is produced and everybody is frustrated.

<a href="https://vgrgic.files.wordpress.com/2014/06/evolution3.png"><img class="aligncenter size-full wp-image-1724" src="http://vgrgic.files.wordpress.com/2014/06/evolution3.png" alt="evolution3" width="646" height="61" /></a>

Suddenly, someone mentions Agile and Scrum, which will solve this project management nightmare. Business becomes happier, because the long wait is over, and real features are delivered a bitÂ faster. Depending on how fast delivery in production is, you can actually use them sooner than normal.

But, IT departments, and mainly CIO and architects, are usually not that happy. First, these Agile teams are not really part of IT department, and neglect operations' policies and existing architectural constraints. The primary focus is delivery of business value, at cost of anything vague as enterprise architecture, IT governance, etc. Operations teams are even less satisfied, since they could hardly handle delivery every 6 months. Suddenly, they are asked to do it every 3 weeks. Impossible, they say. There is a constant conflict. Many "Agile teams" accept this "fact of life" and deliver after 6 months or longer, which isn't really Agile anymore. I dare to say that majority ofÂ Agile teams in corporate world isÂ stuck in this or very similar situation, or building something insignificant.

<a href="https://vgrgic.files.wordpress.com/2014/06/evolution4.png"><img class="aligncenter size-full wp-image-1725" src="http://vgrgic.files.wordpress.com/2014/06/evolution4.png" alt="evolution4" width="646" height="51" /></a>

So, IT departmentsÂ make another painful decisionÂ and start experimenting with DevOps teams. This reduces directly felt mess in production, since any problem had to be solved right away. The continuous inspect and adapt cycle, driven by directly occurring issues brings faster delivery and other improvements.

For most IT departments, the switch to DevOps can be huge, since the whole notion of being in stable operations mode compared to disruptive development phase is dissolving. It feels like being in constant chaos. New apps on any possible platform are popping up everywhere, and they cannot keep up. TheyÂ complain:
<blockquote>Our IT landscape is becomingÂ a chaos. We are still constantly replacing old with new with no real thought about long term goals. It is worse than what we used to have.</blockquote>
Quite often, this is true. In fact, yearly IT costs could be larger than what it used to be, while overall IT governance is becoming really difficult. An example is usage of cloud solutions to circumvent normal IT operations with in-house infrastructure. For a big enterprise, using cloud with very little governance is after 2-3 years more expensive than using own existing infrastructure. At this crossroads, which may also happen earlier, IT management has to make a decision:
<ol>
	<li>LimitÂ this whole Agile thing to software development disciplines, and use architects and operations teams to enforce the quality, or</li>
	<li>Embed architecting as a discipline in a similar way as operations</li>
</ol>
Difference between the two options is huge. The companies I've seen choosing the first option, have slightly more satisfied business, but overall improvement in terms of effectiveness, speed and quality, is limited to 10-15 %. In this situation, there is a normal IT department with traditional operations, and there are multiple separate Agile teams working with business and in constant conflict withÂ IT department people about going in production and dealing with architecture.

Fortunately, some companies and teams choose to embed architecting as integral part of DevOps. This means continuous care of overall IT landscape, collaboration between teams and experts, root cause analysis on any problem in software structures and integration between components, refactoring on architecture level, knowledge exchange etc. This continuous architecting becomes part of every iteration and normal software development. Normal inspect and adapt cycle goes much deeper than patchingÂ this current issue in production.

A penalty for this way of working is extra time every team will spend on dealing with these aspects, every iteration at cost of delivering features. From what I've witnessed, most customers don't even notice. And if they do notice, the effect is increased respect for a responsibleÂ way of dealing with our profession.

<img class="aligncenter size-full wp-image-1726" src="http://vgrgic.files.wordpress.com/2014/06/evolution5.png" alt="evolution5" width="646" height="50" />But, the real advantage is the overall quality of IT landscape. The need for large and disruptive technology replacement projects is being removed. Instead, the overall landscape is continuously evolving with many small steps.

These small steps together are much simpler and less costly than bigÂ replacement projects. In fact, this might be the solution to a decades old problem in so many large enterprises: making a bold promise with costly technologies in aÂ multiyearÂ project, failing to deliver this promise, and making new promises in even larger replacement projects.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1707</wp:post_id>
  <wp:post_date>2014-06-28 18:23:57</wp:post_date>
  <wp:post_date_gmt>2014-06-28 10:23:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>continuous-architecting-devops</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10203980581331722]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/4YbG3eZnTeX]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/EDePwAuoVF]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5888597490134966272&type=U&a=vA4x]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>716</wp:comment_id>
    <wp:comment_author><![CDATA[Michal Svec (@svecmichal)]]></wp:comment_author>
    <wp:comment_author_email>svecmichal@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/svecmichal</wp:comment_author_url>
    <wp:comment_author_IP>89.103.166.18</wp:comment_author_IP>
    <wp:comment_date>2014-07-03 01:06:19</wp:comment_date>
    <wp:comment_date_gmt>2014-07-02 17:06:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This approach need responsive development team that includes architecting in their plans. That could be obstacle at the very beginning to learn them that they should/must do it. 

Anyway, thank you for great visualisation and summary. It makes perfect sense.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1404320782</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1404320782.6376368999481201171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/1026923903/woot_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>82606582</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1404320783</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-07-02 17:06:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Teams in the driving seat</title>
  <link>http://leanarch.eu/2014/08/03/teams-in-the-driving-seat/</link>
  <pubDate>Sun, 03 Aug 2014 08:18:02 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1754</guid>
  <description/>
  <content:encoded><![CDATA[Two weeks ago, InfoQ published our <a href="http://www.infoq.com/articles/hamis-four-teams-four-years" target="_blank">article</a> about many experiences with Scrum at Port of Rotterdam. Several people contacted me afterwards with questions andÂ one of them was an IT manager in a large organisation. He made a very short and interesting summary:
<blockquote>So, developers / teams are in the driving seat!</blockquote>
This characterisation is pretty good and can be used as a test for knowing how Agile your teams really are.

<a href="https://vgrgic.files.wordpress.com/2014/08/ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334.jpg"><img class="aligncenter size-full wp-image-1755" src="http://vgrgic.files.wordpress.com/2014/08/ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334.jpg" alt="ford-biometric-seat-wellness-driver-research-detroit-lee-test-540x334" width="540" height="334" /></a>

Very often, "being Agile" is confused with having teams following some set of practices "correctly". That could be XP practices, Scrum practices (3 roles, 4 meetings), or something else.

"Teams in the driving seat" means that in a large organisation, information and artefacts are pulled instead of pushed. In a big enterprise, business has some need, which is usually <strong>pushed</strong> to IT management or product owner, translated by (business) analysts, <strong>pushed</strong> to Agile teams, which deliver a product in increments.

In case of really effectiveÂ Agile teams, the need is much more pulled than pushed. The business still pushes the high level idea, with its very limited definition. After this, the initiative is taken over by teams. This switch mayÂ happen withÂ a statement from the product owner:
<blockquote>My need is ..... Please enlighten me if this is sensible and what more you need from me so you canÂ pick this up.</blockquote>
From this moment on, teams are in the driving seat and request or <strong>pull</strong> everything they need in order to deliver value. They are the ones actually deciding which information needs to be gathered, questions answered, artefacts delivered, process followed, and so on. They may request assistance from domain experts, BA's or architects.

For large organisations with strict processes where first architects and business analysts are involved, direction actually set by IT people instead of business, different levels of management approval is needed, this is a major change in behaviour.

So, next time you hear someone telling you about their Agile teams, ask them who is actually driving the car and who is giving directions.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1754</wp:post_id>
  <wp:post_date>2014-08-03 16:18:02</wp:post_date>
  <wp:post_date_gmt>2014-08-03 08:18:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>teams-in-the-driving-seat</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/MzrLyZykybx]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/AXhWh4NQB2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Can we introduce real Agile mindset in a large traditional organisation?</title>
  <link>http://leanarch.eu/2014/08/18/can-we-introduce-real-agile-mindset-in-a-large-traditional-organisation/</link>
  <pubDate>Mon, 18 Aug 2014 14:29:36 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1759</guid>
  <description/>
  <content:encoded><![CDATA[<p>The one million dollar question right!? A real answer is probably worth a couple of millions. :-)</p><p>As often before, I'm "encouraged"Â by friends to explain better some of my statements. This time byÂ <a href="http://www.redcode.nl" target="_blank">Roy van Rijn</a>. You should also visit his blog.</p><p>Let's assume you are working in a multinational and a traditionally structured insurance company. A business request goes through many departments and it takes ages to get themÂ in production. Business does not trust IT anymore and vice versa. This ends up in âsellling NOâ or postponing behavior of IT people or creation of complex IT projects. CIO is a 40-year old guy who just bought a second hand Porsche 911 as a result of his midlife crisis. In other words, he is in the mood of trying out something completely different. He heard about Agile thingÂ multiple times already. It seems that everyone is âdoing itâ, so he wants it too. Besides, he hears about these amazing stories where speed of delivery and quality haveÂ dramatically increased.</p><p><a href="https://vgrgic.files.wordpress.com/2014/08/twoifc-building-3.jpg"><img class="aligncenter wp-image-1758 size-full" src="https://vgrgic.files.wordpress.com/2014/08/twoifc-building-3.jpg" alt="-twoifc-building-3" width="650" height="365" /></a></p><p>There is only this annoyingÂ smallÂ problem: his organization is a very traditional one, so introducing Scrum seems extremely disruptive or even impossible. As much as he is inspired by stories, changing so drastically seems very unwise. He invites several different âAgileâ consultants / coaches and asks for advise. The one with most attractive approach will get the assignment and start with organisation-wide Agile transformation.</p><p><!--more--></p><p>The first one is a Scrum / Kanban / XP type of a guy and his message is:</p><blockquote><p>Introducing Scrum requires from you to take difficult decisions, change style of management, and partially restructure your IT department. At the end, it will be definitely worthwhile.</p></blockquote><p>TheÂ second guy is an âenterprise world realistâ type of guy. His Agile message is:</p><blockquote><p>Scrum is not suited for an enterprise environment. It does not scale well. Besides, even if it did, you cannot suddenly change everything so it fits pure Agile / Scrum mindset. We have something better. It is called SAFe, and it is an Agile framework for enterprises. It is also a good start in right direction. Eventually, you may end up using just Scrum and be really Agile.</p></blockquote><p>From a CIOâs point of view, the second guy seems much more realistic. The first guy does not seem to understand things like portfolio management, programme management, enterprise architecture, annual budget cycles, and so on.</p><p>Unfortunately, the same CIO forgot to check that none of the creators of Agile Manifesto are in favor of SAFe and few of them are <a href="http://kenschwaber.wordpress.com/2013/08/06/unsafe-at-any-speed/" target="_blank">openly upset</a>Â about it. He would also easily solve his mid-life crisis if he would start caring a bit more about others. To be more specific:Â his business. The business does not care about portfolios, projects, enterprise architecture, budget cycles, and so on. They care about real value, preferable delivered yesterday and not quick-and-dirty. The business cares about real collaboration where trust and understanding by means of frequent feedback is most important. Everything else should be in service of these values.</p><p>SAFe is <a href="http://agile.dzone.com/articles/method-wars-scrum-vs-safe?utm_content=bufferf6c0a&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer" target="_blank">a last-gasp relic from a prehistoric waterfall world</a>Â and just isn't Agile. It is like saying: We have this big mess of methodologies which impedes real collaboration; and in order to solve it we need a new, bit less messy mess to make a step forward. If someone is addicted to smoking, do not advise himÂ a bit less harmful cigarettes. The end result are some improvements and missed chance of really becoming Agile. Since time is money, this is a step backwards. A more serious problem is that once you call yourself SAFe Agile, it sounds weirdÂ when someone suggests removing unnecessary SAFe elements in order to become really Agile. Companies change when they feel pain. Without pain, nothing really changes in complex systems. SAFe acts as slightly less effective painkiller, but still very much bearable.</p><p>CIO with his Porsche and SAFe will claim to be Agile, while business is still complaining. Delivery cycle before SAFe was one year, and with SAFe 6 months. In mean time, competitors with real Agile mindset have lead time ofÂ couple of weeks or even faster and he isÂ still stuck with hisÂ beloved bureaucratic organizational structure. He keeps repeating: "it can't be done", while others have already made a real change.Â </p><p>Instead of ranting further about SAFe, which is already done pretty wel by <a href="http://www.jrothman.com/blog/mpd/2013/08/comparing-teams-is-not-useful-exposing-another-management-myth.html/comment-page-1#comment-353529" target="_blank">others</a>, I will give answer to few major complaints of introducing Scrum as it is in large traditional companies.</p><h2>Is Scrum a big bang approach?</h2><p>It is true that Scrum is a very disruptive new way of working, but this disruption does not happen suddenly. The right approach for introducing Scrum is very context-dependent. In fact, many coaches fall into a trap of trying the same approach from a previous successful introduction. Nevertheless, one thing approaches have in common is a step-by-step approach.Â It takes a lot of time, knowledge and practice to improveÂ from one year delivery to delivery every 2 weeks and very high overall quality.</p><h2>Focus on Agile values from the very first moment</h2><p>Instead of introducing and focussing on some "better" or "Agile" processes and tools, the focus should be completely on collaboration, faster feedback loops, more real business value. Typical first steps in these areas:</p><ul><li>Revisiting a product vision in a facilitated session where developers, real customer and key users are present.</li><li>Letting teams make estimates and give commitment. This also implies teams better involvement in the existing process of requirements gathering.</li></ul><p>These steps are not disruptive at all and give directly some very valuable insights.</p><h2>All Scrum roles and meetings?</h2><p>In some cases, usually smaller projects, it is possible to introduce all Scrum roles and meetings in few days. After this, the team starts with itsÂ first sprint. At the end of theÂ sprint, a potentially shippable product is delivered (no iteration zero).</p><p>In many other cases, meetings are introduced first. For example, team might have a stand-up meeting in front of a board which just contains post-its of everything they are working on currently. This is not yet real Scrum task board, but it does increase transparency. There is no ordered product backlog yet.</p><p>A next step could be to bring more focus on items most valuable to business, at cost of items much further from business.</p><h2>Organizational change --&gt; Cross-functional team(s)</h2><p>This is probably the only really dramatic change, but surprisingly easy one. It takes onlyÂ few hours to <a href="https://www.scrumalliance.org/community/articles/2013/2013-april/how-to-form-teams-in-large-scale-scrum-a-story-of" target="_blank">self-design cross-functional teams</a>. After this, the teams are definitely not behaving yet as real teams and skill set is oftenÂ limited to coding and testing. Nevertheless, this is a necessary and good enough step to start improving collaboration on this level.</p><p>Of course, at this point everything else is very traditional. But, we are moving in the right instead of wrong direction. From the very first moment, we focus on real Agile values instead of yet another process or framework. Even Scrum rules, meetings and roles are secondary.</p><p>The missing skills like architecture and analysis are often introduced in later stage. These are still very much waterfall in the beginning. Before organization starts to deal with these, the painkillers are removed. The problems are becoming visible. It is usually a coach who helps to make these visible, and later a Scrum master.</p><h2>How do we transform traditional IT departments into Agile ones?</h2><p>You don't. The goal of Agile Manifesto is not to create some specific optimal organizational structure, but incrementally and iteratively deliver real business value. For this we need cross-functional teams. Each of these teams should eventually be capable of dealing with all necessary disciplines in some way. Existing IT department isÂ still there, but will naturally and gradually change into more lean department that provides help and operational services to teams and business. Obviously, the power slowly and naturally shifts towards people who deliver business value. The people who stood between business and development teams have gradually a more supportive role. Some are called domain experts.</p><h2>What about portfolio management?</h2><p>Portfolio management is an expensive word for a product backlog on a large scale. One of the major problems is a huge number of running projects. This creates a necessity for complex processes, roles and responsibilities. A much better alternative is set ofÂ practices based on Scrum as described for example inÂ <a href="http://www.craiglarman.com/wiki/index.php?title=Large-Scale_Scrum" target="_blank">Large-Scale Scrum</a>. There are several other approaches. The good ones keep focus on clear goals, doing the most importantÂ things first, work-in-progress limits, and ever faster delivery of value. The bad ones focus on processes, roles and responsibilities.</p><p>Portfolio management is usually improved at much later stage of ScrumÂ introduction.</p><h2>What about IT / project managers, shouldn't they change first?</h2><p>Again, Agile manifesto is not about trying to change people, but iterative and incrementalÂ delivery and happier customers. Surprisingly, by far the most IT managers actually like and embrace Agile mindset and practices. Why? Because their work becomes more modern, thankful and meaningful. Being a directive manager who makesÂ all important decisions is good for the ego, but increasingly impossible job. The reason is ever increasing complexity of business needs and technical possibilities. AÂ hardÂ problem isÂ bad habits, like unfounded trust in so called "proven" out-of-box methodologies and tools. IT managers are very willing to change these habits, as long as someone provides viable alternative and tangible results.</p><h2>Organization-wide transformation or a small project / product?</h2><p>To be honest, I don't really understand what people mean by organisation-wide transformation. It seems to mean some kind of a top-down Agile introduction. For me, as an Agile coach, this should sound as heaven. Unfortunately, major problem in these introductions is too much focus on practices and frameworks. Even if these are Scrum, Lean, XP or Kanban. I like all of them, but for being truly Agile, these are mere means to achieve a real value. Typically, many departments in a company will choose Kanban, simply because they don't really have to change anything substantially.</p><p>One more time, the goal of Agile software development is not to change organization, follow practices, and definitely not implement SAFe, but to improve collaboration by means of feedback cycles, iterative and incremental delivery, so we make our customer and users more happy.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1759</wp:post_id>
  <wp:post_date>2014-08-18 22:29:36</wp:post_date>
  <wp:post_date_gmt>2014-08-18 14:29:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>can-we-introduce-real-agile-mindset-in-a-large-traditional-organisation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2351</wp:comment_id>
    <wp:comment_author><![CDATA[Alana Joseph]]></wp:comment_author>
    <wp:comment_author_email>alanajoseph008@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>117.247.69.58</wp:comment_author_IP>
    <wp:comment_date>2017-06-13 18:46:14</wp:comment_date>
    <wp:comment_date_gmt>2017-06-13 10:46:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great article!!! The article has a detailed information about the scalability of Scrum. I wanted to share this link where I read an interesting article on How to scale Scrum for Enterprise - https://www.scrumstudy.com/blog/how-to-scale-scrum-for-the-enterprise/. I hope it adds to the information you have provided on this concept.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1497358628</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1497358629.193749904632568359375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1497350775.3517210483551025390625;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1497358628</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1497354918.5343329906463623046875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>LeSS framework and architecting</title>
  <link>http://leanarch.eu/2014/11/30/less-framework-and-architecting/</link>
  <pubDate>Sun, 30 Nov 2014 14:13:57 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1767</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://less.works/" target="_blank">LeSS framework</a> is basically Scrum, only scaled-up. It is more an additional <a href="http://less.works/less/rules/index.html" target="_blank">set of rules</a> and a really good explanation on how to apply Scrum in a scaled situationÂ andÂ still remain effective, than a framework on its own. This is especially evident when compared to other scaling frameworks.Â LeSS can be usedÂ to work effectively on a single product with multiple teams, and even thousands of developers.

<a href="http://less.works/"><img class="aligncenter size-full wp-image-1768" src="https://vgrgic.files.wordpress.com/2014/11/less_framework.png" alt="less_framework" width="646" height="290" /></a>A particularly interesting part is the emphasis on <a href="http://less.works/less/technical_excellence/index.html" target="_blank">technical excellence</a>. It is one of the extremely important aspects often neglected in Agile introductions. Among things like clean code, TDD, continuous delivery, the framework also describes the way we should deal with <a href="http://less.works/less/technical_excellence/architecture_design.html">Architecture &amp; Design</a>Â in a very refreshing manner. Instead of creating additional organisational structure, roles and artifacts, Craig and Bas give a number of tips.
<blockquote>Think âgardeningâ over âarchitectingââCreate a culture of living, growing design</blockquote>
This metaphor is intended as replacement for the building metaphor, which is usually used to describe what architecture means. The software systems are grown by incremental development, not built.

The rest is a large set of useful tips and direction of thinking when dealing with large scale Scrum. Here are few of these:
<blockquote>It is so important that every act of agile modeling and programming for the life of the system should be treated as an architectural act.

Standard whiteboards are possible but not usually sufficientâand in fact are often an impediment, because modeling is best done on vast open wall spaces without borders.

Encourage everyone to question and challenge all these assumptions [early architectural choices] and decisions, and to find ways to apply the lean thinking principle of decide as late as possible or defer commitment.

Technical leaders teach during code reviews.

Communities of practice (CoP) are an organizational mechanism to create virtual groups for related concerns.

Internal open source with teachersâfor tools too

Donât use stubs to delay integration</blockquote>
This should be captivating enoughÂ to make you visit <a href="http://less.works" target="_blank">the site</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1767</wp:post_id>
  <wp:post_date>2014-11-30 22:13:57</wp:post_date>
  <wp:post_date_gmt>2014-11-30 14:13:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>less-framework-and-architecting</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="post_tag" nicename="less-framework"><![CDATA[less framework]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <category domain="post_tag" nicename="software-architecture"><![CDATA[software architecture]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10205129981866017]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/hXzo4pk8LCf]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/fZsRT5v9ju]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5944825491654459392&type=U&a=QNK8]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Discover own or use existing practices</title>
  <link>http://leanarch.eu/2015/01/07/discover-own-or-use-existing-practices/</link>
  <pubDate>Wed, 07 Jan 2015 07:04:28 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1773</guid>
  <description/>
  <content:encoded><![CDATA[We, Agile Coaches, preach experiments, inspect and adapt / short feedback cycles, and that earlyÂ failure is good (although we donât really mean âfailure" in this context). In this way of working we discover new ways of delivering software, forever improving our profession.

On other hand, most of the daily challenges we encounter in software development are already solved by some previous team. In fact, these solutions are already documented in many great books and articles. So, why donât we just read these patterns books and simply apply the solutions for any of our problems? Why experiment if somebody has already done it forÂ us? I can assure you that your current problem and experimental solution has already been solved by somebody else in an enough similar context.

<a href="https://vgrgic.files.wordpress.com/2015/01/agile_scrum.png"><img class="aligncenter size-full wp-image-1785" src="https://vgrgic.files.wordpress.com/2015/01/agile_scrum.png" alt="agile_scrum" width="646" height="557" /></a>

This dillema can be summarized by a frustrated developer who said to me once:
<blockquote>Why donât you just tell us what to do, so we can get over this and just do it?!</blockquote>
<!--more-->

But, the point is not to do what I suggest, but learn to think, understand what can be achieved and make self-motivated decision to experiment, try, and see why some practices are good and work, and others are counter-effective. This mindset and behaviour is a difference betweenÂ teamsÂ that follow, and craftsmen / craftswomen. The last groupÂ only follows prescribed practices as part of an experiment, ready to change or ditch it if needed. It is the difference between teachers who claim that we are wasting our time with rediscovery of existing practices, and teachers who show us the real gold in the way we use knowledge, experiment, inspect, and adapt. It is a false dichotomy that one should learnÂ from gurus in past, or keep rediscovering.

Of course, less experienced teams also ditch practices they barely started to follow. These are unfortunately not replaced by something better, but ditched because they are hard to follow or lack mindset for continuous learning and improvement. A real and deep mindset problem this team has, isÂ the actualÂ reason for not following practices.

Expecting a team of âfollowersâ to start experimenting on their own is not feasible. These teams need guidance where practices are more imposed in a friendly manner. This is the way they know how to learn new things. They need to learn,Â feel the practiceÂ and follow instructions. The main difference with usual way of learning something new is type of practices. Therefore, e.g. do not impose tools for software development, unless they really hate their current ones.

Instead, the practices that push them towards "masteringâ level, like sprint goals, definition of done, retrospective meetings and daily scrumÂ will slowly start to empower teamÂ to take ownership of their process. In other words, they will start the process of continuous discovery for achieving what is expected.
<p align="right"><i>Experienced teams need fundamentaly different way
of coaching than less experienced teams.</i></p>
After certain time, team will noticeablyÂ move from being a group of followers that execute as being told, towards self-managing masters of their profession and process. A coach should be careful in correcting them in proper usage of a certain practice or even introducing new practices. It usually suffice to make them aware of a practice, and someone will pick it up. In fact, this kind of team is helped by enouragement to discover itsÂ own practices, maybe based on existing one. E.g. retrospective plans become very unique, only partially based on a known plan, custom-made for the current need. Iâve seen teams doing 2 or 3 standup meetings a day for a better synchronisation, and so on.
<h2>Any practice needs context</h2>
Iâm an Agile Coach and do my best to bring true value to my customers. It is the value that I wish I had myself in the beginning of my career and I still ask for occasionally. Learning practices from books is great, applying those effectively in real world is a totally different level.

There a two major problems with using existing practices directly:
<ul>
	<li>If a team is more a group of followers than masters, they are likely to apply it wrongly. I've never seen an Agile team become really good without someone's help who at least behaves as a coach and has experience and knowledge. Intent behind a practice is often overlooked. E.g. status reporting daily scrumÂ is a very common problem. Teams are often unable to distinguish between âreportingâ and âsynchronisationâ. The second one is more a two-way conversation between team members where you actually listen to each other and care. TDD is a famous one. Wether you are big believer or complete disbeliever of TDD, majority of people write crappy software. TDD does help reducing number of bugs and write better code, as long as you really learn the way of thinking behind TDD, and not stuck with only high code coverage.</li>
	<li>There is no such thing as a best practice. âThe proven best practicesâ is the reason we failed so miserably with âstate-of-the-artâ processes and methodologies. Context defines if a practice is great or useless, and in which way it should be applied. Each context has also always space for discovering completely new practices suited better for the situation than any existing practice. It is the usage of this space that makes good teams become great.</li>
</ul>
Despite the potential waste of time, it is for experienced teams better to spend time on discovering own practices, at cost of trying to find and apply existing ones. In other words, from systems thinking perspective, effect of discovering own practice has moreÂ positiveÂ impact on self-managing behaviour of a team, compared to negative impact of wasting time.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1773</wp:post_id>
  <wp:post_date>2015-01-07 15:04:28</wp:post_date>
  <wp:post_date_gmt>2015-01-07 07:04:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>discover-own-or-use-existing-practices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="coaching"><![CDATA[coaching]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_facebook_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://facebook.com/10205451449222500]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:1138509452;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/cCvwCt8Q6TN]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/YMCdS7rDXg]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=5958488147984658432&type=U&a=KsND]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Velocity increase is evil</title>
  <link>http://leanarch.eu/2015/02/17/velocity-increase-is-evil/</link>
  <pubDate>Tue, 17 Feb 2015 09:58:48 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1788</guid>
  <description/>
  <content:encoded><![CDATA[The practice of story points in combination with velocity and burn down charts can be a very powerful tool to make predictions for planning purposes. If teamsÂ know their velocity - based on actual experience in the first sprints, and have estimated story points for all requestedÂ items, teamÂ can make quite useful predictions about amount of time and therefore budget. This simple practice actually works in reality as described. It can be used for release planning and budgeting. The main difference with traditional way of planning is not relative estimation aspect, but continuous nature. Even story points practice that uses baseline ofÂ previously gathered experience will give imprecise calculation of work that still need to be clarified, and we therefore know so little about. It is important to regularly reestimate items on the product backlog, foremost for better understanding, andÂ also improved predictions and better planning.

In fact,Â you could also measure team's performance with this practice, as so often explained by Jeff Sutherland. "A good team should have velocity increase of about 10% every sprint." If teamâs velocity increases, it means that team has improved productivity, right!?

Measuring productivity based on velocity is illogical at best. It would be interesting to notice how one makes release planning and budgeting based on 10% velocity increase every sprint.

Using velocity to measure teamâs productivity is wrong. Actually, extremely wrong. From all possible reasons for velocity increase, actual productivity increase is least likely. Let me give you the actual reasons for velocity increase:

<!--more-->
<h2>Quantum measurement problem</h2>
You know what a team usually does when management uses velocity to measure productivity? What would you do?â¦.Yes, "story points inflationâ. You decrease the value of a point very gradually, not even really consciously. Every time you need to make a choice between 8 and 13 points with poker planning card, and they both seem equally valid, which one you will usually choose, ha?? Bam! Your productivity has increased. Everyone is happy, since nobody really notices this, except customer who does not really see any difference in the outcome. The real problem is that any predictions in budgets and release planning have just become less useful.

So, the very act of productivity measurement has influence on estimates providedÂ by each team member.
<h2>Sustainable pace</h2>
Sustainable pace in Scrum is a very important aspect.Â It means that teamâs capacity to deliver certain amount of work should stabilise and become more and more predictable. Making something predictable is very difficult withÂ 10% velocity increase. There are two common patterns when teams donât have sustainable pace.

The first one is chaotic and tends to fluctuate. A team would deliver 30 points one sprint, be praised for the extraordinary performance, only to delivery 15 in the next one. Third one might be almost 30 again, and so on. The reasons for this are usually not veryÂ serious:

<a href="https://vgrgic.files.wordpress.com/2015/02/scannable-document-2.jpg"><img class="aligncenter wp-image-1791 size-medium" src="https://vgrgic.files.wordpress.com/2015/02/scannable-document-2.jpg?w=300" alt="Scannable Document 2" width="300" height="212" /></a>
<ul>
	<li>Previously unknown technological challenges exposed</li>
	<li>RushedÂ product backlog grooming and sprint planning</li>
	<li>Team members are not yet t-shaped or generalising specialists. In other words, not capable yet to understand all aspectsÂ and required effort to deliver something.</li>
</ul>
All of these reasons are usually exposed in retrospective meetings, or gradually disappear with practice and better collaboration.

The second one is that velocity is relatively low in the first few sprints because teams need to get used to each other and figure out all kinds of things (architecture, how Scrum works, continuous testing and integrationÂ stuff, etc). After few sprints, it is happiness time. Velocity starts increasing with jumps of 10 or more per cent every sprint. Also the real value / number of features delivered per sprint is increasing. TeamsÂ seem to improve every sprint, with big steps. Amazing! Scrum is awesome! Then, first signs of a disaster start to show up. Velocity is not increasing with 10% anymore, then gradually stops increasing and starts to slowly decrease. The reason: Well, our architectureÂ has become large and complex. It is more difficult to deliver new features today with such a big system. Everyone will usually think: Ok, I guess that is logical. No real problem here. Except that we cannot really say anymore if team is more or less productive. ManagementÂ discovers that whole productivity measurement with velocity is pointless, and quietly fades away.

<a href="https://vgrgic.files.wordpress.com/2015/02/scannable-document.jpg"><img class="aligncenter wp-image-1792 size-medium" src="https://vgrgic.files.wordpress.com/2015/02/scannable-document.jpg?w=300" alt="Scannable Document" width="300" height="258" /></a>

Unfortunately, this realisation has come way too late. The real reasonÂ for continuously increased velocity are shortcuts in quality andÂ architecture. Team has created a monster of a thing, under (in)direct of pressure of increasing productivity. The outcome: spending several sprints on fixing problems without producing any or very little value; and sometimes rewriting the whole thing. Last one could be a complete failure if your budget is gone.
<h2>Healthy velocity is a stable one</h2>
This is relatively stable velocity. It should not fluctuate much and should be in line with sustainable pace.

<a href="https://vgrgic.files.wordpress.com/2015/02/img_4192.jpg"><img class="aligncenter wp-image-1793 size-medium" src="https://vgrgic.files.wordpress.com/2015/02/img_4192.jpg?w=300" alt="IMG_4192" width="300" height="300" /></a>

In the first sprints, teams do need to get used to each other, learn practices, introduce continuous delivery tooling. This mayÂ have certain impact on velocity, but healthy situation is the one where these activities are spread over multiple sprints or introduced gradually. Therefore, impact is rather limited. On other hand, there may be a limited amount of existing code (no legacy) in these first sprints, which enables team to deliver with little effort. In other words, low complexity may cancel getting-used-to-everything negative effect compared to later sprints.

5Â sprints later: team knows how to effectively use the practices and becomes more efficient. At that point, aÂ negative effect might be cumbersome product backlog refinement or lack of experience with TDD, refactoring, BDD, etc.

20 and more sprints later: team is in a real flow. Things have become predictable, meetings are efficient, but overall complexity of the solutionÂ has risen. Once again, these things affect velocity and tend to cancel each other out.
<div id="plate" class="image-size mceNonEditable" style="display:none;-webkit-transform:translateZ(0px);top:2559.53125px;left:202.5px;"></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1788</wp:post_id>
  <wp:post_date>2015-02-17 17:58:48</wp:post_date>
  <wp:post_date_gmt>2015-02-17 09:58:48</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>velocity-increase-is-evil</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/h2qGzsoTuK7]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to make people do pair programming?</title>
  <link>http://leanarch.eu/2015/02/20/how-to-make-people-do-pair-programming/</link>
  <pubDate>Fri, 20 Feb 2015 14:25:57 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1795</guid>
  <description/>
  <content:encoded><![CDATA[During one of the open space sessions at CITCON Asia in Hong Kong 2015, a question was mentioned by several people:
<blockquote>How do you convince people and make sure they start doing pair programming?</blockquote>
<a href="https://vgrgic.files.wordpress.com/2015/02/pairon.jpg"><img class="aligncenter size-full wp-image-1797" src="https://vgrgic.files.wordpress.com/2015/02/pairon.jpg" alt="pairon" width="460" height="264" /></a>

A short answer would be: <strong>You donât.</strong>

Almost allÂ developers tend to dislike idea of pair programming if they havenât tried it before. It sounds quite weird, inefficient, and scary. Besides, any argument for starting to do pair programming by itself is weak at best.
<ul>
	<li>"Two people deliver work of three people if they do pair programmingâ - <em>Yeah, right. A very bold statement. How did you measure that?</em></li>
	<li>âYou will deliver higher quality codeâ - <em>That could be, but we already do code review afterwards.</em></li>
	<li>âYou will learn faster from each otherâ - <em>Yes, others will learn from me, and slow me down. Iâm faster than others, and donât want to waste my time.</em></li>
</ul>
There are probably manyÂ more of these reasons not to try pair programming. They will usually end up in a really awful feeling where developer feels being forced to start doing pair programming, as if he does not know how to perform his job.

A much more successful approach is where you donât try to change peopleâs behaviour, but the system surrounding teams:
<h2>Reduce multitasking</h2>
Inexperienced teams usually work on just as many stories as number of team members. Number of tasks is usually even higher. The most common effect is not being able to deliver much or anything according to Definition of Done within one sprint. Team will reflect on this and start reducing multitasking. This will automaticallyÂ encourage people to start helping each other and finishing stuff before starting to work on something new. Helping each other often means sitting together behind a machine and making sure things are finished faster and better.
<h2>Stop fixing bugs, and start preventing them</h2>
CreateÂ awareness in team how wasteful it is to fix bugs or have dirty code. Those bugs should not be there in the first place. "Letâs talk a bit about our bugs. What kind of bugs do we have? Letâs do root cause analysis on them.â This process often leads to lack of knowledge and practice for less experienced guys. Most experienced guys are the ones who are most annoyed by dirty code and bugs. At that point they are more likely to see the advantage of sitting together with less experienced guys.
<h2>Stop measuring individually</h2>
Any individual KPI and objective is killing pair programming from the start. Instead, the outcome produced by the whole team should have the focus. By focusing on the outcome, potentially releasable increment, team will naturally realise how much they depend on each other and the need to work together more intensively will emerge.
<h2>Value continuous learning</h2>
People love to learn new things. In fact, most developers will remain in a team for a long time if they are continuously able to learnÂ new things they choose themselves. That could be a new technology, or simply how to talk or explain things to others in an effective manner.

At the end, pair programming is just a mean to an end. Trying to sell a practice because you know it is good, is never a good idea. No developer really loves pair programming practice itself, they love working together, learning new stuff, writing great code very fast, and being appreciated for help they give to others. One way to achieve this, is by doing pair programming among many other possibilities. By emphasising the real things, you might discover that pair programming might not be a good idea in your situation.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1795</wp:post_id>
  <wp:post_date>2015-02-20 22:25:57</wp:post_date>
  <wp:post_date_gmt>2015-02-20 14:25:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-make-people-do-pair-programming</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/Rv9mC3uAeZo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My impression of LeSS practitioner course</title>
  <link>http://leanarch.eu/2015/03/07/my-impression-of-less-practitioner-course/</link>
  <pubDate>Sat, 07 Mar 2015 13:37:52 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1800</guid>
  <description/>
  <content:encoded><![CDATA[Last week, I participated 3-day <a href="https://less.works/courses/find-a-course.html" target="_blank">LeSS practitioner course</a> by Bas Vodde.
<h2>Why LeSS for me?</h2>
Agile software development, XP and Scrum gave me a number of fundamental answers in how to improve my profession. Scrum is a simple and truly great framework for delivering working software. On top of Scrum, in the past years Iâve learned many practices, which fit really well with Scrum and help me solve many common challenges.

Nevertheless, throughout all these years, some fundamental questions remained:Â <em>How does Scrum fit in large companies with strong hierarchical structures, and <a href="http://en.wikipedia.org/wiki/Theory_X_and_Theory_Y" target="_blank">theory X</a> way of thinking? Is the ultimate goal to Scrumise the whole company and everything will be great? Is this achievable, and does it make any sense?</em>

I have seen some really nice examples where Scrum is applied throughout whole organisation in a certain way, like Bol.com in The Netherlands. The reason why it worked in this, and other organisations have not much to do with Scrum, but already existing context and culture. This organisation embraced the fundamental Agile values and principles, and throughout continuous improvement theyâve naturally managed to be very effective with Scrum.

<a href="https://less.works/less/principles/index.html" target="_blank"><img class="aligncenter size-full wp-image-1802" src="https://vgrgic.files.wordpress.com/2015/03/principles.png" alt="principles" width="646" height="460" /></a><!--more-->

I have myself experiencedÂ LeSS approach in a <a href="http://infoq.com/articles/hamis-four-teams-four-years" target="_blank">scaled product development within a traditional organisation</a>. LeSS gives me a frame of reference for what I've already experienced.

By far the most other organisations still have <a href="http://en.wikipedia.org/wiki/Scientific_management" target="_blank">Taylorism</a> culture, large structures, functional silos andÂ manyÂ management layers for delivering products and services. The way of thinking and many practices, such as individual objectives and performance reviews conflict withÂ Agile principles, such as self-managing teams.

These organisations often say they also <em>apply the Agile methodology</em>, whatever that means. In reality, one or multipleÂ teams may have applied Scrum practices in software delivery (a bit of analysis, programming and testing). Obviously, software delivery is aÂ small part of everything that needs to be done in value creation. We have to include other disciplines also. Besides, many products are delivered by multiple teams. In some cases, hundreds or even thousands of developers could be working on a single product.

Scaling is a hot topic today. Majority of Agile community hates this topic. Me too. Nevertheless, the problem is not the topic, but approaches that came along with theÂ topic. As already mentioned, the fact is that many products require many teams to work on, simply because of complexity of components, hardware, software, different configurations, etc. As already mentioned, delivering working software is not really same as getting value out of products. Yes, many of these products are needlesslyÂ complex or could also be delivered and managed by one team of max 9 people. But try to imagine envisioning, making and operating a Mars rover with only 9 people.

So, how do you work with multiple teams on a single product and how do you improve a product / service delivery in large organisations thatÂ already have many teams?
<h2>We already have several scaling frameworks, why another one?</h2>
Unfortunately, frameworks likeÂ SAFeÂ® and DAD, have moved away from certain Agile principlesÂ in order to compromise with existing reality of large organisations. It is true, one cannot just simply introduceÂ Agile principles and values in large organisations, unless structure and culture is also fundamentally changed. Since we know how difficult this is, these frameworks have adjusted Scrum and many practices in order to make a fit with existing structures and culture.

Is this still Agile software development? No, it is not, but it sells really good and they might bring some improvement. TheirÂ message is rather attractive: <em>You can also do Agile, while retaining your existing structure and culture.</em>

At the end, it is the customer and competition whoÂ decides if your Agile flavour is an effective one.Â At the end, anything we call Agile is just a mean to an end right!? How fastÂ do you actually deliver constantly changing requests? How good is the overall quality? How much value do you actually deliver compared to cost of ownership? And do you continuously improve or only getting bigger and slower? How engaged and happy are your employees?

There is a reason why extremely successful companies donât embrace these frameworks. It does not make any sense to them once you discover how much value you actually deliver. I like Agile way of working because it transforms the way we work, while delivering tremendous results, and not merely a slightly fasterÂ delivery.
<h2>So, LeSS and LeSS huge frameworks do not compromise Agile values?</h2>
No, they do not. Just like Scrum, LeSS helps you implement Agile principles and values. The only essential difference with Scrum are aÂ <a href="https://less.works/less/rules/index.html" target="_blank">few minimal additions</a> to make it work in multiple teams product development. It is a single-team Scrum scaled up without making compromises.

What Iâve learned in the course and from books, is that LeSS is also an organisation design framework. LeSS adoption means an actual change in organisational structure and culture. Iâve learned a large number of tools to help in this transition. The promise of LeSS is that you can truly introduce Agile principles and values in large organisations by changing the fundamental principles and structure an organisation is based on.

Therefore, donât expect an adoption of few months or a year and you are done. Depending on your context, the change could take many years. Fortunately, you donât have to wait this long to see results.
<h2>Why would anyone want to go through this change?</h2>
A simple answer could be <strong>survival</strong>. Nowadays, whole industries are taken over by companies with a number of empowered and fully <strong>self-managed teams</strong> that deliver ingenuous solutions in weeks and also a great service.

A much better reason for such change is <strong>people</strong>Â or, as we so lovingly call them,Â <em>resources</em>. Companies should be people who collaborate for a <strong>meaningful purpose</strong>. And not merely a group of human resources who exchange effort (in reality it is more theirÂ time) for salary and hopefully a bonus, without really knowing or believing inÂ the purpose.
<h2>Some highlights from course</h2>
The following listÂ isÂ my interpretations of messages I found the most interesting:
<ul>
	<li>Taylorism: It is going to take another 50-100 years to get rid of it.</li>
	<li>Everyone wants improvement, also traditional management.</li>
	<li>Donât scale Scrum teams in Scrum of Scrums or something, but scale development teams into scaled up Scrum.</li>
	<li>Agile development is about shortest possible feedback loop. Functional teams have much longer feedback loops compared to cross-functional teams.</li>
	<li>Continuous improvement happens with 3 ingredients: fast feedback, properÂ listening to feedback, andÂ practice makes perfect (have stable teams working on a product).</li>
	<li>Donât isolate development teams from outside (customer, users, stakeholders) for the sake of more <em>productivity</em>. They will be less productive.</li>
	<li>In a LeSS adoption, you must deal with existing organisational structure.</li>
	<li>Portfolio and program management are not needed when LeSS is adopted.</li>
	<li>Watch the ball, not the players. Watch end results, not individual performance.</li>
	<li>Software development is aÂ <strong>knowledge creation process</strong>, not a code output process.</li>
	<li>Traditional organisations have many Business Analysts, probably because teams lack domain knowledge.</li>
	<li>Encourage domain specialisation instead of technical specialisation of teams.</li>
	<li>Let go of idea that somebody is actually in control in large organisations, and that things happen for a reason.</li>
	<li>Dependencies are much easier to solve if they happen at the same time.</li>
	<li><strong>Definition of Done</strong> is a very powerful tool to identify how far feature teams can go, and what can be improved.</li>
	<li>If your Product Owner is not really a Product Owner, you might want to call him aÂ <strong>Temporary Fake Product Owner</strong>. :-)</li>
	<li>Having a Product Owner who is 100% involved with teams, does not make any sense. In a scaled situation, teams could do product backlog clarification without Product Ownerâs involvement. She will still do prioritisation.</li>
	<li>The main challenge in organisational redesign is the change from <a href="http://www.businessballs.com/mcgregor.htm" target="_blank">Theory X to Theory Y</a> type of practices in organisations.</li>
	<li>Metrics: it is much more important to know <strong>how to use</strong> metrics, <strong>who</strong>Â sets them, and <strong>why</strong> we use them, instead of defining theÂ <em>proper</em>Â metrics.</li>
	<li>Find out if a manager holds on to his role or to <strong>his skills</strong>. The second one is more likely to embrace LeSS.</li>
	<li>Encourage <strong>communities of practice</strong> across multiple teams, strong collaboration and direct communication between teams. E.g. architects couldÂ facilitate architecture community of practice, but decision making is still done by teams.</li>
	<li>Scaled or not, the best tools are still post-its and whiteboards.</li>
</ul>
I loved the course given by Bas Vodde. It was definitely worth travelling to Singapore.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1800</wp:post_id>
  <wp:post_date>2015-03-07 21:37:52</wp:post_date>
  <wp:post_date_gmt>2015-03-07 13:37:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-impression-of-less-practitioner-course</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="architecture"><![CDATA[architecture]]></category>
  <category domain="category" nicename="less-framework-2"><![CDATA[LeSS framework]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/111445102811033280399/posts/jAxy2cSTm8T]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"111445102811033280399";b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6912eedd86fd155c3a720e34a3e9dbce</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1833</wp:comment_id>
    <wp:comment_author><![CDATA[frederik]]></wp:comment_author>
    <wp:comment_author_email>frederik.vannieuwenhuyse@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>194.7.114.2</wp:comment_author_IP>
    <wp:comment_date>2015-05-22 16:42:12</wp:comment_date>
    <wp:comment_date_gmt>2015-05-22 08:42:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="https://technology1unplugged.wordpress.com/2015/05/22/my-impression-of-less-practitioner-course/" rel="nofollow">Technology One Unplugged.</a> and commented: 
Large Scale Scrum (LeSS) is for me an honest framework which embraces Scrum (for 1 team). LeSS does not introduce any additional layers of governance, it does not compromise to fit with existing traditional organization structures, it does not compromise on the delivery of value. Indeed, LeSS is much more about organisational (re)design than about introducing Scrum. Before âscaling upâ to multiple teams, an organization must be able to adopt Scrum on the team level, and proof for themselves they can organise performing teams. LeSS embraces the principles of agile and lean thinking as these are meant to be.

My impressions of LeSS course:
https://technology1unplugged.wordpress.com/2015/03/27/large-scale-scrum-less/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>27419655</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1432284133</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1432284133</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1432284133.4771530628204345703125;s:5:"event";s:9:"check-ham";s:4:"user";s:20:"technology1unplugged";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Descaling organisation with LeSS</title>
  <link>http://leanarch.eu/2015/05/09/descaling-organisation-with-less-2/</link>
  <pubDate>Sat, 09 May 2015 03:31:38 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1814</guid>
  <description/>
  <content:encoded><![CDATA[Scrum is a successful and widespread framework, but at some point almost everyone started to talk about scaling. Large organizations want to spread this miracle and Agilize everyone. Many consider agilizing large organisations as bad, and some say it is inevitable. In any case, opinions are often negative about "big Agile".

But what <em>exactly is being scaled</em> when we talk about scaling in Scrum or Agile software development? It seems that most imagine <em>growing</em> something larger, usually the number of people, or painting everyone in fake Scrum colours. âI see task boards, task boards everywhere!â. :-)

Naturally, this triggers negative reactions from the Agile community.

<blockquote>
  Why would you want to deliver and support a product with multiple teams, when one team is so much more effective?
</blockquote>

The first purpose of LeSS (Large-Scale Scrum) is actually <strong>descaling</strong> through organizational change. Descaling the number of roles, organizational structures, dependencies, architectural complexity, managementÂ positions, sites, and number of people. LeSS is not about scaling one team into multiple teams. <strong>LeSS is about scaling up Scrum</strong> itself in order to achieve <strong>organizational descaling</strong>. Just to be clear, looking for a scaling framework to âbuy and installâ and to organize lots of people for the sake of âpainting agile or Scrum onto our big groupâ, is just plain wrong.<!--more-->

A major purpose of LeSS is to <strong>expose the pain</strong> of being large, wasteful, and slow.

<h2>Fake Descaling with Fake Small âProductsâ</h2>

Hereâs a common thought that people have when they learn and like the idea of descaling, rather than âbig Agileâ:

<blockquote>
  Why should an organization scale up Scrum? Why not just have many independent Scrum teams, each dealing with their own product and own users?
</blockquote>

This leads to a very important question: What should be the definition (or scope) of a product?

<a href="https://vgrgic.files.wordpress.com/2015/05/no-this-is-a-product.png"><img class="aligncenter wp-image-1818 size-full" src="https://vgrgic.files.wordpress.com/2015/05/no-this-is-a-product.png" alt="no this is a product" width="2266" height="1280" /></a>

<a href="https://less.works/profiles/basvodde">Bas Vodde</a>, the co-creator of LeSS (Large-Scale Scrum), gave this nice explanation:

<blockquote>
  Having multiple âfakeâ small products that donât deliver any real value is not better. Neither is losing the overview due to many small products.
  
  Contrast these situations:
  
  <strong>Small independent products</strong>
  
  We take the large product and split it into smaller âindependentâ products, with a few dependencies. This is nice as smaller is better. However, now in the organization weâll need to figure out which of the products the teams need to work on. So therefore, weâll need to add âportfolio managementâ so that we ensure the teams work on the high value products.
  
  Not only that, we have now dependencies between the products. These are outside the products and hence it is probably more difficult to see when they happen and harder to coordinate by the teams themselves. Thus, weâll need to add some project/program management to ensure the features in different products are synchronized.
  
  Where do we put all that. Probably a PMO which weâll need to create for that.
  
  <strong>Large product definition</strong>
  
  Now, the alternative. We define product broader. This means weâll more quickly end up with LeSS Huge... but... we donât need any additional portfolio management nor any project/program management to deal with all the organizational issues and different resource allocations :)
  
  Though, we have a large-scale productâ¦ all these things are managed within the LeSS framework and â¦ thus actually much less complex. Less roles, less management and a better overview.
  
  Hence, we prefer a broader product definition, unless the products are <strong>truly</strong> independent products
</blockquote>

A similar comment could be said about users and customer, since they are very much connected to definition of a product. A team dealing with a fake small âproductâ is likely to have fake users. âOur user is another product, and our customer is an IT application managerâ. Or even worse, âOur user is the QuotingEngine,â where the so-called âproductsâ are just architectural components, and other components are fake users. You donât make any money from another internal component!

<h2>How LeSS Helps in Descaling</h2>

Just like Scrum, LeSS removes your organizational band-aids that apparently solved the problems, but actually masked them and didnât address the root causes. âWe have a quality problem, letâs create a quality manager, and then the pain is goneâ¦ for now.â Scrum is a band-aid removal system on a team scale, while LeSS is a band-aid removal system on a multi-team and organizational scale.
With LeSS, transformation happens along two dimensions:

<h3>1. Do the right thing and always the most important thing</h3>

Create organizational flexibility to always work on the most important goals from the overall customer-perspective product level, based on recognizing a world of learning and change. LeSS replaces big-batch and rigid portfolio management practices and decisions, where investments are matched to objectives, often for a year or even longer. The traditional project and portfolio management model also implies a fixed allocation of teams to specific programmes and projects, also for a long time.

In contrast, an example of the LeSS solution is one Product Backlog and one Product Owner for a whole product. Based on feedback and learning, a Product Owner can change direction and assign new goals with increased flexibility at a low cost of change, since teams are not fixed within boundaries of projects and programmes.

<h3>2. Do things right</h3>

Each cross-functional feature team grows capability and responsibility for taking care of the whole value stream. Ideally, all teams co-create and maintain value together with the end-customer. The Definition of Done is far-stretching and all teams deliver each Sprint one single potentially shippable product increment for all involved teams. The foundation for this is made up of technical-excellence practices such as continuous integration, ATDD, TDD, etc.

<h2>Descaling Roles, Structures, and Workforce</h2>

During a LeSS adoption, along both dimensions of âdo the right thing and always the most important thingâ and âdo things rightâ, it becomes painfully evident that parts of the original organizational structure are not needed. For a single product, a LeSS organization does not need portfolio, programme, or project management. It does not need a separate analysis, architecture, UX, or QA/test group. It probably does not need a separate operations group.

In LeSS, the basic organizational building block is the cross-functional and cross-component feature team. Most people will simply become regular members of feature teams, delivering running, tested features and a shippable product every Sprint. Itâs very simple. There are no fancy titles, no release trains, no layers of management. But some people will also leave because they do not fit in this new value-driven organizational structure that emphasizes hands-on making solutions over status and âmanagingâ.

We often have a gut feeling that thereâs untapped potential: what if our organisation can create value with fewer teams, or even with a single team? If that possibility is present, how would we know what to look for? LeSS gives us the means to see this potential, and act upon it.

A goal of LeSS is to create a learning organization with a high level of collaboration and knowledge sharing through communities and other means of coordination. This is important to prevent duplication and the potential architectural chaos of having many empowered but potentially disconnected teams. But a learning organization doesnât happen overnight. An organization that grows this culture, driven by the LeSS framework, will take time.

In short, LeSS is a scaled up Scrum framework, which enables descaling of the organization.

Also posted onÂ <a href="https://less.works/blog/2015/05/08/less-scaling-descaling-organizations-with-less.html" target="_blank">less.works blog</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1814</wp:post_id>
  <wp:post_date>2015-05-09 11:31:38</wp:post_date>
  <wp:post_date_gmt>2015-05-09 03:31:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>descaling-organisation-with-less-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="less-framework-2"><![CDATA[LeSS framework]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1834</wp:comment_id>
    <wp:comment_author><![CDATA[frederik]]></wp:comment_author>
    <wp:comment_author_email>frederik.vannieuwenhuyse@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>194.7.114.2</wp:comment_author_IP>
    <wp:comment_date>2015-05-22 17:29:34</wp:comment_date>
    <wp:comment_date_gmt>2015-05-22 09:29:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="https://technology1unplugged.wordpress.com/2015/05/22/descaling-organisation-with-less/" rel="nofollow">Technology One Unplugged.</a> and commented: 
As you explain, the framework is simple. Likewise Scrum, itâs painfully simple. As Ken Schwaber once said (I believe): âScrum is like your mother-in-law, it points out all your faults.â Each organisation has an enormous untapped potential to deliver more value, more rapidly, more frequently. But reality is different, small and large organizations have and maintain (anxiously) the traditional organizational model. How difficult is it to transform to a networked organization, stimulating self-organisation and a learning culture? From a scale from 1 to 10, Iâd say 10. This kind of organisation design only works if management supports it, management understands and shows the example and the executive support is long lasting. As Larman puts it: âOrganisational culture follows structureâ Is this new? No. Can it be done? Yes. Cf. Frederic Lalouxâs book âReinventing organisationsâ. Cf. Toyotaâs lean culture. Unfortunately (again) for large organisation (Iâve been working in bank); Iâm rather pessimistic: it will takes years, may be decades before this kind of organisational design &amp; culture change happens. So, the essence of a âlarge productâ development is its simplicity. Are other organisations fooling themselves? Those which are adopting âlarge scaleâ organizational frameworks? Will they reach the benefits? They will get some benefits yes, but then again: itâs not difficult to gain some improvements in an organisation working for years according to âa previous-century industrial paradigmâ (as in manufacturing). But I guess theyâll never reach true âbusiness agilityâ. I wish the market conditions would be much tougher: those not adapting are extinguished: the sooner the better.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>27419655</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1432286975</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1432286975.85838603973388671875;s:5:"event";s:9:"check-ham";s:4:"user";s:20:"technology1unplugged";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1432295903</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1432295886.1157090663909912109375;s:5:"event";s:17:"status-unapproved";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1432295903.1455500125885009765625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1893</wp:comment_id>
    <wp:comment_author><![CDATA[Descaling Organizations with LeSS - Toocan]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://toocan.be/descaling-organizations-with-less/</wp:comment_author_url>
    <wp:comment_author_IP>107.6.167.50</wp:comment_author_IP>
    <wp:comment_date>2015-07-12 20:55:49</wp:comment_date>
    <wp:comment_date_gmt>2015-07-12 12:55:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Also posted on leanarch.eu blog [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1436705749</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1436705749.64299106597900390625;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Scrum, dogmas, and actual results</title>
  <link>http://leanarch.eu/2015/06/04/scrum-dogmas-and-actual-results/</link>
  <pubDate>Thu, 04 Jun 2015 07:47:54 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1825</guid>
  <description/>
  <content:encoded><![CDATA[The following statements are often mentioned:

<ul>
    <li>Scrum-but is bad. You should stick to Scrum rules, otherwise you are doing it wrong.</li>
    <li>Scrum coaches are often dogmatic.</li>
    <li>There is no right or wrong way to do Scrum. It is all about inspect and adapt, even for Scrum rules.</li>
    <li>My Scrum-but way is working very well.</li>
</ul>

I could continue, specially when talking about certain details. Such as, does it make sense to have 5 Scrum teams with 5 Product Owners delivering a single product?<!--more-->

Iâm usually placed in the camp of religious-like zealotry. That is interesting, since I donât believe in any religion. I do believe in proper arguments and evidence-based information. Therefore, above statements and accompanying explanation donât provide any meaningful information.

Instead, it would be much more interesting to properly explain why certain aspects in Scrum do not work in certain contexts. We could all learn from that. I would be the first to embrace such improvement or alternative to Scrum. In such case, I still reserve my right to open-mindedly judge whether argumentation and evidence makes sense. The usual questions I would ask:

<ul>
    <li>What is the actual result of your Scrum-but? Are you continuously improving, delivering really done high quality increment with useful features in few weeks or shorter to real users? What is the lead time (time from a request to usage by a user)?</li>
    <li>Are you sure that the reason why Scrum is not working at your place has nothing to do with organisational dysfunctions?</li>
    <li>If your Scrum-but is working very well, please define âworking very wellâ.</li>
</ul>

These questions are NOT meant to defend Scrum, but to defend result of doing Scrum properly. In fact, this could be applied to other frameworks too, and therefore judge their value. Unfortunately, in all of the discussions and posts I have seen so far, either explanation or the actual results are lacking. It is interesting to observe that discussion is either stopped or sidetracked whenever actual results are questioned. A typical example is teams and coaches claiming to do Kanban with a lot of fancy columns on their Kanban boards:

<blockquote>How long is your maximum lead time? A: We donât know exactly, but it is about 6 months and slowly improving.

How long is going to take before you get to 4 weeks or less? A: No idea.</blockquote>

I have nothing against Kanban, but I have everything against taking the easy road for the sake of calling yourself Agile, and somehow neglecting actual results in the process. I do have something against some other frameworks and methodologies which lack evidence of being useful and still use words as âprovenâ as if it actually means something.

Another pattern in these discussions is the argument of <em>being practical</em>. It is often said: âOur organisation is not yet capable of following Scrum in a proper wayâ. I think that probably no traditional organisation was judged as being capable of doing Scrum 15 years ago. Nevertheless, today many of them bare the fruits of this seemingly impossible goal. Despite this fact, today others still compromise a lot with minor or no actual improvement as a result.

One can only be named dogmatic if one is not open to possible improvements. Embracing Scrum framework in most situations, simply because it provides tremendous improvements relatively fast, has nothing to do with being dogmatic. Also, sticking to rules has to do with evidence-based strong correlation between lack of actual results and compromising with already simple rules.

For me, âour Agile implementation is working just as fineâ is a meaningless statement. Is your organisation achieving something great (and what is it?) or just being mediocre as always?

So, Iâm fine with being called dogmatic, religious-zealot or sometimes completely opposite of both, but letâs get over that and talk about real achievements unless you are ok with mediocre. Iâm not.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1825</wp:post_id>
  <wp:post_date>2015-06-04 15:47:54</wp:post_date>
  <wp:post_date_gmt>2015-06-04 07:47:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scrum-dogmas-and-actual-results</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11322193721]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/+ViktorGrgic/posts/TLG1tfDb3vZ]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391172</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_5391176</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"SN0AO4XWV7";s:4:"date";s:29:"Thu, 04 Jun 2015 07:47:58 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"K9ubJWp55BMwqC2IfCsAAA==";s:10:"set-cookie";s:154:"lidc="b=TB62:g=75:u=131:i=1433404078:t=1433488574:s=AQEJffBv0vaZnAsygnkC5QZXOwT4PlHj"; Expires=Fri, 05 Jun 2015 07:16:14 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1429351082522",
  "requestId": "SN0AO4XWV7",
  "status": 401,
  "timestamp": 1433404078289
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB62:g=75:u=131:i=1433404078:t=1433488574:s=AQEJffBv0vaZnAsygnkC5QZXOwT4PlHj"";s:7:"expires";i:1433488574;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5350037;s:52:"https://twitter.com/vgrgic/status/606366770471903232";}s:8:"facebook";a:1:{i:5350022;s:38:"https://facebook.com/10206627324378644";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391179</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391162</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1853</wp:comment_id>
    <wp:comment_author><![CDATA[SutoCom]]></wp:comment_author>
    <wp:comment_author_email>dennes777@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.sutocom.net</wp:comment_author_url>
    <wp:comment_author_IP>108.220.74.119</wp:comment_author_IP>
    <wp:comment_date>2015-06-08 21:17:02</wp:comment_date>
    <wp:comment_date_gmt>2015-06-08 13:17:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://sutocom.net/2015/06/08/scrum-dogmas-and-actual-results/" rel="nofollow">SutoCom Solutions</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>9083961</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1433769422</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1433769422</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1433769422.26086711883544921875;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"sutocom";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Do 12 Agile Principles scale?</title>
  <link>http://leanarch.eu/2015/10/08/do-12-agile-principles-scale/</link>
  <pubDate>Thu, 08 Oct 2015 08:46:25 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1828</guid>
  <description/>
  <content:encoded><![CDATA[Do you remember those 12 Agile principles written a loooong time ago? Well, the whole Agile thing is kind of based on them.

<ol>
    <li>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.</li>
    <li>Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.</li>
    <li>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.</li>
    <li>Business people and developers must work together daily throughout the project.</li>
    <li>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.</li>
    <li>The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.</li>
    <li>Working software is the primary measure of progress.</li>
    <li>Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.</li>
    <li>Continuous attention to technical excellence and good design enhances agility.</li>
    <li>Simplicity--the art of maximizing the amount of work not done--is essential.</li>
    <li>The best architectures, requirements, and designs emerge from self-organizing teams.</li>
    <li>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.</li>
</ol>

Of course, after such a long time these could be outdated. Since we love continuous improvement, the same could be applied to principles too right!? Well, a funny aspect of really good principles, is that they do not change easily.

I donât have a good reason to suggest any change. Although there are few words here and there that could be different (e.g. overemphasis of projects instead of just product development), the reason to suggest Agile principles 2.0 would be too weak.

Nevertheless, a lot is written about how Agile Manifesto is outdated, something that was hot in 2001, but world has changed in last 10+ years. Therefore some improvements are suggested.

So, this is all great. Good discussions. But, what really bugs me are the compromises.

<a href="https://vgrgic.files.wordpress.com/2015/10/improvements_vs_compromises1.jpg"><img class="aligncenter size-full wp-image-1832" src="https://vgrgic.files.wordpress.com/2015/10/improvements_vs_compromises1.jpg" alt="improvements_vs_compromises" width="646" height="393" /></a><!--more-->

There is usually an implicit assumption that above principles do not scale when tried to be implemented in a large project / organisation. What I mean with âscaleâ is multiple teams working together to deliver a product within a large (complex) organization.

AÂ friend of mine participated a SAFe training where trainer tried to teach him that many of the Agile principles cannot be scaled. The reasoning behind such teaching is that since they donât scale, complex organisations need a complex framework such as SAFe. In other words, SAFe explicitly brakes with many of the above principles in order to accommodate the needs of existing organisational complexity.

Just to provide one example among many. About principle 12, this is a quote from SAFe website:

<blockquote>As Agile practices matured and became adopted by larger teams and teams of teams, however, there comes a point at which emergent design is an insufficient response to the complexity of large-scale system development. Simply, it is not possible for teams to &lt;summarized: deal with architecture&gt;</blockquote>

Since the above principles are the best reference we currently have what Agile development means, we should ask ourselves if SAFe can be called Agile.

<h2 class="h1">How do principles work in a scaled context?</h2>

Since answering this question could lead to a whole book, and not a blog post, I will provide only clues and references. A very short answer is Large-Scale Scrum (LeSS) which deals directly with organisational change required to make above principles a reality. Nexus framework has a similar approach, although it deals with organisational change implicitly through explanation how teams work together.

So, the 12 principles definitely scale, therefore stating otherwise is at best an opinion. One I disagree with.

<blockquote>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.

Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.

Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.</blockquote>

These strongly relate to frequent feedback loops directly between customer and teams that deliver software. Also, early and continuous delivery translates into making sure that lead time is weeks or shorter, and not 3+ months. Therefore, having translators between teams and customer, gatekeepers, approvals, management layers, silos / functional departments (Architecture, BA, Dev, QA, Operations, etc.) is not an effective organisational form. This requires restructuring into cross-functional teams that are capable of delivering features autonomously in order to achieve continuous delivery and capability of any team member to talk to customer directly, and inspect and adapt. In other words, it requires organizational descaling, reduced complexity where self-managing, cross-functional, long-lived team is the basic building block.

<blockquote>Business people and developers must work together daily throughout the project.</blockquote>

A large organisation that applies this principle will distinguish between decision making on priority and who talks to who, since aÂ major worry in a corporate world is a mess if the collaboration between many teams and business is not âcontrolledâ. The applied framework and/or practices should encourage people to work as closely as possible, while prioritization (what shall teams deliver and spend money on?) is centralised in form of a product owner, which has to come from business.

<blockquote>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.</blockquote>

This principle requires <a href="https://en.wikipedia.org/wiki/Theory_X_and_Theory_Y">Theory Y</a> way of thinking, where management changes behaviour, where people who collaborate and deliver value are placed at the center. The processes, roles, and responsibilities become secondary. This implies reduction of roles and complex so-called supportive structures such as PMO, program and project management. Different way of dealing with portfolios and budgeting (e.g. <a href="http://bbrt.org" target="_blank">Beyond Budgeting</a>), work is assigned to stable long-lived teams and not resources assigned temporarily to a project or program.

<blockquote>The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.</blockquote>

Obviously! Nevertheless, large organizations have often resourcing model (available people are assigned to a project), and not teams model. This produces so called teams that are dispersed, sometimes over multiple continents. Face-to-face conversations over internet is at best very cumbersome, especially with timezone differences. A large organisation needs to switch from this resourcing model to stable long-lived colocated teams model. Also major projects are assigned to already existing teams, and not anymore other way around (resources found and assigned to this large project).

<blockquote>Working software is the primary measure of progress.</blockquote>

This principle is probably one of the most compromised of all. "What does âworkingâ even mean anyway?â. Well, it means going âall the wayâ. Working means it works in the hands of a user and / or produces actual value for the customer. A product that is so called âfinishedâ by a team, but still needs to go through e.g. final testing or integration with some other product is not âworkingâ. If we compromise with this, then basically any piece of software can be called working.

Therefore, development teams that deliver their stuff (e.g. a component or not completely tested product) is secondary to a really working product. In order to embrace and implement this, a large organisation requires system thinking. Seeing the whole, the end result is the primary focus. Continuously improved Definition of Done is a powerful tool in this process.

<blockquote>Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.</blockquote>

This one implies:

<ul>
    <li>Long-lived teams instead of resource pools</li>
    <li>Development stops only when product is no longer valuable.</li>
    <li>Overall quality and operations are integral part of Agile development. It is otherwise not sustainable.</li>
</ul>

<blockquote>Continuous attention to technical excellence and good design enhances agility.</blockquote>

For large organisations this means a craftsmanship culture. One where career path includes continuously growing technical expertise. Where highly skilled developers are respected, valued, and paid accordingly. A culture where these teams with these highly educated people decide how much time is required to do things properly. Also a culture where to perform also means to learn a lot, learn what good design means, since software development is essentially a knowledge creation process.

<blockquote>Simplicity--the art of maximizing the amount of work not done--is essential.</blockquote>

This principle encompasses much more than what we often assume. It is Â challenging to achieve this in large organisations. At the same time, reducing complexity in organization, requirements, development process and architecture results in one of the biggest waste reductions typically encountered. This requires lean and system thinking tools, lean startup practices. Also, feature teams (instead of component teams) that are at least much more capable of looking at combination of components in order for simplification to start to happen. A team that deals with a single component might see the problem, but it is not empowered to resolve it.

<blockquote>The best architectures, requirements, and designs emerge from self-organizing teams.</blockquote>

There is a tremendous amount of articles and blog posts related to tension and compromise between these two worlds. At the same time, there are also large companies that do embrace this principle and in the process have discovered nice practices. Many of them are explained on <a href="https://less.works">LeSS site</a>, and none of them requires someone outside to define and deal with architecture:

<ul>
    <li>Initial, overall, and per team Product Backlog refinement</li>
    <li>Design workshops with whole team (not only tech leads or architects)</li>
    <li>Multi-team design workshops for broader design issues</li>
    <li>Architects and engineers are regular team members and write code</li>
    <li>Tiger team</li>
    <li>Design / architecture community</li>
    <li>Component mentors</li>
    <li>Product vision workshops (with everyone)</li>
    <li>1-hour decision making</li>
    <li>Architectural concern wall</li>
    <li>Spike</li>
    <li>etc.</li>
</ul>

<blockquote>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.</blockquote>

In case of multiple teams, representatives of teams have an Overall Retrospective together with ScrumMasters and managers. They discuss cross-team and system-wide aspects.

<h2>Conclusion</h2>

WhileÂ many tell me that something is not possible, I prefer making things happen especially if they seem impossible. In this case, it is not even a question if itÂ is possible or not. It happens already!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1828</wp:post_id>
  <wp:post_date>2015-10-08 16:46:25</wp:post_date>
  <wp:post_date_gmt>2015-10-08 08:46:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>do-12-agile-principles-scale</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="less-framework-2"><![CDATA[LeSS framework]]></category>
  <category domain="category" nicename="scrum"><![CDATA[scrum]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[6260502]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/+ViktorGrgic/posts/fmxNiZ4MLxC]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15601720203]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391172</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=6057808630810497025&type=U&a=3AOw]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391176</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5350037;s:52:"https://twitter.com/vgrgic/status/652042947056156672";}s:8:"facebook";a:1:{i:5350022;s:38:"https://facebook.com/10207618588479627";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391179</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391162</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1986</wp:comment_id>
    <wp:comment_author><![CDATA[vgrgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>112.120.103.87</wp:comment_author_IP>
    <wp:comment_date>2015-10-24 15:30:31</wp:comment_date>
    <wp:comment_date_gmt>2015-10-24 07:30:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, it would be much more precise if SAFe is explained in such way. It would be more interesting and possibly useful as some kind of transition for some situations. A more honest expectation would be a significant compromise. Unfortunately, SAFe is claimed to be Agile. Effect of this is that a company that has introduced SAFe thinks they can compare themselves with much leaner organizations. Since they often also lack evidence-based information, actual result is missed.
A much worse effect is that meaning of word Agile is diluted in the process. This is not only caused by SAFe, but also tools vendors and large consultancy firms.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1445671832</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1445671832.057547092437744140625;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1445671832</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1969</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Ebbage]]></wp:comment_author>
    <wp:comment_author_email>michael.ebbage@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://agilesetchu.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>157.203.242.36</wp:comment_author_IP>
    <wp:comment_date>2015-10-08 18:32:08</wp:comment_date>
    <wp:comment_date_gmt>2015-10-08 10:32:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'd describe SAFe as a framework that wraps around Agile, but I don't consider the framework itself to be agile.
That's not necessarily a criticism - it depends what your looking for. Low-level teams work within a more agile remit, but the portfolio level aspects are far removed from that mindset. Some businesses are happy with that.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>51116125</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1444300330</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1444300329</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1444300330.3438680171966552734375;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"michaelebbage";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>DevOps principles</title>
  <link>http://leanarch.eu/2016/02/13/devops-principles/</link>
  <pubDate>Sat, 13 Feb 2016 04:02:22 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/2016/02/13/devops-principles/</guid>
  <description/>
  <content:encoded><![CDATA[So, I got this question about what kind of principles did we follow when introducing this thing called DevOps. I have destilled the principles here.
They are somewhat based / inspired by a <a href="http://radify.io/blog/four-principles-of-devops/">Gavin Davies blogpost</a>.

<img class=" size-full wp-image-1846 aligncenter" src="https://vgrgic.files.wordpress.com/2016/02/tumblr_inline_mhe4zls4sn1qz4rgp.png" alt="tumblr_inline_mhe4zls4Sn1qz4rgp" width="240" height="244" />

<!--more-->

<h3>Whole Product Focus</h3>

<ul>
    <li>Customer is interested in continuous value (less of negative one - issues, and more of positive one - features), not development vs. support</li>
    <li>Product is finished when it is retired from production</li>
</ul>

<h3>No Silos</h3>

<ul>
    <li>Team that delivers customer value has capability for development and support</li>
    <li>Cross-functional and cross-component team owns the product and has full responsibility for everything related to the product</li>
    <li>Team defines and continuously improves working agreements regarding development vs. operations</li>
</ul>

<h3>Automated feedback</h3>

<ul>
    <li>Before production - highest quality and early discovery of problems</li>
    <li>In production - built for fast analysis, resolution and low impact (not roll-back)</li>
    <li>Development in service of operations (built for easy operations), operations in service of development (root cause data to solve and prevent repetition)</li>
</ul>

<h3>Perfection goals</h3>

<ul>
    <li>Product runs itself, doesnât require support</li>
    <li>Deployment is instant</li>
    <li>All issues discovered and solved before production</li>
    <li>Every team member does both operations and development</li>
</ul>

Happy to hear any feedback.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1844</wp:post_id>
  <wp:post_date>2016-02-13 12:02:22</wp:post_date>
  <wp:post_date_gmt>2016-02-13 04:02:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>devops-principles</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/+ViktorGrgic/posts/emDMYbGm8uV]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[44342]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19753646618]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391172</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_5391176</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"5C29IG6EP0";s:4:"date";s:29:"Sat, 13 Feb 2016 04:02:31 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:10:"set-cookie";s:155:"lidc="b=TB62:g=204:u=183:i=1455336151:t=1455418499:s=AQEiUNXltXcUg6vhHgFvkJ1qKcgSBXXl"; Expires=Sun, 14 Feb 2016 02:54:59 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"slvO+IRkMhQA2mAtWysAAA==";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1449452811496",
  "requestId": "5C29IG6EP0",
  "status": 401,
  "timestamp": 1455336151900
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:81:""b=TB62:g=204:u=183:i=1455336151:t=1455418499:s=AQEiUNXltXcUg6vhHgFvkJ1qKcgSBXXl"";s:7:"expires";i:1455418499;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5350037;s:52:"https://twitter.com/vgrgic/status/698356554731380736";}s:8:"facebook";a:1:{i:5350022;s:38:"https://facebook.com/10208449064441007";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391179</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391162</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How about Portfolio Management?</title>
  <link>http://leanarch.eu/2016/03/31/how-about-portfolio-management/</link>
  <pubDate>Thu, 31 Mar 2016 07:37:02 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1863</guid>
  <description/>
  <content:encoded><![CDATA[<strong>An organization that adopts LeSS (Large-Scale Scrum) does not need portfolio management in the form we usually know it. Organizational descaling that comes along with LeSS removes the need for project, program and portfolio management.</strong>

Let's explore in detail how that works.

<!--more-->

There are two common kinds of Portfolio Management: project and product.

<h2>Project portfolio</h2>

It is by far the most common form. Project portfolio management is a continuous process of decision making when to start / stop a project, and budget / people to assign.
Project portfolio is based on idea that you have many projects and you need to manage them. Idea is that Project portfolio is useful since projects tend to become expensive and miss deadlines. It is a way to somehow gain control of projects, whether they are waterfall or so called Agile.

The reasoning behind the need is based on centralized decision making, otherwise everyone starts projects without any control. Once people are assigned to a project, they shouldn't be reassigned to something else. Top-level management knows what is best for company, therefore everyone becomes restrained by projects. The only place where decisions are revised is Project Portfolio workshops.

So, what are the problems in this way of working:

<ul>
    <li>Everything in project portfolio management is about projects. Many dysfunctions related to projects become even bigger:</li>
    <li>The goal is to finish as many projects as possible. Value creation is only implicitly part of portfolio management process.</li>
    <li>Emphasis on managing projects tends to create two separate realities: One of actual value created and effectiveness, and other is concerned with project budgets, resources, when to start or stop one. Successful project is one that is finished on time and within budget, regardless of value / risk created. In other words, the focus is on "work", and not the actual "thing" (product) that provides direct value.</li>
    <li>Trying to fix a fundamentally broken system of complex project management by <em>better</em> management from outside of the system, without actually doing something about the system itself.</li>
    <li>Tightening the control drives people to become ever more creative in gaming the system. E.g. fake project reporting that is just good enough to keep management happy, and still keep things going with longer deadlines / more budget.</li>
</ul>

<h3>From big to smaller projects</h3>

Big, long and costly projects are a bad idea. Nowadays, everyone seem to agree on this. Therefore, some would say, inspired by agile development, we should have many small projects and manage those in so called "agile portfolio management".

When looking closely, we see tremendous number of projects and they get finished maybeÂ faster. There are so many of them that people are assigned to multiple projects at the same time. In fact, many of these projects when finished, don't produce any value yet. In order to produce actual value, concept of "program" is introduced. Each of the projects has a project manager, a program has aÂ program manager, there is PMO office, etc. I think I would rather have long and costly projects :-).

A deeper and less visible problem described in theÂ <a href="http://www.amazon.com/Large-Scale-Scrum-More-Craig-Larman/dp/0321985710/ref=sr_1_1?ie=UTF8&amp;qid=1459409012&amp;sr=8-1&amp;keywords=Large-Scale+Scrum" target="_blank">new LeSS book</a> that will be published soon is the problem ofÂ <strong>big-batch requirements prioritization.</strong> This results in big upfront prioritization and planning related to work for each product. Therefore, although we seem to have removed the problem of big-batch prioritization of a large project, it is largely replaced by complex portfolio management.

<h3>Move people faster from project to project</h3>

Another form of so calledÂ "agile portfolio management" is where teams potentially work every iteration on a different project. This is even worse than small projects approach. Why? Not only there is no focus for people, there is also misunderstanding what iterative and incremental developmentÂ means. Business agility is NOT the ability to move people or teams around as pleased.

In some cases, "agile portfolio management" is explained as a way to assign people instead of teams to work. It means that individuals work one iteration with one group of people, and next one with a totally new group. This results in very wasteful tracking, reporting and task-switching and complete disregard of human need to belong to a stable and safe group, a team.

The project portfolio management is trying to solve a problem by fiercely treating the symptoms, and sometimes making whole situation only worse. It is focussing on the process for managing work, and not work itself.

<h3>How does LeSS deals with Project Portfolio Management?</h3>

In LeSS, there is one Product Backlog per product, managed by one Product Owner regardless of size. LeSS organization does not need projects in order to deliver a product in iterative and incremental manner. Teams are stable and receive all work from Product Owner. This work is for the benefit of a single product and all teams have whole product focus.

Work regarded as portfolio management, such as choosing what to do and what not to do, is part of Product Backlog prioritization.

Therefore, if there are no projects, then there is no need for Project Portfolio Management.

<h3>But, what about delivery of multiple products in combination as part of a program?</h3>

In such case, the product is incorrectly defined. If there is a big dependency between parts we wrongfully call "products", then those parts together would be a better definition of a product.

<h3>What if one product suddenly becomes much less important?</h3>

Since a product is broadly defined, we are talking about a big shift in organization's strategy. Even huge enterprises have limited number of products as perceived by customers. Nevertheless, teams could be moved from one to another product. This is something teams are not likely toÂ experience often.
Organization that encounters such problem has already achieved rather high level of business agility. It is a luxury problem.

<h2>Product portfolio</h2>

Product-based portfolio is almost a completely different story. Although both are called portfolio management, there is little similarity between the two.
As mentioned before, an organization has at best a handful of products. Managing this portfolio is part of strategic planning. It is less complex and intrusive into product delivery than Project Portfolio management. The main participants are Product Owners together with management concerned with strategy. Each Product Owner will explain own Product Backlog, share the vision and target for next few sprints. The outcome of this workshop is re-alignment with company strategy with possible changes in Product Backlogs.

The focus is also on measuring value created. Every Product Owner uses own or shared business value model for assessment. When strategy changes, so does the value model. Value model is a concrete representation of strategy, used to assess product achievements and product backlog.
E.g. "How many active customers do we have with this product?". Number of active customers is a value model, and this aspect might become more, less or not relevant in time.

In turn, this information drives decision making for not only product backlog, but possibly also how many teams should be involved in product delivery.

Teams will typically not notice much since they are already accustomed to continuously changing Product Backlog regardless of the reason why it changed.

<h2>We are running so many projects and programs, how can we ever switch to this model?</h2>

Start refocusing towards product delivery and value creation. Don't accept to have this only at the end of a project / program. Value those more than encompassing projects. I've noticed that once customer keeps getting value, management starts to transform this limited project or program into one which runs longer and has more budget. And this is great! Who cares if a project is not within time and budget anyway? :-)

The next step is that people speak less and less about project / program stuff. There is less or no need for project and program management anymore. LeSS adoption will naturally drive this process.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1863</wp:post_id>
  <wp:post_date>2016-03-31 15:37:02</wp:post_date>
  <wp:post_date_gmt>2016-03-31 07:37:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-about-portfolio-management</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="less-framework-2"><![CDATA[LeSS framework]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/+ViktorGrgic/posts/DZaEjSuycQp]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[21303767631]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391172</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=1513462&stype=M&topic=6121208485137891328&type=U&a=4bGB]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391176</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350035</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5350037;s:52:"https://twitter.com/vgrgic/status/715442799919779840";}s:8:"facebook";a:1:{i:5350022;s:38:"https://facebook.com/10208920170818372";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391179</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391162</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2253</wp:comment_id>
    <wp:comment_author><![CDATA[bourgeon (@bgn9000)]]></wp:comment_author>
    <wp:comment_author_email>bgn9000@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/bgn9000</wp:comment_author_url>
    <wp:comment_author_IP>219.79.46.238</wp:comment_author_IP>
    <wp:comment_date>2016-09-18 21:09:11</wp:comment_date>
    <wp:comment_date_gmt>2016-09-18 13:09:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So true, I can see around me this program management on top of a broad agile projects setup to replace waterfall former projects. Even if people are convinced that projects in IT like campaigns in Marketing are a real issue in this agile mindset transformation, the whole organization from budget perspective (CFO's role) is hard to change because of so many impacts, so many risks. Then instead of doing a stop and fix, bimodal IT is kept until the transformation will do its job. But doing that, this delays and maybe leads to a lasting failure.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/671985409/phil_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>110369401</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1474204154</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1474204153</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1474204153.6069839000701904296875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Dependencies, teams and microservices</title>
  <link>http://leanarch.eu/2016/12/21/dependencies-teams-and-microservices/</link>
  <pubDate>Wed, 21 Dec 2016 08:40:46 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=1900</guid>
  <description/>
  <content:encoded><![CDATA[The Candidate LeSS trainers mailing listÂ is a place where passionate people have interesting discussions. This post is a result of one of those discussions.

An assumption in agile community is that scaling agileÂ is mainly about <em>managing and reducing dependencies;Â </em>either between teams or with others outside of a product group. This is used as a reason to introduce additional structures and roles, such as architecture owner, program / project manager, integration or a system team. These groups will manage dependencies and have overall picture.

An alternative is presented: microservice-driven teams organization. Each team works relativelyÂ <em>independently</em> from other teams, and <em>owns</em> set of microservices. Well...let's see.

Just like embracing instead of managing changes (one of the Agile principles), this post explains why we should embrace dependencies instead of trying to avoid or "manage" them.

Therefore, LeSS doesn't have roles, structures or architectural solutions toÂ manage or reduce dependencies.

Of course, dependencies do not magically stop to exist in LeSS. There is something else going on. Let's go through common types of dependencies.Â <!--more-->

<h2>Dependencies between Product Backlog items</h2>

AÂ customer problem is split into Product Backlog items. This act of refinement can introduce dependencies. Especially when split improperly. In other words, from architectural point of view. E.g. a larger item from customer becomes: a change in front-end, change in backend, and change in connectivity.

On theÂ other hand, splitting from aÂ customer point of view reduces dependencies between constituent parts.

Nevertheless, no matter how much we try, items in product backlog are still often interrelated. In fact, this dependency is a good thing. It also says something about coherence as we continuously deliver a single product.

<h2>Dependencies in design</h2>

At some point, itemsÂ areÂ small enough to be delivered comfortably by a single team in a single sprint. It sounds as if dependencies are resolved. Each team can deliver one or multiple items independently from other teams.

Well..., not really. There is also something called coherent design or architecture. Having each team independently design own solution is not a good idea unless we talk about localized changes.

Therefore, again, we want our design to be consistent. In other words, reducing dependencies in design activities is not a good idea. Coordination or shared design activitiesÂ with multipleÂ teams should be encouraged.

<h2>Dependency in code</h2>

A coder in one team makes changes in the same placeÂ as a coder in another team. We used to deal withÂ this by having branches in order to prevent conflicts in code. We have also learned that this "conflict prevention" makes problems bigger later on when we need to merge.

Also cycle time is not going to look good. Every change needs to be followed up by a possible merge, checking, fixing, testing, etc....

Instead, weÂ favor nowadays "trunk-based development". All teams, regardless of amount of teams, commit code into same trunk and integrate continuously. Therefore, conflicts are not avoided anymore but resolved immediately. Coders talk to each other as soon as conflict occurs. Since each conflict is limited in size, a resolution is relatively easy. It even triggers usefulÂ cross-team coordination.

In other words, we want teams to coordinate as much as possible for the purpose of continuously integrating their work into a single potentially shippable increment.

<h2>But, what about microservices?</h2>

Aren't microservicesÂ solving dependencies problem?

First, we need to mentionÂ a misconception aboutÂ teams and microservices. The idea of each team owning (set of) microservices is NOT driven by microservices architecture, but by a bounded context in customer domain. Teamâs focus is aÂ specific part of customer domain that happens to entail number of microservices. There is a clear segregation through interfaces with other bounded contexts. Therefore, one team and nobody else will own and change specificÂ microservices. A bigÂ assumption is that there is no shared code or shared services or very limited sharing.

Therefore, a difference with feature team concept is <strong>shared ownership of microservices</strong>. Sharing is encouraged in feature teams and discouraged in microservices-based teams organization.

[caption id="attachment_2035" align="alignnone" width="800"]<img class="alignnone size-full wp-image-2035" src="https://vgrgic.files.wordpress.com/2016/12/scannable-document-on-21-dec-2016-14_00_50.png" alt="scannable-document-on-21-dec-2016-14_00_50" width="800" height="520" /> Microservices-driven organization and delivering cross-service features[/caption]

A customer wants a product that fulfills a need. A customer doesnât want a microservice. Microservices is a nice architectural approach, but we are making a thinking mistake by somehow equating individual part (a microservice) to the combination of parts (set of microservices that provide together value to aÂ customer). A customer requestÂ <strong>will</strong> cross boundaries of one group of microservices, regardless of how well we design those groups. The question is howÂ do we act in such situation.

<blockquote>"We have resolved this by a better segregation. Our features don't cross bounded contexts"</blockquote>

No, you most probablyÂ started to duplicate code and data in order to avoid coupling between services and creating a big mess in the process. We already need to deal with too many solutions originally defined by a simplistic architecture. Let's not go that way.

Since delivering a feature has often impact acrossÂ groups of microservices, it will require multiple teams to deliver it. In such situation, a speed of delivery of a single microservice is not relevant if one needs to wait for other services to be changed anyway.

Second, in large products / in time, microservices and their contexts have rather stable structure, while this can hardly be said for business needs / new requirements. Changing needs will start to mismatch structure of microservices. Also, some areas (groups of microservices) require no change. What do we do with teams thatÂ focus only on their own group of microservices?

The main argument against organization according to microservices is that teams who are not bounded by microservices <strong>can get stuff done</strong>Â <em>and</em> also limit themselves to a group of microservices for better focus if they want to. At the same time, a microservice-bounded team is limited in capability to deliver. One has the flexibility of both, while the other one does not.

[caption id="attachment_2065" align="alignnone" width="800"]<img class="alignnone size-full wp-image-2065" src="https://vgrgic.files.wordpress.com/2016/12/cross-component_teams.png" alt="cross-component_teams" width="800" height="566" /> Shared ownership of microservices or "shared services model"[/caption]

Sam Newman in his book âBuilding Microservicesâ proposes several solutions as anÂ alternativeÂ to what he calls âshared servicesâ model (multiple teams working on a service). These are not literal statements, but summarized by me:

<blockquote><em>Microservice teams âmove on to something elseâ until their dependency on other microservices is resolved.</em></blockquote>

This reasoning not only increasesÂ overall time to deliver but kills the idea of working on most important. In other words, team invents their own priority.

<blockquote>Shift people between teams in order to speed up development in the bottleneck.</blockquote>

This is a bad suggestion since it not only barely solves anything short term, it messes up the organization of teams, stability and the way of working.

<blockquote>Split request that affects multiple microservices even further until each of them touches only one microservice.</blockquote>

This implies that parts become technical, therefore not meaningful anymore to the customer. Besides, what would you rather have: One team making sure tiny parts are working together, or many teams making sure tiny parts are working together.

<blockquote>Internal Open Source: If above is insufficient or unwanted, then we let teams change any service they need to change where code custodians make sure things are done properly.</blockquote>

In other words: teams are not bounded anymore by a single group of microservices and start to share. :-)

Nevertheless, if a microservice is truly a business capability, which is not just a for customer meaningless component, then it could be ok that team specializes in one or aÂ limited set of microservices. This is not driven by the idea of microservices, but customer-domain specialization that happens to correlate with microservices. Therefore, it is not aÂ dichotomy of either having microservice or feature (cross-component) teams. It could very well mean theÂ sameÂ since a feature team doesnât deal with <em>all</em> components anyway, especially when product is large.

<h2>In LeSS, we like dependenciesâ¦.euhm, coordination</h2>

As concluded from each type, dependencies are not a problem. In contrary, we want and need teams to share work and coordinate, since that makes our products better. This behavior encourages teams to have whole product focus, to deliver fully integrated product instead of only parts.

At the same time, the real challenge is the ways we coordinate. Postponed or asynchronous coordination through intermediate roles, groups and fixed structures is a cause of many problems driving a need for managing or resolving dependencies, while direct, free-flowing and immediate coordination has opposite effect.

LeSS strongly encourages direct cross-team collaboration without any kind of indirection with the goal toÂ createÂ an integrated product. This goal drivesÂ focus and exposes potential for improvement.Â In addition to just talking to each other and several other coordination practices, a number of meetings are shared between teams:

<ul>
    <li>Sprint planning One (team representatives with Product Owner)</li>
    <li>Multi-team Sprint Planning Two (teams discuss and design similar or related features)</li>
    <li>Overall Product Backlog Refinement (team representatives with Product Owner)</li>
    <li>Multi-team Product Backlog Refinement (teams or few representatives, subject matter experts)</li>
    <li>One Sprint Review for all teams</li>
    <li>Overall Retrospective</li>
</ul>

This supports cross-team learning, standardization, delivery of a cohesive product, coordination of shared work. Therefore, we don't call this <em>dependencies</em> since it is something welcomed.

You can find more about this in the book: <a href="https://www.amazon.com/Large-Scale-Scrum-More-Addison-Wesley-Signature/dp/0321985710" target="_blank">Large-Scale Scrum by Bas Vodde and Craig Larman</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1900</wp:post_id>
  <wp:post_date>2016-12-21 16:40:46</wp:post_date>
  <wp:post_date_gmt>2016-12-21 08:40:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dependencies-teams-and-microservices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="agile-architecture"><![CDATA[agile architecture]]></category>
  <category domain="category" nicename="less-framework-2"><![CDATA[LeSS framework]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_google_plus_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://plus.google.com/+ViktorGrgic/posts/HuT13mLjf7C]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[30220238241]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391172</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350032</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_5391176</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:5350037;s:52:"https://twitter.com/vgrgic/status/811491627478974465";}s:8:"facebook";a:1:{i:5350022;s:38:"https://facebook.com/10211385308525274";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391179</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391162</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350022</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2318</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>223.197.252.78</wp:comment_author_IP>
    <wp:comment_date>2017-02-20 18:00:25</wp:comment_date>
    <wp:comment_date_gmt>2017-02-20 10:00:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Tom,

It is mainly the second one (strong collaboration). You usually have one of the team members be a facilitator for architecture community. You can read more about these practices here e.g.: https://less.works/less/technical-excellence/architecture-design.html

I have also written number of posts on the subject. Check out list of posts.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1487584827</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1487584826</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1487584826.9734299182891845703125;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>2053345047</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2317</wp:comment_id>
    <wp:comment_author><![CDATA[tomheisterkamp]]></wp:comment_author>
    <wp:comment_author_email>tj.heisterkamp@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>85.159.97.4</wp:comment_author_IP>
    <wp:comment_date>2017-02-20 17:50:11</wp:comment_date>
    <wp:comment_date_gmt>2017-02-20 09:50:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Viktor,
Thanks for the great post! I do have a question about this. In a more 'traditional' world when a feature is requested there is someone (e.g. an architect) who oversees all the needed or 'touched' components by the request. How does this work in a world with microservices (with which I am not very familiar)? Is there someone who oversees the needed or 'touched' microservices? Or is this the art of strong communication between the teams?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>58826318</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>2053086391</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1487584212</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1487584212.07641696929931640625;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"tomheisterkamp";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1487584212</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2302</wp:comment_id>
    <wp:comment_author><![CDATA[Viktor Grgic]]></wp:comment_author>
    <wp:comment_author_email>viktor@leanarch.eu</wp:comment_author_email>
    <wp:comment_author_url>http://leanarch.eu</wp:comment_author_url>
    <wp:comment_author_IP>175.111.106.162</wp:comment_author_IP>
    <wp:comment_date>2017-01-12 23:57:10</wp:comment_date>
    <wp:comment_date_gmt>2017-01-12 15:57:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Stanislav,

I agree with that. It is indeed not possible for 100 people to share *everything*. At the same time, this does not mean that there is no sharing at all. The larger the group and therefore overall product, the more microservices you will have which are shared and maintained by only one or few teams.

Do we have a situation where it is better to wait than pick up yourself as a team? Of course! Just like with the previous statement, one does not exclude the other. You want to be able to deliver a request within a sprint or faster as often as possible.

Is there any rule in this? Definitely not. That is my whole point. Leave up to each individual team to discover how much and how fast team can learn, work cross-microservices and therefore share with other teams.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>6260502</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>681425360</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1484236632</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1484236631</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1484236631.7715890407562255859375;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"vgrgic";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2298</wp:comment_id>
    <wp:comment_author><![CDATA[Stanislav]]></wp:comment_author>
    <wp:comment_author_email>stanislav.ondac@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>95.105.212.127</wp:comment_author_IP>
    <wp:comment_date>2017-01-11 07:00:22</wp:comment_date>
    <wp:comment_date_gmt>2017-01-10 23:00:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If we are talking about 10 to 20 people and few microservices, then sharing could be OK. One programmer is able to understand 3-5 bigger microservices (with underlying business logic behind them) in a sufficient quality. So he can make changes to them if necessary. So basically everyone is able to change every microservice (lets say, with a little help from collegues). Ideal world - no bottlenecks.  
But if we are talking about 100 people and dozens of microservices, then it is much more difficult. The programmer is not able to make changes into a microservice which he never seen before (because the developer ho created it has now more important work to do - lets say o another microservice) . When there is a bigger project, then it could be still quiet OK, for him to learn the new microservice (with the underlying business logic). But when we are talking about smaller changes, then it just would not be efficient for him to start to learn the new application/microservice. It would be better to wait (lets say for a week) for someone else(who knows the microservices better), as learning for 2 weeks to be able to make some simple changes(which he forgets, if he will not be working with this microservice for a longer period of time). And the quality will still be questionable.

What I am trying to say is, that there are many real situations, where the most efficient way is just to wait... If there was some magical solution how to prevent that, I think someone would have already found it :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1484089224</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1484089224.8820450305938720703125;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"stanislavondac";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1484089225</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2295</wp:comment_id>
    <wp:comment_author><![CDATA[Joshua Clark]]></wp:comment_author>
    <wp:comment_author_email>arionan@mail.com</wp:comment_author_email>
    <wp:comment_author_url>https://www.cs-cart.com/</wp:comment_author_url>
    <wp:comment_author_IP>89.40.119.247</wp:comment_author_IP>
    <wp:comment_date>2017-01-05 15:37:39</wp:comment_date>
    <wp:comment_date_gmt>2017-01-05 07:37:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you for the income statement, it is very important information for me.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1483601859</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1483601859.9066269397735595703125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1483601860</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>How do we pay people in a LeSS adoption?â</title>
  <link>http://leanarch.eu/2018/08/16/how-do-we-pay-people-in-a-less-adoption%e2%80%8b/</link>
  <pubDate>Thu, 16 Aug 2018 07:37:06 +0000</pubDate>
  <dc:creator>vgrgic</dc:creator>
  <guid isPermaLink="false">http://leanarch.eu/?p=2142</guid>
  <description/>
  <content:encoded><![CDATA[In every LeSS course and LeSS adoption, the question is asked how do we pay team members, Scrum Masters, and even managers. The reason why this question is always raised is due to significant reduction of organizational complexity. The number of roles, layers, positions is much less to choose from or grow towards. This seems to create some kind of communist system :-). Nothing is further from the truth.

<img class="aligncenter size-medium wp-image-2143" src="https://vgrgic.files.wordpress.com/2018/08/screen-shot-2018-08-16-at-09-34-44.png?w=600" alt="Screen Shot 2018-08-16 at 09.34.44" width="300" height="260" />

Let's go through what is already known and described by others.

Esther Derby advises in <a href="http://www.estherderby.com/2010/07/performance-without-appraisal-addressing-the-most-common-concerns.html">her blog post</a> () to:

<ul>
    <li>Don't rate and rank individuals. Get rid of performance reviews and merit pay.</li>
    <li>Adjust salary based on the cost of living</li>
    <li>Do profit sharing with employees</li>
    <li>Adjust salaries based on the current market rate for skills and roles</li>
    <li>Increase salary / promote an individual who is "performing above others"</li>
    <li>Use existing short feedback loops (instead of an annualÂ cycle) to know how to improve as individuals. ScrumMaster plays an important role here.</li>
</ul>

In the book "Scaling Lean and Agile development", Bas and Craig give several general advices: "Avoid...Job titles", "Try...Create only one job title", "Try...Let people make their own titles; encourage funny titles" , "Try...(if all else fails) Generic title with levels", "Try...Simple internal title map to special external titles", "Avoid...Job descriptions", "Try...Simple general job descriptions", "Avoid...Career paths", "Try...Job rotation", "Try...Start people with job rotation", etc. This overview of advices give a basis for the question on how to pay people.

In the book "Practices for Scaling Lean and Agile development", Craig Larman and Bas Vodde advise completely in line with Esther's advises:

<ul>
    <li>Avoid career paths that encourage people to see coding as just an early phase</li>
    <li>Connect salary directly to the skills of an individual</li>
    <li>Teams should define their own targets and measure themselves, not management.</li>
    <li>Management should measure product performance instead of each team or individual contribution.</li>
    <li>If, for some reason, an organization doesn't want to remove performance appraisals, at least reduce the harm of such policies (page 408)</li>
</ul>

In addition to theÂ above, I would add:

<h2>Sustainable over current performance</h2>

The following is based on teaching from Bas Vodde in his course, but he cannot remember stating something similar :-).

Although individual or a team performance is important, the more pressing question is whether we wish an individual to perform well now or <strong>continuously</strong>. If we wish continuous or sustainable performance then we should assess for sustainable performance. In other words, <strong>the ability</strong> of an individual to perform. Also, we should stop measuring current performance since it might have the opposite effect on a sustainable one.

What does this mean concretely?

Sustainable performance is a resultÂ of learning,Â an increase of one's skills. In the context of Scrum and cross-functional teams, becoming multi-skilled is highly beneficial for the team and individual. This should be reflected in rewards.

<h2>Replace bonus with a one-time salary increase</h2>

Individual bonus essentially emphasizes temporary performance over a sustainable one. In reality, most HR departments have already figured out that emphasizing temporary performance and hence giving very different bonuses over the years is a bad idea. It becomes more a bonus in the name only. I have seen 2 forms of bonus systems:

<ol>
    <li>If the bonus is a significant percentage of yearly salary, then it barely fluctuates over the years unless the company has some financial problems. Fluctuations would seriously kill motivation and invite gaming of the bonus system. Initially, the bonus becomes an easier way for management to do salary corrections.</li>
    <li>If the bonus is a minor percentage of yearly salary, then it becomes aÂ symbolic way to recognize the more sustainable growth and behavior of individuals.</li>
</ol>

So, we start to see the trend here that already materializes in an increasing number of companies. Even banks are ditching bonuses. All major Dutch banks have already removed individual bonuses for employees.

<h2>So, you would pay people more if they read more books?</h2>

What if someone is making sure that he is advancing his future career by learning and getting more skills at cost of current contribution? What if someone is learning stuff and in the meantime not delivering what he is supposed to deliver?

The assumption in this thinking is that there is a disconnect between becoming multi-skilled and actual delivery in this sprint. Hence the thinking that an organization must measure and reward current individual performance in addition to sustainable aspects (skills, experience).

That happens indeed. It happens in dysfunctional teams and organizations that have serious problems of disengagement. One should understand and solve the root cause. Low level of engagement due to the unhealthy environment cannot be remedied with financial incentives.

It could also be that an individual is simply not fit for the job, or doesn't see the job as a chosen profession. The rest of the team (or manager if the team is unable) should fire the person in that case. Btw, hiring should be done by teams too.

In the end, an individualÂ with increased skills and experience will contribute more and have a positive impact right now too.

<h2>Who and how determines skills level?</h2>

The following is my interpretation of a practice I learned from Craig Larman.

Introduce a scale: Developer level 1, level 2, level 3, level 4, level 5. The baseline (level 2) is the market average for let us say a C++ developer if the product is a C++ based product. Difference between levels should be significant enough since developers skills can differ significantly. Level 5 is someone who is a well-known name in the C++ worldwide community.

Who and how assesses this is a very easy question to answer. If the manager doesn't already clearly sees who is which level compared to each other, then he already is not present enough and hence doesn't understand what is going on. This should be an easy job for a manager, and he doesn't require any special HR process or tool. A developer doesn't grow from one to another level suddenly.

As mentioned before, the hiring process should preferably be done by teams instead of a manager. Also deciding level for a newly hired person should be quite easy for a team to do. But, since this is quite sensitive and obviously effects company cost, it should usually involve theÂ manager.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2142</wp:post_id>
  <wp:post_date>2018-08-16 15:37:06</wp:post_date>
  <wp:post_date_gmt>2018-08-16 07:37:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-do-we-pay-people-in-a-less-adoption%e2%80%8b</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="agile"><![CDATA[agile]]></category>
  <category domain="category" nicename="less-framework-2"><![CDATA[LeSS framework]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpcom_is_markdown</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:5350037;s:53:"https://twitter.com/vgrgic/status/1029995498608971776";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>timeline_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1534405030]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[21136709595]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_5391172</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_5391176</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_5391179</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_5350037</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[vgrgic]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_5391162</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:30:"facebook-profile-publish-error";a:1:{i:0;a:1:{s:4:"body";s:64:"{"error":{"message":"Attempted to publish to Facebook Profile"}}";}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fb03bb0b9c9e7bf69eccd1e749e55745</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-vimeo"><iframe src="https://player.vimeo.com/video/22439234?app_id=122963" width="500" height="281" frameborder="0" title="The Mountain" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_time_fb03bb0b9c9e7bf69eccd1e749e55745</wp:meta_key>
    <wp:meta_value><![CDATA[1540554014]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
